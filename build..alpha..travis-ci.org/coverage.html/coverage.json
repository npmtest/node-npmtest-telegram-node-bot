{"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_telegram_node_bot */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/lib.npmtest_telegram_node_bot.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/lib.npmtest_telegram_node_bot.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":62}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":68}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_telegram_node_bot */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_telegram_node_bot = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_telegram_node_bot = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":61}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":75},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-telegram-node-bot && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_telegram_node_bot */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_telegram_node_bot","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_telegram_node_bot.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_telegram_node_bot.rollup.js'] =","            local.assetsDict['/assets.npmtest_telegram_node_bot.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_telegram_node_bot.__dirname + '/lib.npmtest_telegram_node_bot.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/Telegram.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/Telegram.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"(anonymous_1)","line":56,"loc":{"start":{"line":56,"column":15},"end":{"line":56,"column":32}}},"2":{"name":"(anonymous_2)","line":109,"loc":{"start":{"line":109,"column":21},"end":{"line":109,"column":24}}},"3":{"name":"(anonymous_3)","line":119,"loc":{"start":{"line":119,"column":10},"end":{"line":119,"column":13}}},"4":{"name":"(anonymous_4)","line":127,"loc":{"start":{"line":127,"column":11},"end":{"line":127,"column":14}}},"5":{"name":"(anonymous_5)","line":152,"loc":{"start":{"line":152,"column":11},"end":{"line":152,"column":14}}},"6":{"name":"(anonymous_6)","line":165,"loc":{"start":{"line":165,"column":9},"end":{"line":165,"column":12}}},"7":{"name":"(anonymous_7)","line":169,"loc":{"start":{"line":169,"column":18},"end":{"line":169,"column":21}}},"8":{"name":"(anonymous_8)","line":183,"loc":{"start":{"line":183,"column":12},"end":{"line":183,"column":23}}},"9":{"name":"(anonymous_9)","line":188,"loc":{"start":{"line":188,"column":15},"end":{"line":188,"column":18}}},"10":{"name":"(anonymous_10)","line":206,"loc":{"start":{"line":206,"column":14},"end":{"line":206,"column":17}}},"11":{"name":"(anonymous_11)","line":213,"loc":{"start":{"line":213,"column":29},"end":{"line":213,"column":43}}},"12":{"name":"(anonymous_12)","line":232,"loc":{"start":{"line":232,"column":21},"end":{"line":232,"column":33}}},"13":{"name":"(anonymous_13)","line":239,"loc":{"start":{"line":239,"column":17},"end":{"line":239,"column":26}}},"14":{"name":"(anonymous_14)","line":247,"loc":{"start":{"line":247,"column":11},"end":{"line":247,"column":14}}},"15":{"name":"(anonymous_15)","line":255,"loc":{"start":{"line":255,"column":14},"end":{"line":255,"column":17}}},"16":{"name":"(anonymous_16)","line":263,"loc":{"start":{"line":263,"column":14},"end":{"line":263,"column":17}}},"17":{"name":"(anonymous_17)","line":271,"loc":{"start":{"line":271,"column":22},"end":{"line":271,"column":25}}},"18":{"name":"(anonymous_18)","line":296,"loc":{"start":{"line":296,"column":10},"end":{"line":296,"column":20}}},"19":{"name":"(anonymous_19)","line":304,"loc":{"start":{"line":304,"column":19},"end":{"line":304,"column":29}}},"20":{"name":"(anonymous_20)","line":342,"loc":{"start":{"line":342,"column":21},"end":{"line":342,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":58}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":55}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":85}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":68}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":82}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":70}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":96}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":92}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":36}},"15":{"start":{"line":17,"column":0},"end":{"line":17,"column":44}},"16":{"start":{"line":18,"column":0},"end":{"line":18,"column":48}},"17":{"start":{"line":19,"column":0},"end":{"line":19,"column":52}},"18":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"19":{"start":{"line":21,"column":0},"end":{"line":21,"column":62}},"20":{"start":{"line":22,"column":0},"end":{"line":22,"column":77}},"21":{"start":{"line":23,"column":0},"end":{"line":23,"column":71}},"22":{"start":{"line":25,"column":0},"end":{"line":25,"column":34}},"23":{"start":{"line":26,"column":0},"end":{"line":26,"column":24}},"24":{"start":{"line":27,"column":0},"end":{"line":27,"column":70}},"25":{"start":{"line":28,"column":0},"end":{"line":28,"column":48}},"26":{"start":{"line":30,"column":0},"end":{"line":30,"column":54}},"27":{"start":{"line":32,"column":0},"end":{"line":32,"column":77}},"28":{"start":{"line":33,"column":0},"end":{"line":33,"column":85}},"29":{"start":{"line":35,"column":0},"end":{"line":35,"column":57}},"30":{"start":{"line":36,"column":0},"end":{"line":36,"column":53}},"31":{"start":{"line":38,"column":0},"end":{"line":38,"column":61}},"32":{"start":{"line":39,"column":0},"end":{"line":39,"column":61}},"33":{"start":{"line":40,"column":0},"end":{"line":40,"column":65}},"34":{"start":{"line":57,"column":8},"end":{"line":57,"column":31}},"35":{"start":{"line":59,"column":8},"end":{"line":59,"column":27}},"36":{"start":{"line":60,"column":8},"end":{"line":60,"column":61}},"37":{"start":{"line":61,"column":8},"end":{"line":61,"column":64}},"38":{"start":{"line":62,"column":8},"end":{"line":62,"column":62}},"39":{"start":{"line":63,"column":8},"end":{"line":63,"column":88}},"40":{"start":{"line":64,"column":8},"end":{"line":64,"column":76}},"41":{"start":{"line":65,"column":8},"end":{"line":65,"column":83}},"42":{"start":{"line":67,"column":8},"end":{"line":67,"column":30}},"43":{"start":{"line":68,"column":8},"end":{"line":68,"column":65}},"44":{"start":{"line":70,"column":8},"end":{"line":70,"column":37}},"45":{"start":{"line":72,"column":8},"end":{"line":79,"column":9}},"46":{"start":{"line":81,"column":8},"end":{"line":81,"column":41}},"47":{"start":{"line":83,"column":8},"end":{"line":83,"column":32}},"48":{"start":{"line":85,"column":8},"end":{"line":85,"column":35}},"49":{"start":{"line":87,"column":8},"end":{"line":104,"column":9}},"50":{"start":{"line":88,"column":12},"end":{"line":88,"column":56}},"51":{"start":{"line":89,"column":13},"end":{"line":104,"column":9}},"52":{"start":{"line":90,"column":12},"end":{"line":97,"column":13}},"53":{"start":{"line":100,"column":12},"end":{"line":103,"column":13}},"54":{"start":{"line":106,"column":8},"end":{"line":106,"column":21}},"55":{"start":{"line":110,"column":8},"end":{"line":116,"column":9}},"56":{"start":{"line":111,"column":12},"end":{"line":113,"column":14}},"57":{"start":{"line":115,"column":12},"end":{"line":115,"column":26}},"58":{"start":{"line":120,"column":8},"end":{"line":121,"column":26}},"59":{"start":{"line":121,"column":12},"end":{"line":121,"column":26}},"60":{"start":{"line":123,"column":8},"end":{"line":124,"column":26}},"61":{"start":{"line":124,"column":12},"end":{"line":124,"column":26}},"62":{"start":{"line":128,"column":8},"end":{"line":130,"column":10}},"63":{"start":{"line":132,"column":8},"end":{"line":132,"column":33}},"64":{"start":{"line":133,"column":8},"end":{"line":133,"column":35}},"65":{"start":{"line":134,"column":8},"end":{"line":134,"column":26}},"66":{"start":{"line":135,"column":8},"end":{"line":135,"column":42}},"67":{"start":{"line":137,"column":8},"end":{"line":143,"column":9}},"68":{"start":{"line":145,"column":8},"end":{"line":145,"column":26}},"69":{"start":{"line":147,"column":8},"end":{"line":149,"column":10}},"70":{"start":{"line":148,"column":12},"end":{"line":148,"column":41}},"71":{"start":{"line":153,"column":8},"end":{"line":153,"column":85}},"72":{"start":{"line":155,"column":8},"end":{"line":162,"column":10}},"73":{"start":{"line":156,"column":12},"end":{"line":159,"column":13}},"74":{"start":{"line":157,"column":16},"end":{"line":157,"column":70}},"75":{"start":{"line":158,"column":16},"end":{"line":158,"column":22}},"76":{"start":{"line":161,"column":12},"end":{"line":161,"column":60}},"77":{"start":{"line":166,"column":8},"end":{"line":166,"column":29}},"78":{"start":{"line":170,"column":8},"end":{"line":170,"column":62}},"79":{"start":{"line":172,"column":8},"end":{"line":175,"column":9}},"80":{"start":{"line":173,"column":12},"end":{"line":174,"column":41}},"81":{"start":{"line":174,"column":16},"end":{"line":174,"column":41}},"82":{"start":{"line":184,"column":8},"end":{"line":185,"column":22}},"83":{"start":{"line":185,"column":12},"end":{"line":185,"column":22}},"84":{"start":{"line":189,"column":8},"end":{"line":191,"column":9}},"85":{"start":{"line":190,"column":12},"end":{"line":190,"column":29}},"86":{"start":{"line":193,"column":8},"end":{"line":193,"column":109}},"87":{"start":{"line":193,"column":35},"end":{"line":193,"column":108}},"88":{"start":{"line":195,"column":8},"end":{"line":203,"column":10}},"89":{"start":{"line":196,"column":12},"end":{"line":196,"column":52}},"90":{"start":{"line":198,"column":12},"end":{"line":200,"column":14}},"91":{"start":{"line":201,"column":12},"end":{"line":201,"column":29}},"92":{"start":{"line":202,"column":12},"end":{"line":202,"column":58}},"93":{"start":{"line":207,"column":8},"end":{"line":207,"column":33}},"94":{"start":{"line":208,"column":8},"end":{"line":208,"column":50}},"95":{"start":{"line":209,"column":8},"end":{"line":209,"column":53}},"96":{"start":{"line":211,"column":8},"end":{"line":211,"column":23}},"97":{"start":{"line":213,"column":8},"end":{"line":224,"column":10}},"98":{"start":{"line":214,"column":12},"end":{"line":217,"column":13}},"99":{"start":{"line":215,"column":16},"end":{"line":215,"column":57}},"100":{"start":{"line":216,"column":16},"end":{"line":216,"column":22}},"101":{"start":{"line":219,"column":12},"end":{"line":221,"column":13}},"102":{"start":{"line":220,"column":16},"end":{"line":220,"column":57}},"103":{"start":{"line":223,"column":12},"end":{"line":223,"column":67}},"104":{"start":{"line":233,"column":8},"end":{"line":233,"column":61}},"105":{"start":{"line":240,"column":8},"end":{"line":240,"column":45}},"106":{"start":{"line":248,"column":8},"end":{"line":248,"column":43}},"107":{"start":{"line":256,"column":8},"end":{"line":256,"column":46}},"108":{"start":{"line":264,"column":8},"end":{"line":264,"column":46}},"109":{"start":{"line":272,"column":8},"end":{"line":272,"column":54}},"110":{"start":{"line":297,"column":8},"end":{"line":297,"column":44}},"111":{"start":{"line":305,"column":8},"end":{"line":326,"column":9}},"112":{"start":{"line":306,"column":12},"end":{"line":323,"column":14}},"113":{"start":{"line":307,"column":16},"end":{"line":307,"column":26}},"114":{"start":{"line":310,"column":16},"end":{"line":315,"column":53}},"115":{"start":{"line":311,"column":20},"end":{"line":311,"column":68}},"116":{"start":{"line":312,"column":21},"end":{"line":315,"column":53}},"117":{"start":{"line":313,"column":20},"end":{"line":313,"column":73}},"118":{"start":{"line":315,"column":20},"end":{"line":315,"column":53}},"119":{"start":{"line":317,"column":16},"end":{"line":317,"column":69}},"120":{"start":{"line":318,"column":16},"end":{"line":318,"column":70}},"121":{"start":{"line":320,"column":16},"end":{"line":321,"column":66}},"122":{"start":{"line":321,"column":20},"end":{"line":321,"column":66}},"123":{"start":{"line":325,"column":12},"end":{"line":325,"column":18}},"124":{"start":{"line":328,"column":8},"end":{"line":339,"column":10}},"125":{"start":{"line":329,"column":12},"end":{"line":332,"column":13}},"126":{"start":{"line":330,"column":16},"end":{"line":330,"column":53}},"127":{"start":{"line":331,"column":16},"end":{"line":331,"column":22}},"128":{"start":{"line":334,"column":12},"end":{"line":338,"column":14}},"129":{"start":{"line":335,"column":16},"end":{"line":337,"column":17}},"130":{"start":{"line":336,"column":20},"end":{"line":336,"column":57}},"131":{"start":{"line":343,"column":8},"end":{"line":343,"column":89}},"132":{"start":{"line":343,"column":62},"end":{"line":343,"column":88}},"133":{"start":{"line":344,"column":8},"end":{"line":344,"column":75}},"134":{"start":{"line":348,"column":0},"end":{"line":365,"column":1}}},"branchMap":{"1":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":18},"end":{"line":57,"column":25}},{"start":{"line":57,"column":29},"end":{"line":57,"column":31}}]},"2":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":23},"end":{"line":60,"column":37}},{"start":{"line":60,"column":41},"end":{"line":60,"column":61}}]},"3":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":24},"end":{"line":61,"column":39}},{"start":{"line":61,"column":43},"end":{"line":61,"column":64}}]},"4":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":60},"end":{"line":63,"column":80}},{"start":{"line":63,"column":84},"end":{"line":63,"column":86}}]},"5":{"line":64,"type":"cond-expr","locations":[{"start":{"line":64,"column":48},"end":{"line":64,"column":69}},{"start":{"line":64,"column":72},"end":{"line":64,"column":76}}]},"6":{"line":65,"type":"cond-expr","locations":[{"start":{"line":65,"column":48},"end":{"line":65,"column":69}},{"start":{"line":65,"column":72},"end":{"line":65,"column":83}}]},"7":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":29},"end":{"line":68,"column":44}},{"start":{"line":68,"column":48},"end":{"line":68,"column":65}}]},"8":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":8}},{"start":{"line":87,"column":8},"end":{"line":87,"column":8}}]},"9":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":13},"end":{"line":89,"column":13}},{"start":{"line":89,"column":13},"end":{"line":89,"column":13}}]},"10":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":8}},{"start":{"line":110,"column":8},"end":{"line":110,"column":8}}]},"11":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":8}},{"start":{"line":120,"column":8},"end":{"line":120,"column":8}}]},"12":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]},"13":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":12},"end":{"line":156,"column":12}},{"start":{"line":156,"column":12},"end":{"line":156,"column":12}}]},"14":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":12},"end":{"line":173,"column":12}},{"start":{"line":173,"column":12},"end":{"line":173,"column":12}}]},"15":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":8},"end":{"line":184,"column":8}},{"start":{"line":184,"column":8},"end":{"line":184,"column":8}}]},"16":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":12},"end":{"line":214,"column":12}},{"start":{"line":214,"column":12},"end":{"line":214,"column":12}}]},"17":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":12},"end":{"line":219,"column":12}},{"start":{"line":219,"column":12},"end":{"line":219,"column":12}}]},"18":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8}},{"start":{"line":305,"column":8},"end":{"line":305,"column":8}}]},"19":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":16},"end":{"line":310,"column":16}},{"start":{"line":310,"column":16},"end":{"line":310,"column":16}}]},"20":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":20},"end":{"line":310,"column":29}},{"start":{"line":310,"column":33},"end":{"line":310,"column":80}}]},"21":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":21},"end":{"line":312,"column":21}},{"start":{"line":312,"column":21},"end":{"line":312,"column":21}}]},"22":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":25},"end":{"line":312,"column":40}},{"start":{"line":312,"column":44},"end":{"line":312,"column":96}}]},"23":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":16},"end":{"line":320,"column":16}},{"start":{"line":320,"column":16},"end":{"line":320,"column":16}}]},"24":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":12},"end":{"line":329,"column":12}},{"start":{"line":329,"column":12},"end":{"line":329,"column":12}}]},"25":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":16},"end":{"line":335,"column":16}},{"start":{"line":335,"column":16},"end":{"line":335,"column":16}}]}},"code":["'use strict'","","const TelegramApi = require('./api/TelegramApi')","const TelegramRouter = require('./routing/TelegramRouter')","const ConsoleLogger = require('./logger/ConsoleLogger')","const TelegramDataSource = require('./TelegramDataSource')","const UpdateProcessorsManager = require('./updateProcessors/UpdateProcessorsManager')","const InMemoryStorage = require('./storage/session/InMemoryStorage')","const TelegramSessionStorage = require('./storage/session/TelegramSessionStorage')","const TelegramBaseController = require('./mvc/TelegramBaseController')","const TelegramBaseCallbackQueryController = require('./mvc/TelegramBaseCallbackQueryController')","const TelegramBaseInlineQueryController = require('./mvc/TelegramBaseInlineQueryController')","const Models = require('./models/Models')","const Update = require('./models/Update')","const Ivan = require('./localization/Ivan')","const Scope = require('./mvc/Scope')","const InputFile = require('./api/InputFile')","const InlineScope = require('./mvc/InlineScope')","const BaseStorage = require('./storage/BaseStorage')","const BaseLogger = require('./logger/BaseLogger')","const BaseScopeExtension = require('./mvc/BaseScopeExtension')","const BaseUpdateProcessor = require('./updateProcessors/BaseUpdateProcessor')","const BaseUpdateFetcher = require('./updateFetchers/BaseUpdateFetcher')","","const cluster = require('cluster')","const os = require('os')","const SharedStorage = require('./storage/sharedStorage/SharedStorage')","const TelegramIPC = require('./ipc/TelegramIPC')","","const WebAdmin = require('./webAdmin/server/WebAdmin')","","const WebhookUpdateFetcher = require('./updateFetchers/WebhookUpdateFetcher')","const LongPoolingUpdateFetcher = require('./updateFetchers/LongPoolingUpdateFetcher')","","const WebAdminLogger = require('./logger/WebAdminLogger')","const Statistics = require('./statistics/Statistics')","","const BaseCommand = require('./routing/commands/BaseCommand')","const TextCommand = require('./routing/commands/TextCommand')","const RegexpCommand = require('./routing/commands/RegexpCommand')","","class Telegram {","    /**","     *","     * @param {string} token","     * @param {{","     * logger: BaseLogger,","     * storage: BaseStorage,","     * localization: Object[],","     * workers: number,","     * webhook: {url: string, port: number, host: string }","     * updateFetcher: BaseUpdateFetcher","     * webAdmin: {port: number, host: string}","     * }} options","     */","    constructor(token, options) {","        options = options || {}","","        this._token = token","        this._logger = options.logger || new WebAdminLogger()","        this._storage = options.storage || new InMemoryStorage()","        this._sharedStorage = new SharedStorage(this._storage)","        this._localization = new Ivan(this._sharedStorage, (options.localization || []))","        this._webAdminPort = options.webAdmin ? options.webAdmin.port : 7777","        this._webAdminHost = options.webAdmin ? options.webAdmin.host : 'localhost'","","        this._cpus = os.cpus()","        this._workersCount = options.workers || this._cpus.length","","        this._ipc = new TelegramIPC()","","        this._telegramDataSource = new TelegramDataSource(","            new TelegramApi(token, this._logger),","            new TelegramRouter(),","            this._logger,","            new TelegramSessionStorage(this._sharedStorage),","            this._localization,","            this._ipc","        )","","        this._beforeUpdateFunction = null","","        this._checkNodeVersion()","","        this._updatesFetcher = null","","        if (options.updateFetcher)","            this._updatesFetcher = options.updateFetcher","        else if (options.webhook) {","            this._updatesFetcher = new WebhookUpdateFetcher(","                this._telegramDataSource.api,","                this._logger,","                options.webhook.url,","                options.webhook.host,","                options.webhook.port,","                token","            )","        }","        else {","            this._updatesFetcher = new LongPoolingUpdateFetcher(","                this._telegramDataSource.api,","                this._logger","            )","        }","","        this._setup()","    }","","    _checkNodeVersion() {","        if (process.version.replace('v', '').split('.')[0] < 6) {","            this._logger.error({","                'Fatal error': 'Node version must be 6 or greater, please update your Node.js'","            })","","            process.exit()","        }","    }","","    _setup() {","        if (cluster.isMaster)","            this._master()","","        if (cluster.isWorker)","            this._worker()","    }","","    _master() {","        this._logger.log({","            'Telegram': `Master started, ${this._cpus.length} CPUs found, ${this._workersCount} workers will start`","        })","","        this._waitingUpdates = {} // each worker can ask master to send him next update from specific chat","        this._waitingCallbacks = {}","        this._workers = {}","        this.statistics = new Statistics()"," ","        new WebAdmin(","            this._webAdminHost,","            this._webAdminPort,","            __dirname + '/webAdmin/client',","            this._logger,","            this","        )"," ","        this._runWorkers()","","        this._updatesFetcher.fetch(updates => {","            this._processUpdates(updates)","        })","    }","","    _worker() {","        this._updateProcessor = new UpdateProcessorsManager(this._telegramDataSource)","","        process.on('message', msg => {","            if (msg.type == 'update') {","                this._processUpdates([Update.deserialize(msg.update)])","                return","            }","","            this._sharedStorage.handleMessageFromMaster(msg)","        })","    }","","    _fork() {","        return cluster.fork()","    }","    ","    restartWorkers() {","        this._logger.log({ 'Telegram': 'restarting workers' })","","        for (const pid in this._workers) {","            if (this._workers[pid])","                this._workers[pid].kill()","        }","    }","","    /**","     * This callback will be called from master process","     *","     * @param {Function} callback","     */","    onMaster(callback) {","        if (cluster.isMaster)","            callback()","    }","    ","    _runWorkers() {  ","        for(var i = 0; i < this._workersCount; i++) {","            this._runWorker()","        } ","","        cluster.on('online', w =>  this._logger.log({ 'Telegram': `Worker started at ${w.process.pid} PID`}))","","        cluster.on('exit', (worker, code, signal) => {","            this._workers[worker.process.pid] = null","","            this._logger.log({","                'Telegram': `Worker ${worker.process.pid} died with code: ${code}, and signal: ${signal}, Starting a new worker`","            })","            this._runWorker()","            this.statistics.workerDied(worker.process.pid)","        })","    }","","    _runWorker() {","        let worker = this._fork()","        this._workers[worker.process.pid] = worker","        this.statistics.addWorker(worker.process.pid)","","        let self = this","","        worker.on('message', function(msg) {","            if (msg.type == 'waitForUpdate') {","                self._waitingUpdates[msg.chatId] = worker","                return","            }","","            if (msg.type == 'waitForCallbackQuery') {","                self._waitingCallbacks[msg.data] = worker","            }","","            self._sharedStorage.handleMessageFromWorkers(msg, this)","        })","    }","","    /**","     * Pass child of BaseScopeExtension or array of children to use that extensions","     *","     * @param {BaseScopeExtension|BaseScopeExtension[]} extension","     */","    addScopeExtension(extension) {","        this._telegramDataSource.addScopeExtension(extension)","    }","","    /**","     * @param {Update} update","     */","    emulateUpdate(update) {","        this._updateProcessor.process(update)","    }","","    /**","     *","     * @returns {TelegramApi}","     */","    get api() {","        return this._telegramDataSource.api","    }","","    /**","     *","     * @returns {TelegramRouter}","     */","    get router() {","        return this._telegramDataSource.router","    }","","    /**","     *","     * @returns {BaseLogger}","     */","    get logger() {","        return this._telegramDataSource.logger","    }","","    /**","     *","     * @returns {TelegramSessionStorage}","     */","    get sessionStorage() {","        return this._telegramDataSource.sessionStorage","    }","","    /**","     * @callback continueCallback","     * @param {boolean} handle","     */","","    /**","     * @callback beforeHandler","     * @param {Update} update","     * @param {continueCallback} callback","     */","","    /**","     * Your handler function passed to this method will be called after getting","     * any update, but before it's processing.","     *","     * Also to your function will be passed callback function,","     * if you call that function with 'true' argument, then update handling will be continued,","     * else the update will not be handled.","     *","     * @param {beforeHandler} handler","     */","    before(handler) {","        this._beforeUpdateFunction = handler","    }","","    /**","     * @param {Update[]} updates","     * @private","     */","    _processUpdates(updates) {","        if (cluster.isMaster) {","            updates.forEach(u => {","                let worker","","","                if (u.message && this._waitingUpdates[u.message.chat.id] != null)","                    worker = this._waitingUpdates[u.message.chat.id]","                else if (u.callbackQuery && this._waitingCallbacks[u.callbackQuery.data] != null)","                    worker = this._waitingCallbacks[u.callbackQuery.data]","                else","                    worker = this._pickRandomWorker() //pick random worker for update","","                this.statistics.registrateRequest(worker.process.pid)","                worker.send({ type: 'update', update: u.serialize() })","","                if (u.message)","                    this._waitingUpdates[u.message.chat.id] = null","","            })","","            return","        }","","        updates.forEach(update => {","            if (!this._beforeUpdateFunction) {","                this._updateProcessor.process(update)","                return","            }","","            this._beforeUpdateFunction(update, handle => {","                if (handle === true) {","                    this._updateProcessor.process(update)","                }","            })","        })","    }","","    _pickRandomWorker() {","        const pids = Object.keys(this._workers).filter(pid => this._workers[pid] != null)","        return this._workers[pids[Math.floor(Math.random() * pids.length)]]","    }","}","","module.exports = {","    TelegramApi,","    Telegram,","    TelegramBaseController,","    TelegramBaseCallbackQueryController,","    TelegramBaseInlineQueryController,","    Scope,","    BaseLogger,","    BaseScopeExtension,","    InputFile,","    InlineScope,","    BaseStorage,","    BaseUpdateFetcher,","    BaseCommand,","    TextCommand,","    RegexpCommand,","    Models","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"25":1,"26":1,"27":1,"28":1,"30":1,"32":1,"33":1,"35":1,"36":1,"38":1,"39":1,"40":1,"57":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"67":0,"68":0,"70":0,"72":0,"81":0,"83":0,"85":0,"87":0,"88":0,"89":0,"90":0,"100":0,"106":0,"110":0,"111":0,"115":0,"120":0,"121":0,"123":0,"124":0,"128":0,"132":0,"133":0,"134":0,"135":0,"137":0,"145":0,"147":0,"148":0,"153":0,"155":0,"156":0,"157":0,"158":0,"161":0,"166":0,"170":0,"172":0,"173":0,"174":0,"184":0,"185":0,"189":0,"190":0,"193":0,"195":0,"196":0,"198":0,"201":0,"202":0,"207":0,"208":0,"209":0,"211":0,"213":0,"214":0,"215":0,"216":0,"219":0,"220":0,"223":0,"233":0,"240":0,"248":0,"256":0,"264":0,"272":0,"297":0,"305":0,"306":0,"307":0,"310":0,"311":0,"312":0,"313":0,"315":0,"317":0,"318":0,"320":0,"321":0,"325":0,"328":0,"329":0,"330":0,"331":0,"334":0,"335":0,"336":0,"343":0,"344":0,"348":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/api/TelegramApi.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/api/TelegramApi.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"fnMap":{"1":{"name":"(anonymous_1)","line":30,"loc":{"start":{"line":30,"column":15},"end":{"line":30,"column":31}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":17},"end":{"line":43,"column":26}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":8},"end":{"line":54,"column":36}}},"4":{"name":"(anonymous_4)","line":73,"loc":{"start":{"line":73,"column":23},"end":{"line":73,"column":57}}},"5":{"name":"(anonymous_5)","line":87,"loc":{"start":{"line":87,"column":18},"end":{"line":87,"column":45}}},"6":{"name":"(anonymous_6)","line":145,"loc":{"start":{"line":145,"column":17},"end":{"line":145,"column":44}}},"7":{"name":"(anonymous_7)","line":163,"loc":{"start":{"line":163,"column":22},"end":{"line":163,"column":56}}},"8":{"name":"(anonymous_8)","line":190,"loc":{"start":{"line":190,"column":14},"end":{"line":190,"column":24}}},"9":{"name":"(anonymous_9)","line":200,"loc":{"start":{"line":200,"column":14},"end":{"line":200,"column":24}}},"10":{"name":"(anonymous_10)","line":210,"loc":{"start":{"line":210,"column":9},"end":{"line":210,"column":12}}},"11":{"name":"(anonymous_11)","line":221,"loc":{"start":{"line":221,"column":15},"end":{"line":221,"column":39}}},"12":{"name":"(anonymous_12)","line":245,"loc":{"start":{"line":245,"column":18},"end":{"line":245,"column":59}}},"13":{"name":"(anonymous_13)","line":262,"loc":{"start":{"line":262,"column":13},"end":{"line":262,"column":38}}},"14":{"name":"(anonymous_14)","line":281,"loc":{"start":{"line":281,"column":13},"end":{"line":281,"column":38}}},"15":{"name":"(anonymous_15)","line":300,"loc":{"start":{"line":300,"column":16},"end":{"line":300,"column":44}}},"16":{"name":"(anonymous_16)","line":319,"loc":{"start":{"line":319,"column":15},"end":{"line":319,"column":42}}},"17":{"name":"(anonymous_17)","line":338,"loc":{"start":{"line":338,"column":13},"end":{"line":338,"column":38}}},"18":{"name":"(anonymous_18)","line":357,"loc":{"start":{"line":357,"column":13},"end":{"line":357,"column":38}}},"19":{"name":"(anonymous_19)","line":377,"loc":{"start":{"line":377,"column":16},"end":{"line":377,"column":55}}},"20":{"name":"(anonymous_20)","line":397,"loc":{"start":{"line":397,"column":13},"end":{"line":397,"column":68}}},"21":{"name":"(anonymous_21)","line":417,"loc":{"start":{"line":417,"column":15},"end":{"line":417,"column":57}}},"22":{"name":"(anonymous_22)","line":433,"loc":{"start":{"line":433,"column":18},"end":{"line":433,"column":35}}},"23":{"name":"(anonymous_23)","line":447,"loc":{"start":{"line":447,"column":24},"end":{"line":447,"column":48}}},"24":{"name":"(anonymous_24)","line":460,"loc":{"start":{"line":460,"column":11},"end":{"line":460,"column":20}}},"25":{"name":"(anonymous_25)","line":470,"loc":{"start":{"line":470,"column":18},"end":{"line":470,"column":35}}},"26":{"name":"(anonymous_26)","line":485,"loc":{"start":{"line":485,"column":13},"end":{"line":485,"column":22}}},"27":{"name":"(anonymous_27)","line":496,"loc":{"start":{"line":496,"column":19},"end":{"line":496,"column":36}}},"28":{"name":"(anonymous_28)","line":511,"loc":{"start":{"line":511,"column":11},"end":{"line":511,"column":20}}},"29":{"name":"(anonymous_29)","line":520,"loc":{"start":{"line":520,"column":25},"end":{"line":520,"column":34}}},"30":{"name":"(anonymous_30)","line":530,"loc":{"start":{"line":530,"column":23},"end":{"line":530,"column":32}}},"31":{"name":"(anonymous_31)","line":541,"loc":{"start":{"line":541,"column":17},"end":{"line":541,"column":34}}},"32":{"name":"(anonymous_32)","line":556,"loc":{"start":{"line":556,"column":23},"end":{"line":556,"column":50}}},"33":{"name":"(anonymous_33)","line":571,"loc":{"start":{"line":571,"column":19},"end":{"line":571,"column":35}}},"34":{"name":"(anonymous_34)","line":585,"loc":{"start":{"line":585,"column":22},"end":{"line":585,"column":32}}},"35":{"name":"(anonymous_35)","line":595,"loc":{"start":{"line":595,"column":26},"end":{"line":595,"column":36}}},"36":{"name":"(anonymous_36)","line":607,"loc":{"start":{"line":607,"column":21},"end":{"line":607,"column":55}}},"37":{"name":"(anonymous_37)","line":623,"loc":{"start":{"line":623,"column":12},"end":{"line":623,"column":45}}},"38":{"name":"(anonymous_38)","line":638,"loc":{"start":{"line":638,"column":16},"end":{"line":638,"column":41}}},"39":{"name":"(anonymous_39)","line":648,"loc":{"start":{"line":648,"column":21},"end":{"line":648,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":58}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":64}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":38}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":50}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":40}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":54}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":56}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"16":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}},"17":{"start":{"line":31,"column":8},"end":{"line":31,"column":27}},"18":{"start":{"line":32,"column":8},"end":{"line":32,"column":65}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":60}},"20":{"start":{"line":34,"column":8},"end":{"line":34,"column":29}},"21":{"start":{"line":44,"column":8},"end":{"line":44,"column":33}},"22":{"start":{"line":55,"column":8},"end":{"line":61,"column":10}},"23":{"start":{"line":56,"column":12},"end":{"line":56,"column":77}},"24":{"start":{"line":58,"column":12},"end":{"line":60,"column":14}},"25":{"start":{"line":59,"column":16},"end":{"line":59,"column":61}},"26":{"start":{"line":74,"column":8},"end":{"line":77,"column":14}},"27":{"start":{"line":76,"column":16},"end":{"line":76,"column":56}},"28":{"start":{"line":88,"column":8},"end":{"line":135,"column":10}},"29":{"start":{"line":95,"column":12},"end":{"line":98,"column":13}},"30":{"start":{"line":96,"column":16},"end":{"line":96,"column":29}},"31":{"start":{"line":97,"column":16},"end":{"line":97,"column":22}},"32":{"start":{"line":100,"column":12},"end":{"line":105,"column":13}},"33":{"start":{"line":101,"column":16},"end":{"line":101,"column":80}},"34":{"start":{"line":102,"column":16},"end":{"line":102,"column":60}},"35":{"start":{"line":104,"column":16},"end":{"line":104,"column":22}},"36":{"start":{"line":107,"column":12},"end":{"line":121,"column":13}},"37":{"start":{"line":108,"column":16},"end":{"line":108,"column":65}},"38":{"start":{"line":110,"column":16},"end":{"line":115,"column":17}},"39":{"start":{"line":111,"column":20},"end":{"line":111,"column":97}},"40":{"start":{"line":112,"column":20},"end":{"line":112,"column":64}},"41":{"start":{"line":114,"column":20},"end":{"line":114,"column":26}},"42":{"start":{"line":117,"column":16},"end":{"line":117,"column":29}},"43":{"start":{"line":118,"column":16},"end":{"line":118,"column":63}},"44":{"start":{"line":120,"column":16},"end":{"line":120,"column":22}},"45":{"start":{"line":123,"column":12},"end":{"line":131,"column":13}},"46":{"start":{"line":124,"column":16},"end":{"line":127,"column":18}},"47":{"start":{"line":128,"column":16},"end":{"line":128,"column":60}},"48":{"start":{"line":130,"column":16},"end":{"line":130,"column":22}},"49":{"start":{"line":133,"column":12},"end":{"line":133,"column":82}},"50":{"start":{"line":134,"column":12},"end":{"line":134,"column":23}},"51":{"start":{"line":146,"column":8},"end":{"line":151,"column":33}},"52":{"start":{"line":147,"column":12},"end":{"line":150,"column":14}},"53":{"start":{"line":148,"column":16},"end":{"line":148,"column":62}},"54":{"start":{"line":149,"column":16},"end":{"line":149,"column":61}},"55":{"start":{"line":164,"column":8},"end":{"line":164,"column":98}},"56":{"start":{"line":165,"column":8},"end":{"line":165,"column":37}},"57":{"start":{"line":167,"column":8},"end":{"line":182,"column":14}},"58":{"start":{"line":169,"column":16},"end":{"line":169,"column":62}},"59":{"start":{"line":171,"column":16},"end":{"line":176,"column":17}},"60":{"start":{"line":179,"column":16},"end":{"line":179,"column":30}},"61":{"start":{"line":181,"column":16},"end":{"line":181,"column":24}},"62":{"start":{"line":191,"column":8},"end":{"line":192,"column":64}},"63":{"start":{"line":192,"column":23},"end":{"line":192,"column":63}},"64":{"start":{"line":192,"column":41},"end":{"line":192,"column":62}},"65":{"start":{"line":201,"column":8},"end":{"line":203,"column":25}},"66":{"start":{"line":211,"column":8},"end":{"line":211,"column":58}},"67":{"start":{"line":222,"column":8},"end":{"line":225,"column":9}},"68":{"start":{"line":227,"column":8},"end":{"line":234,"column":9}},"69":{"start":{"line":228,"column":12},"end":{"line":231,"column":18}},"70":{"start":{"line":230,"column":20},"end":{"line":230,"column":84}},"71":{"start":{"line":233,"column":12},"end":{"line":233,"column":99}},"72":{"start":{"line":246,"column":8},"end":{"line":250,"column":9}},"73":{"start":{"line":252,"column":8},"end":{"line":252,"column":98}},"74":{"start":{"line":263,"column":8},"end":{"line":271,"column":9}},"75":{"start":{"line":282,"column":8},"end":{"line":290,"column":9}},"76":{"start":{"line":301,"column":8},"end":{"line":309,"column":9}},"77":{"start":{"line":320,"column":8},"end":{"line":328,"column":9}},"78":{"start":{"line":339,"column":8},"end":{"line":347,"column":9}},"79":{"start":{"line":358,"column":8},"end":{"line":366,"column":9}},"80":{"start":{"line":378,"column":8},"end":{"line":382,"column":9}},"81":{"start":{"line":384,"column":8},"end":{"line":384,"column":96}},"82":{"start":{"line":398,"column":8},"end":{"line":404,"column":9}},"83":{"start":{"line":406,"column":8},"end":{"line":406,"column":93}},"84":{"start":{"line":418,"column":8},"end":{"line":422,"column":9}},"85":{"start":{"line":424,"column":8},"end":{"line":424,"column":95}},"86":{"start":{"line":434,"column":8},"end":{"line":437,"column":10}},"87":{"start":{"line":448,"column":8},"end":{"line":452,"column":29}},"88":{"start":{"line":461,"column":8},"end":{"line":461,"column":77}},"89":{"start":{"line":471,"column":8},"end":{"line":474,"column":9}},"90":{"start":{"line":476,"column":8},"end":{"line":477,"column":32}},"91":{"start":{"line":477,"column":23},"end":{"line":477,"column":31}},"92":{"start":{"line":486,"column":8},"end":{"line":487,"column":32}},"93":{"start":{"line":487,"column":23},"end":{"line":487,"column":31}},"94":{"start":{"line":497,"column":8},"end":{"line":500,"column":9}},"95":{"start":{"line":502,"column":8},"end":{"line":503,"column":32}},"96":{"start":{"line":503,"column":23},"end":{"line":503,"column":31}},"97":{"start":{"line":512,"column":8},"end":{"line":512,"column":77}},"98":{"start":{"line":521,"column":8},"end":{"line":522,"column":68}},"99":{"start":{"line":522,"column":23},"end":{"line":522,"column":67}},"100":{"start":{"line":522,"column":41},"end":{"line":522,"column":66}},"101":{"start":{"line":531,"column":8},"end":{"line":532,"column":32}},"102":{"start":{"line":532,"column":23},"end":{"line":532,"column":31}},"103":{"start":{"line":542,"column":8},"end":{"line":545,"column":9}},"104":{"start":{"line":547,"column":8},"end":{"line":547,"column":76}},"105":{"start":{"line":557,"column":8},"end":{"line":559,"column":9}},"106":{"start":{"line":561,"column":8},"end":{"line":562,"column":32}},"107":{"start":{"line":562,"column":23},"end":{"line":562,"column":31}},"108":{"start":{"line":572,"column":8},"end":{"line":574,"column":9}},"109":{"start":{"line":576,"column":8},"end":{"line":577,"column":97}},"110":{"start":{"line":577,"column":23},"end":{"line":577,"column":95}},"111":{"start":{"line":586,"column":8},"end":{"line":587,"column":96}},"112":{"start":{"line":587,"column":23},"end":{"line":587,"column":95}},"113":{"start":{"line":596,"column":8},"end":{"line":597,"column":96}},"114":{"start":{"line":597,"column":23},"end":{"line":597,"column":95}},"115":{"start":{"line":608,"column":8},"end":{"line":611,"column":9}},"116":{"start":{"line":613,"column":8},"end":{"line":614,"column":32}},"117":{"start":{"line":614,"column":23},"end":{"line":614,"column":31}},"118":{"start":{"line":624,"column":8},"end":{"line":627,"column":9}},"119":{"start":{"line":629,"column":8},"end":{"line":629,"column":92}},"120":{"start":{"line":639,"column":8},"end":{"line":642,"column":9}},"121":{"start":{"line":644,"column":8},"end":{"line":645,"column":96}},"122":{"start":{"line":645,"column":23},"end":{"line":645,"column":95}},"123":{"start":{"line":649,"column":8},"end":{"line":650,"column":68}},"124":{"start":{"line":650,"column":23},"end":{"line":650,"column":67}},"125":{"start":{"line":650,"column":41},"end":{"line":650,"column":66}},"126":{"start":{"line":654,"column":0},"end":{"line":654,"column":28}}},"branchMap":{"1":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":38},"end":{"line":90,"column":42}},{"start":{"line":90,"column":45},"end":{"line":90,"column":59}}]},"2":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":39},"end":{"line":91,"column":53}},{"start":{"line":91,"column":56},"end":{"line":91,"column":60}}]},"3":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":95,"column":12}},{"start":{"line":95,"column":12},"end":{"line":95,"column":12}}]},"4":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":16},"end":{"line":95,"column":20}},{"start":{"line":95,"column":24},"end":{"line":95,"column":50}},{"start":{"line":95,"column":54},"end":{"line":95,"column":58}}]},"5":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":12}},{"start":{"line":100,"column":12},"end":{"line":100,"column":12}}]},"6":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":16},"end":{"line":100,"column":19}},{"start":{"line":100,"column":23},"end":{"line":100,"column":31}}]},"7":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":12}},{"start":{"line":107,"column":12},"end":{"line":107,"column":12}}]},"8":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":16},"end":{"line":107,"column":20}},{"start":{"line":107,"column":24},"end":{"line":107,"column":39}}]},"9":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":16},"end":{"line":110,"column":16}},{"start":{"line":110,"column":16},"end":{"line":110,"column":16}}]},"10":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":12},"end":{"line":123,"column":12}},{"start":{"line":123,"column":12},"end":{"line":123,"column":12}}]},"11":{"line":164,"type":"cond-expr","locations":[{"start":{"line":164,"column":54},"end":{"line":164,"column":63}},{"start":{"line":164,"column":66},"end":{"line":164,"column":98}}]},"12":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":31},"end":{"line":169,"column":48}},{"start":{"line":169,"column":52},"end":{"line":169,"column":62}}]},"13":{"line":202,"type":"cond-expr","locations":[{"start":{"line":202,"column":31},"end":{"line":202,"column":62}},{"start":{"line":202,"column":65},"end":{"line":202,"column":67}}]},"14":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":8},"end":{"line":227,"column":8}},{"start":{"line":227,"column":8},"end":{"line":227,"column":8}}]},"15":{"line":577,"type":"cond-expr","locations":[{"start":{"line":577,"column":54},"end":{"line":577,"column":63}},{"start":{"line":577,"column":66},"end":{"line":577,"column":95}}]},"16":{"line":587,"type":"cond-expr","locations":[{"start":{"line":587,"column":54},"end":{"line":587,"column":63}},{"start":{"line":587,"column":66},"end":{"line":587,"column":95}}]},"17":{"line":597,"type":"cond-expr","locations":[{"start":{"line":597,"column":54},"end":{"line":597,"column":63}},{"start":{"line":597,"column":66},"end":{"line":597,"column":95}}]},"18":{"line":645,"type":"cond-expr","locations":[{"start":{"line":645,"column":54},"end":{"line":645,"column":63}},{"start":{"line":645,"column":66},"end":{"line":645,"column":95}}]}},"code":["'use strict'","","const req = require('tiny_request')","const CallbackQueue = require('../utils/CallbackQueue')","const TelegramApiRequest = require('./TelegramApiRequest')","const Models = require('../models/Models')","const Message = require('../models/Message')","const File = require('../models/File')","const UserProfilePhotos = require('../models/UserProfilePhotos')","const User = require('../models/User')","const Update = require('../models/Update')","const Chat = require('../models/Chat')","const ChatMember = require('../models/ChatMember')","const InputFile = require('./InputFile')","const TelegramApiError = require('./TelegramApiError')","const GameHighScore = require('../models/GameHighScore')","","const REQUESTS_PER_SECOND = 30","const REQUEST_RETRY_TIMEOUT = 1000 //ms","","/**"," * Telegram API class"," */","class TelegramApi {","    /**","     *","     * @param {string} token","     * @param {BaseLogger} logger","     */","    constructor(token, logger) {","        this._token = token","        this._url = `https://api.telegram.org/bot${this._token}/`","        this._queue = new CallbackQueue(REQUESTS_PER_SECOND)","        this._logger = logger","    }","","    /**","     *","     * @param {string} method","     * @returns {string}","     * @private","     */","    _urlForMethod(method) {","        return this._url + method","    }","","    /**","     * ","     * @param {string} method","     * @param {object} params","     * @param {object} [multipart]","     * @returns {Promise<Object>}","     */","    call(method, params, multipart) {","        return new Promise((resolve, reject) => {","            const request = new TelegramApiRequest(method, params, multipart)","","            this._queue.push(() => {","                this._handleRequest(request, resolve, reject)","            })","        })","    }","","    /**","     *","     * @param {string} method","     * @param {Object} params","     * @param {function} type","     * @param {object} [multipart]","     * @returns {Promise}","     * @private","     */","    _callWithReturnType(method, params, type, multipart) {","        return this.call(method, params, multipart)","            .then(response => {","                return type.deserialize(response.result)","            })","    }","","    /**","     *","     * @param {TelegramApiRequest }request","     * @param {function} resolve","     * @param {function} reject","     * @private","     */","    _handleRequest(request, resolve, reject) {","        req.post({","            url: this._urlForMethod(request.method),","            form: request.multipart ? null : request.params,","            query: request.multipart ? request.params : null,","            multipart: request.multipart,","            json: true","        }, (body, response, err) => {","            if (!err && response.statusCode == 200 && body) {","                resolve(body)","                return","            }","","            if (err && err.code) {","                this._logger.error({'Network error:': err, 'request': request })","                this._retryRequest(request, resolve, reject)","","                return","            }","","            if (body && body.error_code) {","                const error = TelegramApiError.fromResponse(body)","","                if (error.code == 500) {","                    this._logger.warn({ 'Got Internal server error from Telegram. Body:': body })","                    this._retryRequest(request, resolve, reject)","","                    return","                }","","                reject(error)","                this._logger.warn({ 'Api error: Body:': body })","","                return","            }","","            if (err.message === 'Unexpected token < in JSON at position 0') {","                this._logger.error({","                    'api request error: Telegram returned some html instead of json. Body:': body,","                    'Error:': err","                })","                this._retryRequest(request, resolve, reject)","","                return","            }","","            this._logger.error({'api request error: Body:': body, 'Error:': err })","            reject(err)","        })","    }","","    /**","     *","     * @param {TelegramApiRequest }request","     * @param {function} resolve","     * @param {function} reject","     * @private","     */","    _retryRequest(request, resolve, reject) {","        setTimeout(() => {","            this._queue.push(() => {","                this._logger.log({ 'Retry request': request })","                this._handleRequest(request, resolve, reject)","            })","        }, REQUEST_RETRY_TIMEOUT)","    }","","    /**","     *","     * @param {string} method","     * @param {InputFile|Object} inputFile","     * @param {string} type","     * @param {Object} params","     * @returns {Promise}","     * @private","     */","    _callWithInputFile(method, inputFile, type, params) {","        const file = inputFile instanceof InputFile ? inputFile : InputFile.deserialize(inputFile)","        let sentCallback = Function()","","        return file.prepareRequest(type, params)","            .then(prepared =>  {","                sentCallback = prepared.callback || Function()","                ","                return this._callWithReturnType(","                    method,","                    prepared.params,","                    Message,","                    prepared.multipart","                )","            })","            .then(r => {","                sentCallback()","                ","                return r","            })","    }","","    /**","     *","     * @param {Object} [options]","     * @returns {Promise<Update[]>}","     */","    getUpdates(options) {","        return this.call('getUpdates', options)","            .then(r => r.result.map(u => Update.deserialize(u)))","    }","","    /**","     *","     * @param options","     * @returns {Promise<Object>}","     */","    setWebhook(options) {","        return this._callWithReturnType('setWebhook', {","            url: options.url ? options.url + '/' + this._token : ''","        }, Models.Update)","    }","","    /**","     *","     * @returns {Promise<User>}","     */","    getMe() {","        return this._callWithReturnType('getMe', {}, User)","    }","","    /**","     *","     * @param {number|string} chatId","     * @param {string} text","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendMessage(chatId, text, options) {","        const params = {","            chat_id: chatId,","            text: text","        }","","        if (text.length > 4096) {","            this.sendMessage(chatId, text.slice(0, 4096), options)","                .then(() => {","                    this.sendMessage(chatId, text.slice(4096, text.length), options)","                })","        } else {","            return this._callWithReturnType('sendMessage', Object.assign(params, options), Message)","        }","    }","","    /**","     *","     * @param {number|string} chatId","     * @param {number} fromChatId","     * @param {number} messageId","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    forwardMessage(chatId, fromChatId, messageId, options) {","        const params = {","            chat_id: chatId,","            from_chat_id: fromChatId,","            message_id: messageId","        }","","        return this._callWithReturnType('forwardMessage', Object.assign(params, options), Message)","    }","","    /**","     * ","     * @param {number|string} chatId","     * @param {InputFile|Object} photo","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendPhoto(chatId, photo, options) {","        return this._callWithInputFile(","            'sendPhoto',","            photo,","            'photo',","            Object.assign(","                { chat_id: chatId },","                options","            )","        )","    }","","    /**","     *","     * @param {number|string} chatId","     * @param {InputFile|Object} audio","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendAudio(chatId, audio, options) {","        return this._callWithInputFile(","            'sendAudio',","            audio,","            'audio',","            Object.assign(","                { chat_id: chatId },","                options","            )","        )","    }","","    /**","     *","     * @param {number|string} chatId","     * @param {InputFile|Object} document","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendDocument(chatId, document, options) {","        return this._callWithInputFile(","            'sendDocument',","            document,","            'document',","            Object.assign(","                { chat_id: chatId },","                options","            )","        )","    }","","    /**","     * ","     * @param {number|string} chatId","     * @param {InputFile|Object} sticker","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendSticker(chatId, sticker, options) {","        return this._callWithInputFile(","            'sendSticker',","            sticker,","            'sticker',","            Object.assign(","                { chat_id: chatId },","                options","            )","        )","    }","","    /**","     *","     * @param {number|string} chatId","     * @param {InputFile|Object} video","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendVideo(chatId, video, options) {","        return this._callWithInputFile(","            'sendVideo',","            video,","            'video',","            Object.assign(","                { chat_id: chatId },","                options","            )","        )","    }","","    /**","     *","     * @param {number|string} chatId","     * @param {InputFile|Object} voice","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendVoice(chatId, voice, options) {","        return this._callWithInputFile(","            'sendVoice',","            voice,","            'voice',","            Object.assign(","                { chat_id: chatId },","                options","            )","        )","    }","","    /**","     *","     * @param {number|string} chatId","     * @param {number} latitude","     * @param {number} longitude","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendLocation(chatId, latitude, longitude, options) {","        const params = {","            chat_id: chatId,","            latitude: latitude,","            longitude: longitude","        }","        ","        return this._callWithReturnType('sendLocation', Object.assign(params, options), Message)","    }","","    /**","     *","     * @param {number|string} chatId","     * @param {number} latitude","     * @param {number} longitude","     * @param {string} title","     * @param {string}address","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendVenue(chatId, latitude, longitude, title, address, options) {","        const params = {","            chat_id: chatId,","            latitude: latitude,","            longitude: longitude,","            title: title,","            address: address","        }","","        return this._callWithReturnType('sendVenue', Object.assign(params, options), Message)","    }","","    /**","     *","     * @param {number|string} chatId","     * @param {string} phoneNumber","     * @param {string} firstName","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendContact(chatId, phoneNumber, firstName, options) {","        const params = {","            chat_id: chatId,","            phone_number: phoneNumber,","            first_name: firstName","        }","","        return this._callWithReturnType('sendContact', Object.assign(params, options), Message)","    }","","    /**","     *","     * @param {number|string} chatId","     * @param {string} action","     * @returns {Promise<Object>}","     */","    sendChatAction(chatId, action) {","        return this.call('sendChatAction', {","            chat_id: chatId,","            action: action","        })","    }","","    /**","     *","     * @param {number} userId","     * @param {number} offset","     * @param {number} limit","     * @returns {Promise<UserProfilePhotos>}","     */","    getUserProfilePhotos(userId, offset, limit) {","        return this._callWithReturnType('getUserProfilePhotos', {","            user_id: userId,","            ofsset: offset,","            limit: limit","        }, UserProfilePhotos)","    }","","    /**","     *","     * @param {number} fileId","     * @returns {Promise<File>}","     */","    getFile(fileId) {","        return this._callWithReturnType('getFile', { file_id: fileId }, File)","    }","","    /**","     *","     * @param {number|string} chatId","     * @param {number} userId","     * @returns {Promise<boolean>}","     */","    kickChatMember(chatId, userId) {","        const params = {","            chat_id: chatId,","            user_id: userId","        }","","        return this.call('kickChatMember', params)","            .then(r => r.result)","    }","","    /**","     *","     * @param {number|string} chatId","     * @returns {Promise<boolean>}","     */","    leaveChat(chatId) {","        return this.call('leaveChat', { chat_id: chatId })","            .then(r => r.result)","    }","","    /**","     *","     * @param {number|string} chatId","     * @param {number} userId","     * @returns {Promise<boolean>}","     */","    unbanChatMember(chatId, userId) {","        const params = {","            chat_id: chatId,","            user_id: userId","        }","","        return this.call('unbanChatMember', params)","            .then(r => r.result)","    }","","    /**","     *","     * @param {number|string} chatId","     * @returns {Promise<Chat>}","     */","    getChat(chatId) {","        return this._callWithReturnType('getChat', { chat_id: chatId }, Chat)","    }","","    /**","     *","     * @param {number|string} chatId","     * @returns {Promise<ChatMember[]>}","     */","    getChatAdministrators(chatId) {","        return this.call('getChatAdministrators', { chat_id: chatId })","            .then(r => r.result.map(m => ChatMember.deserialize(m)))","    }","","    /**","     *","     * @param {number|string} chatId","     * @returns {Promise<number>}","     */","    getChatMembersCount(chatId) {","        return this.call('getChatMembersCount', { chat_id: chatId })","            .then(r => r.result)","    }","","    /**","     *","     * @param {number|string} chatId","     * @param {number} userId","     * @returns {Promise<ChatMember>}","     */","    getChatMember(chatId, userId) {","        const params = {","            chat_id: chatId,","            user_id: userId","        }","","        return this._callWithReturnType('getChatMember', params, ChatMember)","    }","","    /**","     *","     * @param {string} callbackQueryId","     * @param {Object} [options]","     * @returns {Promise<boolean>}","     */","    answerCallbackQuery(callbackQueryId, options) {","        const params = {","            callback_query_id: callbackQueryId","        }","","        return this.call('answerCallbackQuery', Object.assign(params, options))","            .then(r => r.result)","    }","","    /**","     *","     * @param {string} text","     * @param {Object} options","     * @returns {Promise<boolean|Message>}","     */","    editMessageText(text, options) {","        const params = {","            text: text","        }","","        return this.call('editMessageText', Object.assign(params, options))","            .then(r => typeof r.result == 'boolean' ? r.require : Message.deserialize(r.result) )","    }","","    /**","     *","     * @param {Object} options","     * @returns {Promise<boolean|Message>}","     */","    editMessageCaption(options) {","        return this.call('editMessageCaption', options)","            .then(r => typeof r.result == 'boolean' ? r.require : Message.deserialize(r.result))","    }","","    /**","     *","     * @param {Object} options","     * @returns {Promise<boolean|Message>}","     */","    editMessageReplyMarkup(options) {","        return this.call('editMessageReplyMarkup', options)","            .then(r => typeof r.result == 'boolean' ? r.require : Message.deserialize(r.result))","    }","","    /**","     *","     * @param {string} inlineQueryId","     * @param {InlineQueryResult[]} results","     * @param {Object} [options]","     * @returns {Promise<boolean>}","     */","    answerInlineQuery(inlineQueryId, results, options) {","        const params = {","            inline_query_id: inlineQueryId,","            results: JSON.stringify(results)","        }","","        return this.call('answerInlineQuery', Object.assign(params, options))","            .then(r => r.result)","    }","","    /**","     * @param {number|string} chatId","     * @param {string} gameShortName","     * @param {object} [options]","     * @returns {Promise<Message>}","     */","    sendGame(chatId, gameShortName, options) {","        const params = {","            chat_id: chatId,","            game_short_name: gameShortName","        }","","        return this._callWithReturnType('sendGame', Object.assign(params, options), Message)","    }","","    /**","     * @param {number} userId","     * @param {number} score","     * @param {Object} [options]","     * @returns {Promise<boolean|Message>}","     */","    setGameScore(userId, score, options) {","        const params = {","            chat_id: chatId,","            score: score","        }","","        return this.call('setGameScore', Object.assign(params, options))","            .then(r => typeof r.result == 'boolean' ? r.require : Message.deserialize(r.result))","    }","","    getGameHighScores(userId, options) {","        return this.call('getGameHighScores', Object.assign({ user_id: userId }, options))","            .then(r => r.result.map(m => ChatMember.deserialize(m)))","    }","}","","module.exports = TelegramApi"],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"18":1,"19":1,"31":0,"32":0,"33":0,"34":0,"44":0,"55":0,"56":0,"58":0,"59":0,"74":0,"76":0,"88":0,"95":0,"96":0,"97":0,"100":0,"101":0,"102":0,"104":0,"107":0,"108":0,"110":0,"111":0,"112":0,"114":0,"117":0,"118":0,"120":0,"123":0,"124":0,"128":0,"130":0,"133":0,"134":0,"146":0,"147":0,"148":0,"149":0,"164":0,"165":0,"167":0,"169":0,"171":0,"179":0,"181":0,"191":0,"192":0,"201":0,"211":0,"222":0,"227":0,"228":0,"230":0,"233":0,"246":0,"252":0,"263":0,"282":0,"301":0,"320":0,"339":0,"358":0,"378":0,"384":0,"398":0,"406":0,"418":0,"424":0,"434":0,"448":0,"461":0,"471":0,"476":0,"477":0,"486":0,"487":0,"497":0,"502":0,"503":0,"512":0,"521":0,"522":0,"531":0,"532":0,"542":0,"547":0,"557":0,"561":0,"562":0,"572":0,"576":0,"577":0,"586":0,"587":0,"596":0,"597":0,"608":0,"613":0,"614":0,"624":0,"629":0,"639":0,"644":0,"645":0,"649":0,"650":0,"654":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/utils/CallbackQueue.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/utils/CallbackQueue.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":15},"end":{"line":8,"column":28}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":8},"end":{"line":20,"column":14}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":17},"end":{"line":31,"column":19}}}},"statementMap":{"1":{"start":{"line":9,"column":8},"end":{"line":9,"column":40}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":24}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":34}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":28}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":30}},"6":{"start":{"line":23,"column":8},"end":{"line":24,"column":32}},"7":{"start":{"line":24,"column":12},"end":{"line":24,"column":32}},"8":{"start":{"line":32,"column":8},"end":{"line":42,"column":9}},"9":{"start":{"line":33,"column":12},"end":{"line":33,"column":44}},"10":{"start":{"line":35,"column":12},"end":{"line":38,"column":52}},"11":{"start":{"line":36,"column":16},"end":{"line":36,"column":22}},"12":{"start":{"line":37,"column":16},"end":{"line":37,"column":36}},"13":{"start":{"line":40,"column":12},"end":{"line":40,"column":37}},"14":{"start":{"line":41,"column":12},"end":{"line":41,"column":18}},"15":{"start":{"line":44,"column":8},"end":{"line":44,"column":34}},"16":{"start":{"line":48,"column":0},"end":{"line":48,"column":30}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":8}},{"start":{"line":23,"column":8},"end":{"line":23,"column":8}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":8}},{"start":{"line":32,"column":8},"end":{"line":32,"column":8}}]},"3":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":36},"end":{"line":38,"column":47}},{"start":{"line":38,"column":50},"end":{"line":38,"column":51}}]}},"code":["'use strict'","","class CallbackQueue {","    /**","     * ","     * @param {number} countPerSec","     */","    constructor(countPerSec){","        this._delay = 1000 / countPerSec","        this._queue = []","        this._queueStarted = false","","        this._prepareQueue()","    }","","    /**","     * ","     * @param {function} func","     */","    push(func){","        this._queue.push(func)","","        if(!this._queueStarted)","            this._prepareQueue()","    }","","    /**","     * ","     * @private","     */","    _prepareQueue(){","        if(this._queue.length != 0){","            const func = this._queue.shift()","","            setTimeout(() => {","                func()","                this._prepareQueue()","            }, this._queueStarted ? this._delay : 0)","","            this._queueStarted = true","            return","        }","","        this._queueStarted = false","    }","}","","module.exports = CallbackQueue"],"l":{"9":0,"10":0,"11":0,"13":0,"21":0,"23":0,"24":0,"32":0,"33":0,"35":0,"36":0,"37":0,"40":0,"41":0,"44":0,"48":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/api/TelegramApiRequest.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/api/TelegramApiRequest.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":15},"end":{"line":13,"column":43}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":14},"end":{"line":23,"column":17}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":14},"end":{"line":31,"column":17}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":17},"end":{"line":39,"column":20}}}},"statementMap":{"1":{"start":{"line":14,"column":8},"end":{"line":14,"column":29}},"2":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"3":{"start":{"line":16,"column":8},"end":{"line":16,"column":35}},"4":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"5":{"start":{"line":32,"column":8},"end":{"line":32,"column":27}},"6":{"start":{"line":40,"column":8},"end":{"line":40,"column":30}},"7":{"start":{"line":44,"column":0},"end":{"line":44,"column":35}}},"branchMap":{},"code":["'use strict'","","/**"," * TelegramApiRequest"," */","class TelegramApiRequest { ","    /**","     *","     * @param {string} method","     * @param {Object} params","     * @param {Object} [multipart]","     */","    constructor(method, params, multipart) {","        this._method = method","        this._params = params","        this._multipart = multipart","    }","","    /**","     *","     * @returns {string}","     */","    get method() {","        return this._method","    }","","    /**","     *","     * @returns {Object}","     */","    get params() {","        return this._params","    }","","    /**","     *","     * @returns {Object}","     */","    get multipart() {","        return this._multipart","    }","}","","module.exports = TelegramApiRequest"],"l":{"14":0,"15":0,"16":0,"24":0,"32":0,"40":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Models.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Models.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":59,"column":1}}},"branchMap":{},"code":["module.exports = {","   Update: require('./Update'),","   WebhookInfo: require('./WebhookInfo'),","   User: require('./User'),","   Chat: require('./Chat'),","   Message: require('./Message'),","   MessageEntity: require('./MessageEntity'),","   PhotoSize: require('./PhotoSize'),","   Audio: require('./Audio'),","   Document: require('./Document'),","   Sticker: require('./Sticker'),","   Video: require('./Video'),","   Voice: require('./Voice'),","   Contact: require('./Contact'),","   Location: require('./Location'),","   Venue: require('./Venue'),","   UserProfilePhotos: require('./UserProfilePhotos'),","   File: require('./File'),","   ReplyKeyboardMarkup: require('./ReplyKeyboardMarkup'),","   KeyboardButton: require('./KeyboardButton'),","   ReplyKeyboardRemove: require('./ReplyKeyboardRemove'),","   InlineKeyboardMarkup: require('./InlineKeyboardMarkup'),","   InlineKeyboardButton: require('./InlineKeyboardButton'),","   CallbackQuery: require('./CallbackQuery'),","   ForceReply: require('./ForceReply'),","   ChatMember: require('./ChatMember'),","   ResponseParameters: require('./ResponseParameters'),","   InlineQuery: require('./InlineQuery'),","   InlineQueryResultArticle: require('./InlineQueryResultArticle'),","   InlineQueryResultPhoto: require('./InlineQueryResultPhoto'),","   InlineQueryResultGif: require('./InlineQueryResultGif'),","   InlineQueryResultMpeg4Gif: require('./InlineQueryResultMpeg4Gif'),","   InlineQueryResultVideo: require('./InlineQueryResultVideo'),","   InlineQueryResultAudio: require('./InlineQueryResultAudio'),","   InlineQueryResultVoice: require('./InlineQueryResultVoice'),","   InlineQueryResultDocument: require('./InlineQueryResultDocument'),","   InlineQueryResultLocation: require('./InlineQueryResultLocation'),","   InlineQueryResultVenue: require('./InlineQueryResultVenue'),","   InlineQueryResultContact: require('./InlineQueryResultContact'),","   InlineQueryResultGame: require('./InlineQueryResultGame'),","   InlineQueryResultCachedPhoto: require('./InlineQueryResultCachedPhoto'),","   InlineQueryResultCachedGif: require('./InlineQueryResultCachedGif'),","   InlineQueryResultCachedMpeg4Gif: require('./InlineQueryResultCachedMpeg4Gif'),","   InlineQueryResultCachedSticker: require('./InlineQueryResultCachedSticker'),","   InlineQueryResultCachedDocument: require('./InlineQueryResultCachedDocument'),","   InlineQueryResultCachedVideo: require('./InlineQueryResultCachedVideo'),","   InlineQueryResultCachedVoice: require('./InlineQueryResultCachedVoice'),","   InlineQueryResultCachedAudio: require('./InlineQueryResultCachedAudio'),","   InputTextMessageContent: require('./InputTextMessageContent'),","   InputLocationMessageContent: require('./InputLocationMessageContent'),","   InputVenueMessageContent: require('./InputVenueMessageContent'),","   InputContactMessageContent: require('./InputContactMessageContent'),","   ChosenInlineResult: require('./ChosenInlineResult'),","   Game: require('./Game'),","   Animation: require('./Animation'),","   GameHighScore: require('./GameHighScore'),","   InputMessageContent: require('./InputMessageContent'),","   InlineQueryResult: require('./InlineQueryResult'),","}"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Update.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Update.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":14},"end":{"line":33,"column":5}}},"2":{"name":"(anonymous_2)","line":48,"loc":{"start":{"line":48,"column":15},"end":{"line":48,"column":18}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":14},"end":{"line":56,"column":17}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":20},"end":{"line":64,"column":23}}},"5":{"name":"(anonymous_5)","line":72,"loc":{"start":{"line":72,"column":18},"end":{"line":72,"column":21}}},"6":{"name":"(anonymous_6)","line":80,"loc":{"start":{"line":80,"column":24},"end":{"line":80,"column":27}}},"7":{"name":"(anonymous_7)","line":88,"loc":{"start":{"line":88,"column":18},"end":{"line":88,"column":21}}},"8":{"name":"(anonymous_8)","line":96,"loc":{"start":{"line":96,"column":25},"end":{"line":96,"column":28}}},"9":{"name":"(anonymous_9)","line":104,"loc":{"start":{"line":104,"column":20},"end":{"line":104,"column":23}}},"10":{"name":"(anonymous_10)","line":113,"loc":{"start":{"line":113,"column":21},"end":{"line":113,"column":27}}},"11":{"name":"(anonymous_11)","line":130,"loc":{"start":{"line":130,"column":12},"end":{"line":130,"column":15}}},"12":{"name":"(anonymous_12)","line":147,"loc":{"start":{"line":147,"column":9},"end":{"line":147,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":58}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":48}},"5":{"start":{"line":34,"column":7},"end":{"line":34,"column":32}},"6":{"start":{"line":35,"column":7},"end":{"line":35,"column":30}},"7":{"start":{"line":36,"column":7},"end":{"line":36,"column":42}},"8":{"start":{"line":37,"column":7},"end":{"line":37,"column":38}},"9":{"start":{"line":38,"column":7},"end":{"line":38,"column":50}},"10":{"start":{"line":39,"column":7},"end":{"line":39,"column":38}},"11":{"start":{"line":40,"column":7},"end":{"line":40,"column":52}},"12":{"start":{"line":41,"column":7},"end":{"line":41,"column":42}},"13":{"start":{"line":49,"column":7},"end":{"line":49,"column":28}},"14":{"start":{"line":57,"column":7},"end":{"line":57,"column":27}},"15":{"start":{"line":65,"column":7},"end":{"line":65,"column":33}},"16":{"start":{"line":73,"column":7},"end":{"line":73,"column":31}},"17":{"start":{"line":81,"column":7},"end":{"line":81,"column":37}},"18":{"start":{"line":89,"column":7},"end":{"line":89,"column":31}},"19":{"start":{"line":97,"column":7},"end":{"line":97,"column":38}},"20":{"start":{"line":105,"column":7},"end":{"line":105,"column":33}},"21":{"start":{"line":114,"column":6},"end":{"line":123,"column":7}},"22":{"start":{"line":131,"column":6},"end":{"line":140,"column":7}},"23":{"start":{"line":148,"column":6},"end":{"line":148,"column":29}},"24":{"start":{"line":152,"column":0},"end":{"line":152,"column":23}}},"branchMap":{"1":{"line":116,"type":"cond-expr","locations":[{"start":{"line":116,"column":27},"end":{"line":116,"column":62}},{"start":{"line":116,"column":65},"end":{"line":116,"column":69}}]},"2":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":34},"end":{"line":117,"column":76}},{"start":{"line":117,"column":79},"end":{"line":117,"column":83}}]},"3":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":32},"end":{"line":118,"column":72}},{"start":{"line":118,"column":75},"end":{"line":118,"column":79}}]},"4":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":39},"end":{"line":119,"column":86}},{"start":{"line":119,"column":89},"end":{"line":119,"column":93}}]},"5":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":32},"end":{"line":120,"column":76}},{"start":{"line":120,"column":79},"end":{"line":120,"column":83}}]},"6":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":40},"end":{"line":121,"column":99}},{"start":{"line":121,"column":102},"end":{"line":121,"column":106}}]},"7":{"line":122,"type":"cond-expr","locations":[{"start":{"line":122,"column":34},"end":{"line":122,"column":82}},{"start":{"line":122,"column":85},"end":{"line":122,"column":89}}]},"8":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":37},"end":{"line":132,"column":50}},{"start":{"line":132,"column":53},"end":{"line":132,"column":62}}]},"9":{"line":133,"type":"cond-expr","locations":[{"start":{"line":133,"column":34},"end":{"line":133,"column":58}},{"start":{"line":133,"column":61},"end":{"line":133,"column":70}}]},"10":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":47},"end":{"line":134,"column":77}},{"start":{"line":134,"column":80},"end":{"line":134,"column":89}}]},"11":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":43},"end":{"line":135,"column":71}},{"start":{"line":135,"column":74},"end":{"line":135,"column":83}}]},"12":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":56},"end":{"line":136,"column":90}},{"start":{"line":136,"column":93},"end":{"line":136,"column":102}}]},"13":{"line":137,"type":"cond-expr","locations":[{"start":{"line":137,"column":43},"end":{"line":137,"column":71}},{"start":{"line":137,"column":74},"end":{"line":137,"column":83}}]},"14":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":58},"end":{"line":138,"column":93}},{"start":{"line":138,"column":96},"end":{"line":138,"column":105}}]},"15":{"line":139,"type":"cond-expr","locations":[{"start":{"line":139,"column":47},"end":{"line":139,"column":77}},{"start":{"line":139,"column":80},"end":{"line":139,"column":89}}]}},"code":["'use strict'","","const Message = require('./Message')","const InlineQuery = require('./InlineQuery')","const ChosenInlineResult = require('./ChosenInlineResult')","const CallbackQuery = require('./CallbackQuery')","","/**"," * This object represents an incoming update.At most one of the optional parameters can be present in any given update."," */","","class Update {","   /**","    *","    * @param {number} updateId","    * @param {Message|null} [message]","    * @param {Message|null} [editedMessage]","    * @param {Message|null} [channelPost]","    * @param {Message|null} [editedChannelPost]","    * @param {InlineQuery|null} [inlineQuery]","    * @param {ChosenInlineResult|null} [chosenInlineResult]","    * @param {CallbackQuery|null} [callbackQuery]","   */","   constructor(","     updateId, ","     message, ","     editedMessage, ","     channelPost, ","     editedChannelPost, ","     inlineQuery, ","     chosenInlineResult, ","     callbackQuery","   ) {","       this._updateId = updateId","       this._message = message","       this._editedMessage = editedMessage","       this._channelPost = channelPost","       this._editedChannelPost = editedChannelPost","       this._inlineQuery = inlineQuery","       this._chosenInlineResult = chosenInlineResult","       this._callbackQuery = callbackQuery","   }","","   /**","    * The update‘s unique identifier. Update identifiers start from a certain positive number and increase sequentially. This ID becomes especially handy if you’re using Webhooks, since it allows you to ignore repeated updates or to restore the correct update sequence, should they get out of order.","    * @returns {number}","   */","   get updateId() {","       return this._updateId","   }","","   /**","    * New incoming message of any kind — text, photo, sticker, etc.","    * @returns {Message|null}","   */","   get message() {","       return this._message","   }","","   /**","    * New version of a message that is known to the bot and was edited","    * @returns {Message|null}","   */","   get editedMessage() {","       return this._editedMessage","   }","","   /**","    * New incoming channel post of any kind — text, photo, sticker, etc.","    * @returns {Message|null}","   */","   get channelPost() {","       return this._channelPost","   }","","   /**","    * New version of a channel post that is known to the bot and was edited","    * @returns {Message|null}","   */","   get editedChannelPost() {","       return this._editedChannelPost","   }","","   /**","    * New incoming inline query","    * @returns {InlineQuery|null}","   */","   get inlineQuery() {","       return this._inlineQuery","   }","","   /**","    * The result of an inline query that was chosen by a user and sent to their chat partner.","    * @returns {ChosenInlineResult|null}","   */","   get chosenInlineResult() {","       return this._chosenInlineResult","   }","","   /**","    * New incoming callback query","    * @returns {CallbackQuery|null}","   */","   get callbackQuery() {","       return this._callbackQuery","   }","","   /**","    *","    * @param {Object} raw","    * @returns {Update}","    */","   static deserialize(raw) {","      return new Update(","          raw['update_id'], ","          raw['message'] ? Message.deserialize(raw['message']) : null, ","          raw['edited_message'] ? Message.deserialize(raw['edited_message']) : null, ","          raw['channel_post'] ? Message.deserialize(raw['channel_post']) : null, ","          raw['edited_channel_post'] ? Message.deserialize(raw['edited_channel_post']) : null, ","          raw['inline_query'] ? InlineQuery.deserialize(raw['inline_query']) : null, ","          raw['chosen_inline_result'] ? ChosenInlineResult.deserialize(raw['chosen_inline_result']) : null, ","          raw['callback_query'] ? CallbackQuery.deserialize(raw['callback_query']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          update_id: this.updateId ? this.updateId : undefined, ","          message: this.message ? this.message.serialize() : undefined, ","          edited_message: this.editedMessage ? this.editedMessage.serialize() : undefined, ","          channel_post: this.channelPost ? this.channelPost.serialize() : undefined, ","          edited_channel_post: this.editedChannelPost ? this.editedChannelPost.serialize() : undefined, ","          inline_query: this.inlineQuery ? this.inlineQuery.serialize() : undefined, ","          chosen_inline_result: this.chosenInlineResult ? this.chosenInlineResult.serialize() : undefined, ","          callback_query: this.callbackQuery ? this.callbackQuery.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = Update"],"l":{"3":1,"4":1,"5":1,"6":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"49":0,"57":0,"65":0,"73":0,"81":0,"89":0,"97":0,"105":0,"114":0,"131":0,"148":0,"152":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Message.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Message.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"fnMap":{"1":{"name":"(anonymous_1)","line":59,"loc":{"start":{"line":59,"column":14},"end":{"line":94,"column":5}}},"2":{"name":"(anonymous_2)","line":135,"loc":{"start":{"line":135,"column":16},"end":{"line":135,"column":19}}},"3":{"name":"(anonymous_3)","line":143,"loc":{"start":{"line":143,"column":11},"end":{"line":143,"column":14}}},"4":{"name":"(anonymous_4)","line":151,"loc":{"start":{"line":151,"column":11},"end":{"line":151,"column":14}}},"5":{"name":"(anonymous_5)","line":159,"loc":{"start":{"line":159,"column":11},"end":{"line":159,"column":14}}},"6":{"name":"(anonymous_6)","line":167,"loc":{"start":{"line":167,"column":18},"end":{"line":167,"column":21}}},"7":{"name":"(anonymous_7)","line":175,"loc":{"start":{"line":175,"column":22},"end":{"line":175,"column":25}}},"8":{"name":"(anonymous_8)","line":183,"loc":{"start":{"line":183,"column":27},"end":{"line":183,"column":30}}},"9":{"name":"(anonymous_9)","line":191,"loc":{"start":{"line":191,"column":18},"end":{"line":191,"column":21}}},"10":{"name":"(anonymous_10)","line":199,"loc":{"start":{"line":199,"column":21},"end":{"line":199,"column":24}}},"11":{"name":"(anonymous_11)","line":207,"loc":{"start":{"line":207,"column":15},"end":{"line":207,"column":18}}},"12":{"name":"(anonymous_12)","line":215,"loc":{"start":{"line":215,"column":11},"end":{"line":215,"column":14}}},"13":{"name":"(anonymous_13)","line":223,"loc":{"start":{"line":223,"column":15},"end":{"line":223,"column":18}}},"14":{"name":"(anonymous_14)","line":231,"loc":{"start":{"line":231,"column":12},"end":{"line":231,"column":15}}},"15":{"name":"(anonymous_15)","line":239,"loc":{"start":{"line":239,"column":15},"end":{"line":239,"column":18}}},"16":{"name":"(anonymous_16)","line":247,"loc":{"start":{"line":247,"column":11},"end":{"line":247,"column":14}}},"17":{"name":"(anonymous_17)","line":255,"loc":{"start":{"line":255,"column":12},"end":{"line":255,"column":15}}},"18":{"name":"(anonymous_18)","line":263,"loc":{"start":{"line":263,"column":14},"end":{"line":263,"column":17}}},"19":{"name":"(anonymous_19)","line":271,"loc":{"start":{"line":271,"column":12},"end":{"line":271,"column":15}}},"20":{"name":"(anonymous_20)","line":279,"loc":{"start":{"line":279,"column":12},"end":{"line":279,"column":15}}},"21":{"name":"(anonymous_21)","line":287,"loc":{"start":{"line":287,"column":14},"end":{"line":287,"column":17}}},"22":{"name":"(anonymous_22)","line":295,"loc":{"start":{"line":295,"column":14},"end":{"line":295,"column":17}}},"23":{"name":"(anonymous_23)","line":303,"loc":{"start":{"line":303,"column":15},"end":{"line":303,"column":18}}},"24":{"name":"(anonymous_24)","line":311,"loc":{"start":{"line":311,"column":12},"end":{"line":311,"column":15}}},"25":{"name":"(anonymous_25)","line":319,"loc":{"start":{"line":319,"column":20},"end":{"line":319,"column":23}}},"26":{"name":"(anonymous_26)","line":327,"loc":{"start":{"line":327,"column":21},"end":{"line":327,"column":24}}},"27":{"name":"(anonymous_27)","line":335,"loc":{"start":{"line":335,"column":19},"end":{"line":335,"column":22}}},"28":{"name":"(anonymous_28)","line":343,"loc":{"start":{"line":343,"column":19},"end":{"line":343,"column":22}}},"29":{"name":"(anonymous_29)","line":351,"loc":{"start":{"line":351,"column":22},"end":{"line":351,"column":25}}},"30":{"name":"(anonymous_30)","line":359,"loc":{"start":{"line":359,"column":23},"end":{"line":359,"column":26}}},"31":{"name":"(anonymous_31)","line":367,"loc":{"start":{"line":367,"column":28},"end":{"line":367,"column":31}}},"32":{"name":"(anonymous_32)","line":375,"loc":{"start":{"line":375,"column":25},"end":{"line":375,"column":28}}},"33":{"name":"(anonymous_33)","line":383,"loc":{"start":{"line":383,"column":22},"end":{"line":383,"column":25}}},"34":{"name":"(anonymous_34)","line":391,"loc":{"start":{"line":391,"column":24},"end":{"line":391,"column":27}}},"35":{"name":"(anonymous_35)","line":399,"loc":{"start":{"line":399,"column":20},"end":{"line":399,"column":23}}},"36":{"name":"(anonymous_36)","line":408,"loc":{"start":{"line":408,"column":21},"end":{"line":408,"column":27}}},"37":{"name":"(anonymous_37)","line":451,"loc":{"start":{"line":451,"column":12},"end":{"line":451,"column":15}}},"38":{"name":"(anonymous_38)","line":494,"loc":{"start":{"line":494,"column":9},"end":{"line":494,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":38}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"14":{"start":{"line":95,"column":7},"end":{"line":95,"column":34}},"15":{"start":{"line":96,"column":7},"end":{"line":96,"column":24}},"16":{"start":{"line":97,"column":7},"end":{"line":97,"column":24}},"17":{"start":{"line":98,"column":7},"end":{"line":98,"column":24}},"18":{"start":{"line":99,"column":7},"end":{"line":99,"column":38}},"19":{"start":{"line":100,"column":7},"end":{"line":100,"column":46}},"20":{"start":{"line":101,"column":7},"end":{"line":101,"column":56}},"21":{"start":{"line":102,"column":7},"end":{"line":102,"column":38}},"22":{"start":{"line":103,"column":7},"end":{"line":103,"column":44}},"23":{"start":{"line":104,"column":7},"end":{"line":104,"column":32}},"24":{"start":{"line":105,"column":7},"end":{"line":105,"column":24}},"25":{"start":{"line":106,"column":7},"end":{"line":106,"column":32}},"26":{"start":{"line":107,"column":7},"end":{"line":107,"column":26}},"27":{"start":{"line":108,"column":7},"end":{"line":108,"column":32}},"28":{"start":{"line":109,"column":7},"end":{"line":109,"column":24}},"29":{"start":{"line":110,"column":7},"end":{"line":110,"column":26}},"30":{"start":{"line":111,"column":7},"end":{"line":111,"column":30}},"31":{"start":{"line":112,"column":7},"end":{"line":112,"column":26}},"32":{"start":{"line":113,"column":7},"end":{"line":113,"column":26}},"33":{"start":{"line":114,"column":7},"end":{"line":114,"column":30}},"34":{"start":{"line":115,"column":7},"end":{"line":115,"column":30}},"35":{"start":{"line":116,"column":7},"end":{"line":116,"column":32}},"36":{"start":{"line":117,"column":7},"end":{"line":117,"column":26}},"37":{"start":{"line":118,"column":7},"end":{"line":118,"column":42}},"38":{"start":{"line":119,"column":7},"end":{"line":119,"column":44}},"39":{"start":{"line":120,"column":7},"end":{"line":120,"column":40}},"40":{"start":{"line":121,"column":7},"end":{"line":121,"column":40}},"41":{"start":{"line":122,"column":7},"end":{"line":122,"column":46}},"42":{"start":{"line":123,"column":7},"end":{"line":123,"column":48}},"43":{"start":{"line":124,"column":7},"end":{"line":124,"column":58}},"44":{"start":{"line":125,"column":7},"end":{"line":125,"column":52}},"45":{"start":{"line":126,"column":7},"end":{"line":126,"column":46}},"46":{"start":{"line":127,"column":7},"end":{"line":127,"column":50}},"47":{"start":{"line":128,"column":7},"end":{"line":128,"column":42}},"48":{"start":{"line":136,"column":7},"end":{"line":136,"column":29}},"49":{"start":{"line":144,"column":7},"end":{"line":144,"column":24}},"50":{"start":{"line":152,"column":7},"end":{"line":152,"column":24}},"51":{"start":{"line":160,"column":7},"end":{"line":160,"column":24}},"52":{"start":{"line":168,"column":7},"end":{"line":168,"column":31}},"53":{"start":{"line":176,"column":7},"end":{"line":176,"column":35}},"54":{"start":{"line":184,"column":7},"end":{"line":184,"column":40}},"55":{"start":{"line":192,"column":7},"end":{"line":192,"column":31}},"56":{"start":{"line":200,"column":7},"end":{"line":200,"column":34}},"57":{"start":{"line":208,"column":7},"end":{"line":208,"column":28}},"58":{"start":{"line":216,"column":7},"end":{"line":216,"column":24}},"59":{"start":{"line":224,"column":7},"end":{"line":224,"column":28}},"60":{"start":{"line":232,"column":7},"end":{"line":232,"column":25}},"61":{"start":{"line":240,"column":7},"end":{"line":240,"column":28}},"62":{"start":{"line":248,"column":7},"end":{"line":248,"column":24}},"63":{"start":{"line":256,"column":7},"end":{"line":256,"column":25}},"64":{"start":{"line":264,"column":7},"end":{"line":264,"column":27}},"65":{"start":{"line":272,"column":7},"end":{"line":272,"column":25}},"66":{"start":{"line":280,"column":7},"end":{"line":280,"column":25}},"67":{"start":{"line":288,"column":7},"end":{"line":288,"column":27}},"68":{"start":{"line":296,"column":7},"end":{"line":296,"column":27}},"69":{"start":{"line":304,"column":7},"end":{"line":304,"column":28}},"70":{"start":{"line":312,"column":7},"end":{"line":312,"column":25}},"71":{"start":{"line":320,"column":7},"end":{"line":320,"column":33}},"72":{"start":{"line":328,"column":7},"end":{"line":328,"column":34}},"73":{"start":{"line":336,"column":7},"end":{"line":336,"column":32}},"74":{"start":{"line":344,"column":7},"end":{"line":344,"column":32}},"75":{"start":{"line":352,"column":7},"end":{"line":352,"column":35}},"76":{"start":{"line":360,"column":7},"end":{"line":360,"column":36}},"77":{"start":{"line":368,"column":7},"end":{"line":368,"column":41}},"78":{"start":{"line":376,"column":7},"end":{"line":376,"column":38}},"79":{"start":{"line":384,"column":7},"end":{"line":384,"column":35}},"80":{"start":{"line":392,"column":7},"end":{"line":392,"column":37}},"81":{"start":{"line":400,"column":7},"end":{"line":400,"column":33}},"82":{"start":{"line":409,"column":6},"end":{"line":444,"column":7}},"83":{"start":{"line":421,"column":56},"end":{"line":421,"column":87}},"84":{"start":{"line":425,"column":50},"end":{"line":425,"column":77}},"85":{"start":{"line":436,"column":68},"end":{"line":436,"column":95}},"86":{"start":{"line":452,"column":6},"end":{"line":487,"column":7}},"87":{"start":{"line":464,"column":62},"end":{"line":464,"column":78}},"88":{"start":{"line":468,"column":53},"end":{"line":468,"column":69}},"89":{"start":{"line":479,"column":76},"end":{"line":479,"column":92}},"90":{"start":{"line":495,"column":6},"end":{"line":495,"column":29}},"91":{"start":{"line":499,"column":0},"end":{"line":499,"column":24}}},"branchMap":{"1":{"line":411,"type":"cond-expr","locations":[{"start":{"line":411,"column":24},"end":{"line":411,"column":53}},{"start":{"line":411,"column":56},"end":{"line":411,"column":60}}]},"2":{"line":413,"type":"cond-expr","locations":[{"start":{"line":413,"column":24},"end":{"line":413,"column":53}},{"start":{"line":413,"column":56},"end":{"line":413,"column":60}}]},"3":{"line":414,"type":"cond-expr","locations":[{"start":{"line":414,"column":32},"end":{"line":414,"column":69}},{"start":{"line":414,"column":72},"end":{"line":414,"column":76}}]},"4":{"line":415,"type":"cond-expr","locations":[{"start":{"line":415,"column":37},"end":{"line":415,"column":79}},{"start":{"line":415,"column":82},"end":{"line":415,"column":86}}]},"5":{"line":416,"type":"cond-expr","locations":[{"start":{"line":416,"column":43},"end":{"line":416,"column":73}},{"start":{"line":416,"column":76},"end":{"line":416,"column":80}}]},"6":{"line":417,"type":"cond-expr","locations":[{"start":{"line":417,"column":32},"end":{"line":417,"column":51}},{"start":{"line":417,"column":54},"end":{"line":417,"column":58}}]},"7":{"line":418,"type":"cond-expr","locations":[{"start":{"line":418,"column":36},"end":{"line":418,"column":80}},{"start":{"line":418,"column":83},"end":{"line":418,"column":87}}]},"8":{"line":419,"type":"cond-expr","locations":[{"start":{"line":419,"column":29},"end":{"line":419,"column":45}},{"start":{"line":419,"column":48},"end":{"line":419,"column":52}}]},"9":{"line":420,"type":"cond-expr","locations":[{"start":{"line":420,"column":24},"end":{"line":420,"column":35}},{"start":{"line":420,"column":38},"end":{"line":420,"column":42}}]},"10":{"line":421,"type":"cond-expr","locations":[{"start":{"line":421,"column":28},"end":{"line":421,"column":88}},{"start":{"line":421,"column":91},"end":{"line":421,"column":95}}]},"11":{"line":422,"type":"cond-expr","locations":[{"start":{"line":422,"column":25},"end":{"line":422,"column":56}},{"start":{"line":422,"column":59},"end":{"line":422,"column":63}}]},"12":{"line":423,"type":"cond-expr","locations":[{"start":{"line":423,"column":28},"end":{"line":423,"column":65}},{"start":{"line":423,"column":68},"end":{"line":423,"column":72}}]},"13":{"line":424,"type":"cond-expr","locations":[{"start":{"line":424,"column":24},"end":{"line":424,"column":53}},{"start":{"line":424,"column":56},"end":{"line":424,"column":60}}]},"14":{"line":425,"type":"cond-expr","locations":[{"start":{"line":425,"column":25},"end":{"line":425,"column":78}},{"start":{"line":425,"column":81},"end":{"line":425,"column":85}}]},"15":{"line":426,"type":"cond-expr","locations":[{"start":{"line":426,"column":27},"end":{"line":426,"column":62}},{"start":{"line":426,"column":65},"end":{"line":426,"column":69}}]},"16":{"line":427,"type":"cond-expr","locations":[{"start":{"line":427,"column":25},"end":{"line":427,"column":56}},{"start":{"line":427,"column":59},"end":{"line":427,"column":63}}]},"17":{"line":428,"type":"cond-expr","locations":[{"start":{"line":428,"column":25},"end":{"line":428,"column":56}},{"start":{"line":428,"column":59},"end":{"line":428,"column":63}}]},"18":{"line":429,"type":"cond-expr","locations":[{"start":{"line":429,"column":27},"end":{"line":429,"column":41}},{"start":{"line":429,"column":44},"end":{"line":429,"column":48}}]},"19":{"line":430,"type":"cond-expr","locations":[{"start":{"line":430,"column":27},"end":{"line":430,"column":62}},{"start":{"line":430,"column":65},"end":{"line":430,"column":69}}]},"20":{"line":431,"type":"cond-expr","locations":[{"start":{"line":431,"column":28},"end":{"line":431,"column":65}},{"start":{"line":431,"column":68},"end":{"line":431,"column":72}}]},"21":{"line":432,"type":"cond-expr","locations":[{"start":{"line":432,"column":25},"end":{"line":432,"column":56}},{"start":{"line":432,"column":59},"end":{"line":432,"column":63}}]},"22":{"line":433,"type":"cond-expr","locations":[{"start":{"line":433,"column":35},"end":{"line":433,"column":75}},{"start":{"line":433,"column":78},"end":{"line":433,"column":82}}]},"23":{"line":434,"type":"cond-expr","locations":[{"start":{"line":434,"column":36},"end":{"line":434,"column":77}},{"start":{"line":434,"column":80},"end":{"line":434,"column":84}}]},"24":{"line":435,"type":"cond-expr","locations":[{"start":{"line":435,"column":34},"end":{"line":435,"column":55}},{"start":{"line":435,"column":58},"end":{"line":435,"column":62}}]},"25":{"line":436,"type":"cond-expr","locations":[{"start":{"line":436,"column":34},"end":{"line":436,"column":96}},{"start":{"line":436,"column":99},"end":{"line":436,"column":103}}]},"26":{"line":437,"type":"cond-expr","locations":[{"start":{"line":437,"column":37},"end":{"line":437,"column":61}},{"start":{"line":437,"column":64},"end":{"line":437,"column":68}}]},"27":{"line":438,"type":"cond-expr","locations":[{"start":{"line":438,"column":38},"end":{"line":438,"column":63}},{"start":{"line":438,"column":66},"end":{"line":438,"column":70}}]},"28":{"line":439,"type":"cond-expr","locations":[{"start":{"line":439,"column":43},"end":{"line":439,"column":73}},{"start":{"line":439,"column":76},"end":{"line":439,"column":80}}]},"29":{"line":440,"type":"cond-expr","locations":[{"start":{"line":440,"column":40},"end":{"line":440,"column":67}},{"start":{"line":440,"column":70},"end":{"line":440,"column":74}}]},"30":{"line":441,"type":"cond-expr","locations":[{"start":{"line":441,"column":38},"end":{"line":441,"column":63}},{"start":{"line":441,"column":66},"end":{"line":441,"column":70}}]},"31":{"line":442,"type":"cond-expr","locations":[{"start":{"line":442,"column":40},"end":{"line":442,"column":67}},{"start":{"line":442,"column":70},"end":{"line":442,"column":74}}]},"32":{"line":443,"type":"cond-expr","locations":[{"start":{"line":443,"column":34},"end":{"line":443,"column":76}},{"start":{"line":443,"column":79},"end":{"line":443,"column":83}}]},"33":{"line":453,"type":"cond-expr","locations":[{"start":{"line":453,"column":39},"end":{"line":453,"column":53}},{"start":{"line":453,"column":56},"end":{"line":453,"column":65}}]},"34":{"line":454,"type":"cond-expr","locations":[{"start":{"line":454,"column":28},"end":{"line":454,"column":49}},{"start":{"line":454,"column":52},"end":{"line":454,"column":61}}]},"35":{"line":455,"type":"cond-expr","locations":[{"start":{"line":455,"column":28},"end":{"line":455,"column":37}},{"start":{"line":455,"column":40},"end":{"line":455,"column":49}}]},"36":{"line":456,"type":"cond-expr","locations":[{"start":{"line":456,"column":28},"end":{"line":456,"column":49}},{"start":{"line":456,"column":52},"end":{"line":456,"column":61}}]},"37":{"line":457,"type":"cond-expr","locations":[{"start":{"line":457,"column":43},"end":{"line":457,"column":71}},{"start":{"line":457,"column":74},"end":{"line":457,"column":83}}]},"38":{"line":458,"type":"cond-expr","locations":[{"start":{"line":458,"column":52},"end":{"line":458,"column":84}},{"start":{"line":458,"column":87},"end":{"line":458,"column":96}}]},"39":{"line":459,"type":"cond-expr","locations":[{"start":{"line":459,"column":63},"end":{"line":459,"column":88}},{"start":{"line":459,"column":91},"end":{"line":459,"column":100}}]},"40":{"line":460,"type":"cond-expr","locations":[{"start":{"line":460,"column":43},"end":{"line":460,"column":59}},{"start":{"line":460,"column":62},"end":{"line":460,"column":71}}]},"41":{"line":461,"type":"cond-expr","locations":[{"start":{"line":461,"column":50},"end":{"line":461,"column":81}},{"start":{"line":461,"column":84},"end":{"line":461,"column":93}}]},"42":{"line":462,"type":"cond-expr","locations":[{"start":{"line":462,"column":37},"end":{"line":462,"column":50}},{"start":{"line":462,"column":53},"end":{"line":462,"column":62}}]},"43":{"line":463,"type":"cond-expr","locations":[{"start":{"line":463,"column":28},"end":{"line":463,"column":37}},{"start":{"line":463,"column":40},"end":{"line":463,"column":49}}]},"44":{"line":464,"type":"cond-expr","locations":[{"start":{"line":464,"column":36},"end":{"line":464,"column":79}},{"start":{"line":464,"column":82},"end":{"line":464,"column":91}}]},"45":{"line":465,"type":"cond-expr","locations":[{"start":{"line":465,"column":30},"end":{"line":465,"column":52}},{"start":{"line":465,"column":55},"end":{"line":465,"column":64}}]},"46":{"line":466,"type":"cond-expr","locations":[{"start":{"line":466,"column":36},"end":{"line":466,"column":61}},{"start":{"line":466,"column":64},"end":{"line":466,"column":73}}]},"47":{"line":467,"type":"cond-expr","locations":[{"start":{"line":467,"column":28},"end":{"line":467,"column":49}},{"start":{"line":467,"column":52},"end":{"line":467,"column":61}}]},"48":{"line":468,"type":"cond-expr","locations":[{"start":{"line":468,"column":30},"end":{"line":468,"column":70}},{"start":{"line":468,"column":73},"end":{"line":468,"column":82}}]},"49":{"line":469,"type":"cond-expr","locations":[{"start":{"line":469,"column":34},"end":{"line":469,"column":58}},{"start":{"line":469,"column":61},"end":{"line":469,"column":70}}]},"50":{"line":470,"type":"cond-expr","locations":[{"start":{"line":470,"column":30},"end":{"line":470,"column":52}},{"start":{"line":470,"column":55},"end":{"line":470,"column":64}}]},"51":{"line":471,"type":"cond-expr","locations":[{"start":{"line":471,"column":30},"end":{"line":471,"column":52}},{"start":{"line":471,"column":55},"end":{"line":471,"column":64}}]},"52":{"line":472,"type":"cond-expr","locations":[{"start":{"line":472,"column":34},"end":{"line":472,"column":46}},{"start":{"line":472,"column":49},"end":{"line":472,"column":58}}]},"53":{"line":473,"type":"cond-expr","locations":[{"start":{"line":473,"column":34},"end":{"line":473,"column":58}},{"start":{"line":473,"column":61},"end":{"line":473,"column":70}}]},"54":{"line":474,"type":"cond-expr","locations":[{"start":{"line":474,"column":36},"end":{"line":474,"column":61}},{"start":{"line":474,"column":64},"end":{"line":474,"column":73}}]},"55":{"line":475,"type":"cond-expr","locations":[{"start":{"line":475,"column":30},"end":{"line":475,"column":52}},{"start":{"line":475,"column":55},"end":{"line":475,"column":64}}]},"56":{"line":476,"type":"cond-expr","locations":[{"start":{"line":476,"column":48},"end":{"line":476,"column":78}},{"start":{"line":476,"column":81},"end":{"line":476,"column":90}}]},"57":{"line":477,"type":"cond-expr","locations":[{"start":{"line":477,"column":50},"end":{"line":477,"column":81}},{"start":{"line":477,"column":84},"end":{"line":477,"column":93}}]},"58":{"line":478,"type":"cond-expr","locations":[{"start":{"line":478,"column":46},"end":{"line":478,"column":63}},{"start":{"line":478,"column":66},"end":{"line":478,"column":75}}]},"59":{"line":479,"type":"cond-expr","locations":[{"start":{"line":479,"column":46},"end":{"line":479,"column":93}},{"start":{"line":479,"column":96},"end":{"line":479,"column":105}}]},"60":{"line":480,"type":"cond-expr","locations":[{"start":{"line":480,"column":52},"end":{"line":480,"column":72}},{"start":{"line":480,"column":75},"end":{"line":480,"column":84}}]},"61":{"line":481,"type":"cond-expr","locations":[{"start":{"line":481,"column":54},"end":{"line":481,"column":75}},{"start":{"line":481,"column":78},"end":{"line":481,"column":87}}]},"62":{"line":482,"type":"cond-expr","locations":[{"start":{"line":482,"column":64},"end":{"line":482,"column":90}},{"start":{"line":482,"column":93},"end":{"line":482,"column":102}}]},"63":{"line":483,"type":"cond-expr","locations":[{"start":{"line":483,"column":58},"end":{"line":483,"column":81}},{"start":{"line":483,"column":84},"end":{"line":483,"column":93}}]},"64":{"line":484,"type":"cond-expr","locations":[{"start":{"line":484,"column":53},"end":{"line":484,"column":73}},{"start":{"line":484,"column":76},"end":{"line":484,"column":85}}]},"65":{"line":485,"type":"cond-expr","locations":[{"start":{"line":485,"column":57},"end":{"line":485,"column":79}},{"start":{"line":485,"column":82},"end":{"line":485,"column":91}}]},"66":{"line":486,"type":"cond-expr","locations":[{"start":{"line":486,"column":47},"end":{"line":486,"column":77}},{"start":{"line":486,"column":80},"end":{"line":486,"column":89}}]}},"code":["'use strict'","","const User = require('./User')","const Chat = require('./Chat')","const MessageEntity = require('./MessageEntity')","const Audio = require('./Audio')","const Document = require('./Document')","const Game = require('./Game')","const PhotoSize = require('./PhotoSize')","const Sticker = require('./Sticker')","const Video = require('./Video')","const Voice = require('./Voice')","const Contact = require('./Contact')","const Location = require('./Location')","const Venue = require('./Venue')","","/**"," * This object represents a message."," */","","class Message {","   /**","    *","    * @param {number} messageId","    * @param {User|null} [from]","    * @param {number} date","    * @param {Chat} chat","    * @param {User|null} [forwardFrom]","    * @param {Chat|null} [forwardFromChat]","    * @param {number|null} [forwardFromMessageId]","    * @param {number|null} [forwardDate]","    * @param {Message|null} [replyToMessage]","    * @param {number|null} [editDate]","    * @param {string|null} [text]","    * @param {MessageEntity[]|null} [entities]","    * @param {Audio|null} [audio]","    * @param {Document|null} [document]","    * @param {Game|null} [game]","    * @param {PhotoSize[]|null} [photo]","    * @param {Sticker|null} [sticker]","    * @param {Video|null} [video]","    * @param {Voice|null} [voice]","    * @param {string|null} [caption]","    * @param {Contact|null} [contact]","    * @param {Location|null} [location]","    * @param {Venue|null} [venue]","    * @param {User|null} [newChatMember]","    * @param {User|null} [leftChatMember]","    * @param {string|null} [newChatTitle]","    * @param {PhotoSize[]|null} [newChatPhoto]","    * @param {boolean|null} [deleteChatPhoto]","    * @param {boolean|null} [groupChatCreated]","    * @param {boolean|null} [supergroupChatCreated]","    * @param {boolean|null} [channelChatCreated]","    * @param {number|null} [migrateToChatId]","    * @param {number|null} [migrateFromChatId]","    * @param {Message|null} [pinnedMessage]","   */","   constructor(","     messageId, ","     from, ","     date, ","     chat, ","     forwardFrom, ","     forwardFromChat, ","     forwardFromMessageId, ","     forwardDate, ","     replyToMessage, ","     editDate, ","     text, ","     entities, ","     audio, ","     document, ","     game, ","     photo, ","     sticker, ","     video, ","     voice, ","     caption, ","     contact, ","     location, ","     venue, ","     newChatMember, ","     leftChatMember, ","     newChatTitle, ","     newChatPhoto, ","     deleteChatPhoto, ","     groupChatCreated, ","     supergroupChatCreated, ","     channelChatCreated, ","     migrateToChatId, ","     migrateFromChatId, ","     pinnedMessage","   ) {","       this._messageId = messageId","       this._from = from","       this._date = date","       this._chat = chat","       this._forwardFrom = forwardFrom","       this._forwardFromChat = forwardFromChat","       this._forwardFromMessageId = forwardFromMessageId","       this._forwardDate = forwardDate","       this._replyToMessage = replyToMessage","       this._editDate = editDate","       this._text = text","       this._entities = entities","       this._audio = audio","       this._document = document","       this._game = game","       this._photo = photo","       this._sticker = sticker","       this._video = video","       this._voice = voice","       this._caption = caption","       this._contact = contact","       this._location = location","       this._venue = venue","       this._newChatMember = newChatMember","       this._leftChatMember = leftChatMember","       this._newChatTitle = newChatTitle","       this._newChatPhoto = newChatPhoto","       this._deleteChatPhoto = deleteChatPhoto","       this._groupChatCreated = groupChatCreated","       this._supergroupChatCreated = supergroupChatCreated","       this._channelChatCreated = channelChatCreated","       this._migrateToChatId = migrateToChatId","       this._migrateFromChatId = migrateFromChatId","       this._pinnedMessage = pinnedMessage","   }","","   /**","    * Unique message identifier inside this chat","    * @returns {number}","   */","   get messageId() {","       return this._messageId","   }","","   /**","    * Sender, can be empty for messages sent to channels","    * @returns {User|null}","   */","   get from() {","       return this._from","   }","","   /**","    * Date the message was sent in Unix time","    * @returns {number}","   */","   get date() {","       return this._date","   }","","   /**","    * Conversation the message belongs to","    * @returns {Chat}","   */","   get chat() {","       return this._chat","   }","","   /**","    * For forwarded messages, sender of the original message","    * @returns {User|null}","   */","   get forwardFrom() {","       return this._forwardFrom","   }","","   /**","    * For messages forwarded from a channel, information about the original channel","    * @returns {Chat|null}","   */","   get forwardFromChat() {","       return this._forwardFromChat","   }","","   /**","    * For forwarded channel posts, identifier of the original message in the channel","    * @returns {number|null}","   */","   get forwardFromMessageId() {","       return this._forwardFromMessageId","   }","","   /**","    * For forwarded messages, date the original message was sent in Unix time","    * @returns {number|null}","   */","   get forwardDate() {","       return this._forwardDate","   }","","   /**","    * For replies, the original message. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply.","    * @returns {Message|null}","   */","   get replyToMessage() {","       return this._replyToMessage","   }","","   /**","    * Date the message was last edited in Unix time","    * @returns {number|null}","   */","   get editDate() {","       return this._editDate","   }","","   /**","    * For text messages, the actual UTF-8 text of the message, 0-4096 characters.","    * @returns {string|null}","   */","   get text() {","       return this._text","   }","","   /**","    * For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text","    * @returns {MessageEntity[]|null}","   */","   get entities() {","       return this._entities","   }","","   /**","    * Message is an audio file, information about the file","    * @returns {Audio|null}","   */","   get audio() {","       return this._audio","   }","","   /**","    * Message is a general file, information about the file","    * @returns {Document|null}","   */","   get document() {","       return this._document","   }","","   /**","    * Message is a game, information about the game. More about games »","    * @returns {Game|null}","   */","   get game() {","       return this._game","   }","","   /**","    * Message is a photo, available sizes of the photo","    * @returns {PhotoSize[]|null}","   */","   get photo() {","       return this._photo","   }","","   /**","    * Message is a sticker, information about the sticker","    * @returns {Sticker|null}","   */","   get sticker() {","       return this._sticker","   }","","   /**","    * Message is a video, information about the video","    * @returns {Video|null}","   */","   get video() {","       return this._video","   }","","   /**","    * Message is a voice message, information about the file","    * @returns {Voice|null}","   */","   get voice() {","       return this._voice","   }","","   /**","    * Caption for the document, photo or video, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Message is a shared contact, information about the contact","    * @returns {Contact|null}","   */","   get contact() {","       return this._contact","   }","","   /**","    * Message is a shared location, information about the location","    * @returns {Location|null}","   */","   get location() {","       return this._location","   }","","   /**","    * Message is a venue, information about the venue","    * @returns {Venue|null}","   */","   get venue() {","       return this._venue","   }","","   /**","    * A new member was added to the group, information about them (this member may be the bot itself)","    * @returns {User|null}","   */","   get newChatMember() {","       return this._newChatMember","   }","","   /**","    * A member was removed from the group, information about them (this member may be the bot itself)","    * @returns {User|null}","   */","   get leftChatMember() {","       return this._leftChatMember","   }","","   /**","    * A chat title was changed to this value","    * @returns {string|null}","   */","   get newChatTitle() {","       return this._newChatTitle","   }","","   /**","    * A chat photo was change to this value","    * @returns {PhotoSize[]|null}","   */","   get newChatPhoto() {","       return this._newChatPhoto","   }","","   /**","    * Service message: the chat photo was deleted","    * @returns {boolean|null}","   */","   get deleteChatPhoto() {","       return this._deleteChatPhoto","   }","","   /**","    * Service message: the group has been created","    * @returns {boolean|null}","   */","   get groupChatCreated() {","       return this._groupChatCreated","   }","","   /**","    * Service message: the supergroup has been created. This field can‘t be received in a message coming through updates, because bot can’t be a member of a supergroup when it is created. It can only be found in reply_to_message if someone replies to a very first message in a directly created supergroup.","    * @returns {boolean|null}","   */","   get supergroupChatCreated() {","       return this._supergroupChatCreated","   }","","   /**","    * Service message: the channel has been created. This field can‘t be received in a message coming through updates, because bot can’t be a member of a channel when it is created. It can only be found in reply_to_message if someone replies to a very first message in a channel.","    * @returns {boolean|null}","   */","   get channelChatCreated() {","       return this._channelChatCreated","   }","","   /**","    * The group has been migrated to a supergroup with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.","    * @returns {number|null}","   */","   get migrateToChatId() {","       return this._migrateToChatId","   }","","   /**","    * The supergroup has been migrated from a group with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.","    * @returns {number|null}","   */","   get migrateFromChatId() {","       return this._migrateFromChatId","   }","","   /**","    * Specified message was pinned. Note that the Message object in this field will not contain further reply_to_message fields even if it is itself a reply.","    * @returns {Message|null}","   */","   get pinnedMessage() {","       return this._pinnedMessage","   }","","   /**","    *","    * @param {Object} raw","    * @returns {Message}","    */","   static deserialize(raw) {","      return new Message(","          raw['message_id'], ","          raw['from'] ? User.deserialize(raw['from']) : null, ","          raw['date'], ","          raw['chat'] ? Chat.deserialize(raw['chat']) : null, ","          raw['forward_from'] ? User.deserialize(raw['forward_from']) : null, ","          raw['forward_from_chat'] ? Chat.deserialize(raw['forward_from_chat']) : null, ","          raw['forward_from_message_id'] ? raw['forward_from_message_id'] : null, ","          raw['forward_date'] ? raw['forward_date'] : null, ","          raw['reply_to_message'] ? Message.deserialize(raw['reply_to_message']) : null, ","          raw['edit_date'] ? raw['edit_date'] : null, ","          raw['text'] ? raw['text'] : null, ","          raw['entities'] ? raw['entities'].map(item => MessageEntity.deserialize(item)) : null, ","          raw['audio'] ? Audio.deserialize(raw['audio']) : null, ","          raw['document'] ? Document.deserialize(raw['document']) : null, ","          raw['game'] ? Game.deserialize(raw['game']) : null, ","          raw['photo'] ? raw['photo'].map(item => PhotoSize.deserialize(item)) : null, ","          raw['sticker'] ? Sticker.deserialize(raw['sticker']) : null, ","          raw['video'] ? Video.deserialize(raw['video']) : null, ","          raw['voice'] ? Voice.deserialize(raw['voice']) : null, ","          raw['caption'] ? raw['caption'] : null, ","          raw['contact'] ? Contact.deserialize(raw['contact']) : null, ","          raw['location'] ? Location.deserialize(raw['location']) : null, ","          raw['venue'] ? Venue.deserialize(raw['venue']) : null, ","          raw['new_chat_member'] ? User.deserialize(raw['new_chat_member']) : null, ","          raw['left_chat_member'] ? User.deserialize(raw['left_chat_member']) : null, ","          raw['new_chat_title'] ? raw['new_chat_title'] : null, ","          raw['new_chat_photo'] ? raw['new_chat_photo'].map(item => PhotoSize.deserialize(item)) : null, ","          raw['delete_chat_photo'] ? raw['delete_chat_photo'] : null, ","          raw['group_chat_created'] ? raw['group_chat_created'] : null, ","          raw['supergroup_chat_created'] ? raw['supergroup_chat_created'] : null, ","          raw['channel_chat_created'] ? raw['channel_chat_created'] : null, ","          raw['migrate_to_chat_id'] ? raw['migrate_to_chat_id'] : null, ","          raw['migrate_from_chat_id'] ? raw['migrate_from_chat_id'] : null, ","          raw['pinned_message'] ? Message.deserialize(raw['pinned_message']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          message_id: this.messageId ? this.messageId : undefined, ","          from: this.from ? this.from.serialize() : undefined, ","          date: this.date ? this.date : undefined, ","          chat: this.chat ? this.chat.serialize() : undefined, ","          forward_from: this.forwardFrom ? this.forwardFrom.serialize() : undefined, ","          forward_from_chat: this.forwardFromChat ? this.forwardFromChat.serialize() : undefined, ","          forward_from_message_id: this.forwardFromMessageId ? this.forwardFromMessageId : undefined, ","          forward_date: this.forwardDate ? this.forwardDate : undefined, ","          reply_to_message: this.replyToMessage ? this.replyToMessage.serialize() : undefined, ","          edit_date: this.editDate ? this.editDate : undefined, ","          text: this.text ? this.text : undefined, ","          entities: this.entities ? this.entities.map(item => item.serialize()) : undefined, ","          audio: this.audio ? this.audio.serialize() : undefined, ","          document: this.document ? this.document.serialize() : undefined, ","          game: this.game ? this.game.serialize() : undefined, ","          photo: this.photo ? this.photo.map(item => item.serialize()) : undefined, ","          sticker: this.sticker ? this.sticker.serialize() : undefined, ","          video: this.video ? this.video.serialize() : undefined, ","          voice: this.voice ? this.voice.serialize() : undefined, ","          caption: this.caption ? this.caption : undefined, ","          contact: this.contact ? this.contact.serialize() : undefined, ","          location: this.location ? this.location.serialize() : undefined, ","          venue: this.venue ? this.venue.serialize() : undefined, ","          new_chat_member: this.newChatMember ? this.newChatMember.serialize() : undefined, ","          left_chat_member: this.leftChatMember ? this.leftChatMember.serialize() : undefined, ","          new_chat_title: this.newChatTitle ? this.newChatTitle : undefined, ","          new_chat_photo: this.newChatPhoto ? this.newChatPhoto.map(item => item.serialize()) : undefined, ","          delete_chat_photo: this.deleteChatPhoto ? this.deleteChatPhoto : undefined, ","          group_chat_created: this.groupChatCreated ? this.groupChatCreated : undefined, ","          supergroup_chat_created: this.supergroupChatCreated ? this.supergroupChatCreated : undefined, ","          channel_chat_created: this.channelChatCreated ? this.channelChatCreated : undefined, ","          migrate_to_chat_id: this.migrateToChatId ? this.migrateToChatId : undefined, ","          migrate_from_chat_id: this.migrateFromChatId ? this.migrateFromChatId : undefined, ","          pinned_message: this.pinnedMessage ? this.pinnedMessage.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = Message"],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"136":0,"144":0,"152":0,"160":0,"168":0,"176":0,"184":0,"192":0,"200":0,"208":0,"216":0,"224":0,"232":0,"240":0,"248":0,"256":0,"264":0,"272":0,"280":0,"288":0,"296":0,"304":0,"312":0,"320":0,"328":0,"336":0,"344":0,"352":0,"360":0,"368":0,"376":0,"384":0,"392":0,"400":0,"409":0,"421":0,"425":0,"436":0,"452":0,"464":0,"468":0,"479":0,"495":0,"499":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/User.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/User.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":50}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":9},"end":{"line":26,"column":12}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":16},"end":{"line":34,"column":19}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":15},"end":{"line":42,"column":18}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":15},"end":{"line":50,"column":18}}},"6":{"name":"(anonymous_6)","line":59,"loc":{"start":{"line":59,"column":21},"end":{"line":59,"column":27}}},"7":{"name":"(anonymous_7)","line":67,"loc":{"start":{"line":67,"column":12},"end":{"line":67,"column":15}}},"8":{"name":"(anonymous_8)","line":80,"loc":{"start":{"line":80,"column":9},"end":{"line":80,"column":12}}}},"statementMap":{"1":{"start":{"line":16,"column":7},"end":{"line":16,"column":20}},"2":{"start":{"line":17,"column":7},"end":{"line":17,"column":34}},"3":{"start":{"line":18,"column":7},"end":{"line":18,"column":32}},"4":{"start":{"line":19,"column":7},"end":{"line":19,"column":32}},"5":{"start":{"line":27,"column":7},"end":{"line":27,"column":22}},"6":{"start":{"line":35,"column":7},"end":{"line":35,"column":29}},"7":{"start":{"line":43,"column":7},"end":{"line":43,"column":28}},"8":{"start":{"line":51,"column":7},"end":{"line":51,"column":28}},"9":{"start":{"line":60,"column":6},"end":{"line":60,"column":137}},"10":{"start":{"line":68,"column":6},"end":{"line":73,"column":7}},"11":{"start":{"line":81,"column":6},"end":{"line":81,"column":29}},"12":{"start":{"line":85,"column":0},"end":{"line":85,"column":21}}},"branchMap":{"1":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":71},"end":{"line":60,"column":87}},{"start":{"line":60,"column":90},"end":{"line":60,"column":94}}]},"2":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":114},"end":{"line":60,"column":129}},{"start":{"line":60,"column":132},"end":{"line":60,"column":136}}]},"3":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":24},"end":{"line":69,"column":31}},{"start":{"line":69,"column":34},"end":{"line":69,"column":43}}]},"4":{"line":70,"type":"cond-expr","locations":[{"start":{"line":70,"column":39},"end":{"line":70,"column":53}},{"start":{"line":70,"column":56},"end":{"line":70,"column":65}}]},"5":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":37},"end":{"line":71,"column":50}},{"start":{"line":71,"column":53},"end":{"line":71,"column":62}}]},"6":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":36},"end":{"line":72,"column":49}},{"start":{"line":72,"column":52},"end":{"line":72,"column":61}}]}},"code":["'use strict'","","/**"," * This object represents a Telegram user or bot."," */","","class User {","   /**","    *","    * @param {number} id","    * @param {string} firstName","    * @param {string|null} [lastName]","    * @param {string|null} [username]","   */","   constructor(id, firstName, lastName, username) {","       this._id = id","       this._firstName = firstName","       this._lastName = lastName","       this._username = username","   }","","   /**","    * Unique identifier for this user or bot","    * @returns {number}","   */","   get id() {","       return this._id","   }","","   /**","    * User‘s or bot’s first name","    * @returns {string}","   */","   get firstName() {","       return this._firstName","   }","","   /**","    * User‘s or bot’s last name","    * @returns {string|null}","   */","   get lastName() {","       return this._lastName","   }","","   /**","    * User‘s or bot’s username","    * @returns {string|null}","   */","   get username() {","       return this._username","   }","","   /**","    *","    * @param {Object} raw","    * @returns {User}","    */","   static deserialize(raw) {","      return new User(raw['id'], raw['first_name'], raw['last_name'] ? raw['last_name'] : null, raw['username'] ? raw['username'] : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          id: this.id ? this.id : undefined, ","          first_name: this.firstName ? this.firstName : undefined, ","          last_name: this.lastName ? this.lastName : undefined, ","          username: this.username ? this.username : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = User"],"l":{"16":0,"17":0,"18":0,"19":0,"27":0,"35":0,"43":0,"51":0,"60":0,"68":0,"81":0,"85":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Chat.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Chat.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":14},"end":{"line":26,"column":5}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":9},"end":{"line":40,"column":12}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":11},"end":{"line":48,"column":14}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":12},"end":{"line":56,"column":15}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":15},"end":{"line":64,"column":18}}},"6":{"name":"(anonymous_6)","line":72,"loc":{"start":{"line":72,"column":16},"end":{"line":72,"column":19}}},"7":{"name":"(anonymous_7)","line":80,"loc":{"start":{"line":80,"column":15},"end":{"line":80,"column":18}}},"8":{"name":"(anonymous_8)","line":88,"loc":{"start":{"line":88,"column":34},"end":{"line":88,"column":37}}},"9":{"name":"(anonymous_9)","line":97,"loc":{"start":{"line":97,"column":21},"end":{"line":97,"column":27}}},"10":{"name":"(anonymous_10)","line":113,"loc":{"start":{"line":113,"column":12},"end":{"line":113,"column":15}}},"11":{"name":"(anonymous_11)","line":129,"loc":{"start":{"line":129,"column":9},"end":{"line":129,"column":12}}}},"statementMap":{"1":{"start":{"line":27,"column":7},"end":{"line":27,"column":20}},"2":{"start":{"line":28,"column":7},"end":{"line":28,"column":24}},"3":{"start":{"line":29,"column":7},"end":{"line":29,"column":26}},"4":{"start":{"line":30,"column":7},"end":{"line":30,"column":32}},"5":{"start":{"line":31,"column":7},"end":{"line":31,"column":34}},"6":{"start":{"line":32,"column":7},"end":{"line":32,"column":32}},"7":{"start":{"line":33,"column":7},"end":{"line":33,"column":70}},"8":{"start":{"line":41,"column":7},"end":{"line":41,"column":22}},"9":{"start":{"line":49,"column":7},"end":{"line":49,"column":24}},"10":{"start":{"line":57,"column":7},"end":{"line":57,"column":25}},"11":{"start":{"line":65,"column":7},"end":{"line":65,"column":28}},"12":{"start":{"line":73,"column":7},"end":{"line":73,"column":29}},"13":{"start":{"line":81,"column":7},"end":{"line":81,"column":28}},"14":{"start":{"line":89,"column":7},"end":{"line":89,"column":47}},"15":{"start":{"line":98,"column":6},"end":{"line":106,"column":7}},"16":{"start":{"line":114,"column":6},"end":{"line":122,"column":7}},"17":{"start":{"line":130,"column":6},"end":{"line":130,"column":29}},"18":{"start":{"line":134,"column":0},"end":{"line":134,"column":21}}},"branchMap":{"1":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":25},"end":{"line":101,"column":37}},{"start":{"line":101,"column":40},"end":{"line":101,"column":44}}]},"2":{"line":102,"type":"cond-expr","locations":[{"start":{"line":102,"column":28},"end":{"line":102,"column":43}},{"start":{"line":102,"column":46},"end":{"line":102,"column":50}}]},"3":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":30},"end":{"line":103,"column":47}},{"start":{"line":103,"column":50},"end":{"line":103,"column":54}}]},"4":{"line":104,"type":"cond-expr","locations":[{"start":{"line":104,"column":29},"end":{"line":104,"column":45}},{"start":{"line":104,"column":48},"end":{"line":104,"column":52}}]},"5":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":50},"end":{"line":105,"column":87}},{"start":{"line":105,"column":90},"end":{"line":105,"column":94}}]},"6":{"line":115,"type":"cond-expr","locations":[{"start":{"line":115,"column":24},"end":{"line":115,"column":31}},{"start":{"line":115,"column":34},"end":{"line":115,"column":43}}]},"7":{"line":116,"type":"cond-expr","locations":[{"start":{"line":116,"column":28},"end":{"line":116,"column":37}},{"start":{"line":116,"column":40},"end":{"line":116,"column":49}}]},"8":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":30},"end":{"line":117,"column":40}},{"start":{"line":117,"column":43},"end":{"line":117,"column":52}}]},"9":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":36},"end":{"line":118,"column":49}},{"start":{"line":118,"column":52},"end":{"line":118,"column":61}}]},"10":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":39},"end":{"line":119,"column":53}},{"start":{"line":119,"column":56},"end":{"line":119,"column":65}}]},"11":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":37},"end":{"line":120,"column":50}},{"start":{"line":120,"column":53},"end":{"line":120,"column":62}}]},"12":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":77},"end":{"line":121,"column":109}},{"start":{"line":121,"column":112},"end":{"line":121,"column":121}}]}},"code":["'use strict'","","/**"," * This object represents a chat."," */","","class Chat {","   /**","    *","    * @param {number} id","    * @param {string} type","    * @param {string|null} [title]","    * @param {string|null} [username]","    * @param {string|null} [firstName]","    * @param {string|null} [lastName]","    * @param {boolean|null} [allMembersAreAdministrators]","   */","   constructor(","     id, ","     type, ","     title, ","     username, ","     firstName, ","     lastName, ","     allMembersAreAdministrators","   ) {","       this._id = id","       this._type = type","       this._title = title","       this._username = username","       this._firstName = firstName","       this._lastName = lastName","       this._allMembersAreAdministrators = allMembersAreAdministrators","   }","","   /**","    * Unique identifier for this chat. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.","    * @returns {number}","   */","   get id() {","       return this._id","   }","","   /**","    * Type of chat, can be either “private”, “group”, “supergroup” or “channel”","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Title, for supergroups, channels and group chats","    * @returns {string|null}","   */","   get title() {","       return this._title","   }","","   /**","    * Username, for private chats, supergroups and channels if available","    * @returns {string|null}","   */","   get username() {","       return this._username","   }","","   /**","    * First name of the other party in a private chat","    * @returns {string|null}","   */","   get firstName() {","       return this._firstName","   }","","   /**","    * Last name of the other party in a private chat","    * @returns {string|null}","   */","   get lastName() {","       return this._lastName","   }","","   /**","    * True if a group has ‘All Members Are Admins’ enabled.","    * @returns {boolean|null}","   */","   get allMembersAreAdministrators() {","       return this._allMembersAreAdministrators","   }","","   /**","    *","    * @param {Object} raw","    * @returns {Chat}","    */","   static deserialize(raw) {","      return new Chat(","          raw['id'], ","          raw['type'], ","          raw['title'] ? raw['title'] : null, ","          raw['username'] ? raw['username'] : null, ","          raw['first_name'] ? raw['first_name'] : null, ","          raw['last_name'] ? raw['last_name'] : null, ","          raw['all_members_are_administrators'] ? raw['all_members_are_administrators'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          id: this.id ? this.id : undefined, ","          type: this.type ? this.type : undefined, ","          title: this.title ? this.title : undefined, ","          username: this.username ? this.username : undefined, ","          first_name: this.firstName ? this.firstName : undefined, ","          last_name: this.lastName ? this.lastName : undefined, ","          all_members_are_administrators: this.allMembersAreAdministrators ? this.allMembersAreAdministrators : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = Chat"],"l":{"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"41":0,"49":0,"57":0,"65":0,"73":0,"81":0,"89":0,"98":0,"114":0,"130":0,"134":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/MessageEntity.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/MessageEntity.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":48}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":11},"end":{"line":30,"column":14}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":13},"end":{"line":38,"column":16}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":13},"end":{"line":46,"column":16}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":10},"end":{"line":54,"column":13}}},"6":{"name":"(anonymous_6)","line":62,"loc":{"start":{"line":62,"column":11},"end":{"line":62,"column":14}}},"7":{"name":"(anonymous_7)","line":71,"loc":{"start":{"line":71,"column":21},"end":{"line":71,"column":27}}},"8":{"name":"(anonymous_8)","line":85,"loc":{"start":{"line":85,"column":12},"end":{"line":85,"column":15}}},"9":{"name":"(anonymous_9)","line":99,"loc":{"start":{"line":99,"column":9},"end":{"line":99,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":19,"column":7},"end":{"line":19,"column":24}},"3":{"start":{"line":20,"column":7},"end":{"line":20,"column":28}},"4":{"start":{"line":21,"column":7},"end":{"line":21,"column":28}},"5":{"start":{"line":22,"column":7},"end":{"line":22,"column":22}},"6":{"start":{"line":23,"column":7},"end":{"line":23,"column":24}},"7":{"start":{"line":31,"column":7},"end":{"line":31,"column":24}},"8":{"start":{"line":39,"column":7},"end":{"line":39,"column":26}},"9":{"start":{"line":47,"column":7},"end":{"line":47,"column":26}},"10":{"start":{"line":55,"column":7},"end":{"line":55,"column":23}},"11":{"start":{"line":63,"column":7},"end":{"line":63,"column":24}},"12":{"start":{"line":72,"column":6},"end":{"line":78,"column":7}},"13":{"start":{"line":86,"column":6},"end":{"line":92,"column":7}},"14":{"start":{"line":100,"column":6},"end":{"line":100,"column":29}},"15":{"start":{"line":104,"column":0},"end":{"line":104,"column":30}}},"branchMap":{"1":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":23},"end":{"line":76,"column":33}},{"start":{"line":76,"column":36},"end":{"line":76,"column":40}}]},"2":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":24},"end":{"line":77,"column":53}},{"start":{"line":77,"column":56},"end":{"line":77,"column":60}}]},"3":{"line":87,"type":"cond-expr","locations":[{"start":{"line":87,"column":28},"end":{"line":87,"column":37}},{"start":{"line":87,"column":40},"end":{"line":87,"column":49}}]},"4":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":32},"end":{"line":88,"column":43}},{"start":{"line":88,"column":46},"end":{"line":88,"column":55}}]},"5":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":32},"end":{"line":89,"column":43}},{"start":{"line":89,"column":46},"end":{"line":89,"column":55}}]},"6":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":26},"end":{"line":90,"column":34}},{"start":{"line":90,"column":37},"end":{"line":90,"column":46}}]},"7":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":28},"end":{"line":91,"column":49}},{"start":{"line":91,"column":52},"end":{"line":91,"column":61}}]}},"code":["'use strict'","","const User = require('./User')","","/**"," * This object represents one special entity in a text message. For example, hashtags, usernames, URLs, etc. "," */","","class MessageEntity {","   /**","    *","    * @param {string} type","    * @param {number} offset","    * @param {number} length","    * @param {string|null} [url]","    * @param {User|null} [user]","   */","   constructor(type, offset, length, url, user) {","       this._type = type","       this._offset = offset","       this._length = length","       this._url = url","       this._user = user","   }","","   /**","    * Type of the entity. Can be mention (@username), hashtag, bot_command, url, email, bold (bold text), italic (italic text), code (monowidth string), pre (monowidth block), text_link (for clickable text URLs), text_mention (for users without usernames)","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Offset in UTF-16 code units to the start of the entity","    * @returns {number}","   */","   get offset() {","       return this._offset","   }","","   /**","    * Length of the entity in UTF-16 code units","    * @returns {number}","   */","   get length() {","       return this._length","   }","","   /**","    * For “text_link” only, url that will be opened after user taps on the text","    * @returns {string|null}","   */","   get url() {","       return this._url","   }","","   /**","    * For “text_mention” only, the mentioned user","    * @returns {User|null}","   */","   get user() {","       return this._user","   }","","   /**","    *","    * @param {Object} raw","    * @returns {MessageEntity}","    */","   static deserialize(raw) {","      return new MessageEntity(","          raw['type'], ","          raw['offset'], ","          raw['length'], ","          raw['url'] ? raw['url'] : null, ","          raw['user'] ? User.deserialize(raw['user']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          offset: this.offset ? this.offset : undefined, ","          length: this.length ? this.length : undefined, ","          url: this.url ? this.url : undefined, ","          user: this.user ? this.user.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = MessageEntity"],"l":{"3":1,"19":0,"20":0,"21":0,"22":0,"23":0,"31":0,"39":0,"47":0,"55":0,"63":0,"72":0,"86":0,"100":0,"104":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Audio.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Audio.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":71}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":16}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":15},"end":{"line":38,"column":18}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":16},"end":{"line":46,"column":19}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":12},"end":{"line":54,"column":15}}},"6":{"name":"(anonymous_6)","line":62,"loc":{"start":{"line":62,"column":15},"end":{"line":62,"column":18}}},"7":{"name":"(anonymous_7)","line":70,"loc":{"start":{"line":70,"column":15},"end":{"line":70,"column":18}}},"8":{"name":"(anonymous_8)","line":79,"loc":{"start":{"line":79,"column":21},"end":{"line":79,"column":27}}},"9":{"name":"(anonymous_9)","line":94,"loc":{"start":{"line":94,"column":12},"end":{"line":94,"column":15}}},"10":{"name":"(anonymous_10)","line":109,"loc":{"start":{"line":109,"column":9},"end":{"line":109,"column":12}}}},"statementMap":{"1":{"start":{"line":18,"column":7},"end":{"line":18,"column":28}},"2":{"start":{"line":19,"column":7},"end":{"line":19,"column":32}},"3":{"start":{"line":20,"column":7},"end":{"line":20,"column":34}},"4":{"start":{"line":21,"column":7},"end":{"line":21,"column":26}},"5":{"start":{"line":22,"column":7},"end":{"line":22,"column":32}},"6":{"start":{"line":23,"column":7},"end":{"line":23,"column":32}},"7":{"start":{"line":31,"column":7},"end":{"line":31,"column":26}},"8":{"start":{"line":39,"column":7},"end":{"line":39,"column":28}},"9":{"start":{"line":47,"column":7},"end":{"line":47,"column":29}},"10":{"start":{"line":55,"column":7},"end":{"line":55,"column":25}},"11":{"start":{"line":63,"column":7},"end":{"line":63,"column":28}},"12":{"start":{"line":71,"column":7},"end":{"line":71,"column":28}},"13":{"start":{"line":80,"column":6},"end":{"line":87,"column":7}},"14":{"start":{"line":95,"column":6},"end":{"line":102,"column":7}},"15":{"start":{"line":110,"column":6},"end":{"line":110,"column":29}},"16":{"start":{"line":114,"column":0},"end":{"line":114,"column":22}}},"branchMap":{"1":{"line":83,"type":"cond-expr","locations":[{"start":{"line":83,"column":29},"end":{"line":83,"column":45}},{"start":{"line":83,"column":48},"end":{"line":83,"column":52}}]},"2":{"line":84,"type":"cond-expr","locations":[{"start":{"line":84,"column":25},"end":{"line":84,"column":37}},{"start":{"line":84,"column":40},"end":{"line":84,"column":44}}]},"3":{"line":85,"type":"cond-expr","locations":[{"start":{"line":85,"column":29},"end":{"line":85,"column":45}},{"start":{"line":85,"column":48},"end":{"line":85,"column":52}}]},"4":{"line":86,"type":"cond-expr","locations":[{"start":{"line":86,"column":29},"end":{"line":86,"column":45}},{"start":{"line":86,"column":48},"end":{"line":86,"column":52}}]},"5":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":33},"end":{"line":96,"column":44}},{"start":{"line":96,"column":47},"end":{"line":96,"column":56}}]},"6":{"line":97,"type":"cond-expr","locations":[{"start":{"line":97,"column":36},"end":{"line":97,"column":49}},{"start":{"line":97,"column":52},"end":{"line":97,"column":61}}]},"7":{"line":98,"type":"cond-expr","locations":[{"start":{"line":98,"column":38},"end":{"line":98,"column":52}},{"start":{"line":98,"column":55},"end":{"line":98,"column":64}}]},"8":{"line":99,"type":"cond-expr","locations":[{"start":{"line":99,"column":30},"end":{"line":99,"column":40}},{"start":{"line":99,"column":43},"end":{"line":99,"column":52}}]},"9":{"line":100,"type":"cond-expr","locations":[{"start":{"line":100,"column":37},"end":{"line":100,"column":50}},{"start":{"line":100,"column":53},"end":{"line":100,"column":62}}]},"10":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":37},"end":{"line":101,"column":50}},{"start":{"line":101,"column":53},"end":{"line":101,"column":62}}]}},"code":["'use strict'","","/**"," * This object represents an audio file to be treated as music by the Telegram clients."," */","","class Audio {","   /**","    *","    * @param {string} fileId","    * @param {number} duration","    * @param {string|null} [performer]","    * @param {string|null} [title]","    * @param {string|null} [mimeType]","    * @param {number|null} [fileSize]","   */","   constructor(fileId, duration, performer, title, mimeType, fileSize) {","       this._fileId = fileId","       this._duration = duration","       this._performer = performer","       this._title = title","       this._mimeType = mimeType","       this._fileSize = fileSize","   }","","   /**","    * Unique identifier for this file","    * @returns {string}","   */","   get fileId() {","       return this._fileId","   }","","   /**","    * Duration of the audio in seconds as defined by sender","    * @returns {number}","   */","   get duration() {","       return this._duration","   }","","   /**","    * Performer of the audio as defined by sender or by audio tags","    * @returns {string|null}","   */","   get performer() {","       return this._performer","   }","","   /**","    * Title of the audio as defined by sender or by audio tags","    * @returns {string|null}","   */","   get title() {","       return this._title","   }","","   /**","    * MIME type of the file as defined by sender","    * @returns {string|null}","   */","   get mimeType() {","       return this._mimeType","   }","","   /**","    * File size","    * @returns {number|null}","   */","   get fileSize() {","       return this._fileSize","   }","","   /**","    *","    * @param {Object} raw","    * @returns {Audio}","    */","   static deserialize(raw) {","      return new Audio(","          raw['file_id'], ","          raw['duration'], ","          raw['performer'] ? raw['performer'] : null, ","          raw['title'] ? raw['title'] : null, ","          raw['mime_type'] ? raw['mime_type'] : null, ","          raw['file_size'] ? raw['file_size'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          file_id: this.fileId ? this.fileId : undefined, ","          duration: this.duration ? this.duration : undefined, ","          performer: this.performer ? this.performer : undefined, ","          title: this.title ? this.title : undefined, ","          mime_type: this.mimeType ? this.mimeType : undefined, ","          file_size: this.fileSize ? this.fileSize : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = Audio"],"l":{"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"31":0,"39":0,"47":0,"55":0,"63":0,"71":0,"80":0,"95":0,"110":0,"114":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Document.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Document.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":60}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":16}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":12},"end":{"line":38,"column":15}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":15},"end":{"line":46,"column":18}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":15},"end":{"line":54,"column":18}}},"6":{"name":"(anonymous_6)","line":62,"loc":{"start":{"line":62,"column":15},"end":{"line":62,"column":18}}},"7":{"name":"(anonymous_7)","line":71,"loc":{"start":{"line":71,"column":21},"end":{"line":71,"column":27}}},"8":{"name":"(anonymous_8)","line":85,"loc":{"start":{"line":85,"column":12},"end":{"line":85,"column":15}}},"9":{"name":"(anonymous_9)","line":99,"loc":{"start":{"line":99,"column":9},"end":{"line":99,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":19,"column":7},"end":{"line":19,"column":28}},"3":{"start":{"line":20,"column":7},"end":{"line":20,"column":26}},"4":{"start":{"line":21,"column":7},"end":{"line":21,"column":32}},"5":{"start":{"line":22,"column":7},"end":{"line":22,"column":32}},"6":{"start":{"line":23,"column":7},"end":{"line":23,"column":32}},"7":{"start":{"line":31,"column":7},"end":{"line":31,"column":26}},"8":{"start":{"line":39,"column":7},"end":{"line":39,"column":25}},"9":{"start":{"line":47,"column":7},"end":{"line":47,"column":28}},"10":{"start":{"line":55,"column":7},"end":{"line":55,"column":28}},"11":{"start":{"line":63,"column":7},"end":{"line":63,"column":28}},"12":{"start":{"line":72,"column":6},"end":{"line":78,"column":7}},"13":{"start":{"line":86,"column":6},"end":{"line":92,"column":7}},"14":{"start":{"line":100,"column":6},"end":{"line":100,"column":29}},"15":{"start":{"line":104,"column":0},"end":{"line":104,"column":25}}},"branchMap":{"1":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":25},"end":{"line":74,"column":60}},{"start":{"line":74,"column":63},"end":{"line":74,"column":67}}]},"2":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":29},"end":{"line":75,"column":45}},{"start":{"line":75,"column":48},"end":{"line":75,"column":52}}]},"3":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":29},"end":{"line":76,"column":45}},{"start":{"line":76,"column":48},"end":{"line":76,"column":52}}]},"4":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":29},"end":{"line":77,"column":45}},{"start":{"line":77,"column":48},"end":{"line":77,"column":52}}]},"5":{"line":87,"type":"cond-expr","locations":[{"start":{"line":87,"column":33},"end":{"line":87,"column":44}},{"start":{"line":87,"column":47},"end":{"line":87,"column":56}}]},"6":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":30},"end":{"line":88,"column":52}},{"start":{"line":88,"column":55},"end":{"line":88,"column":64}}]},"7":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":37},"end":{"line":89,"column":50}},{"start":{"line":89,"column":53},"end":{"line":89,"column":62}}]},"8":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":37},"end":{"line":90,"column":50}},{"start":{"line":90,"column":53},"end":{"line":90,"column":62}}]},"9":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":37},"end":{"line":91,"column":50}},{"start":{"line":91,"column":53},"end":{"line":91,"column":62}}]}},"code":["'use strict'","","const PhotoSize = require('./PhotoSize')","","/**"," * This object represents a general file (as opposed to photos, voice messages and audio files)."," */","","class Document {","   /**","    *","    * @param {string} fileId","    * @param {PhotoSize|null} [thumb]","    * @param {string|null} [fileName]","    * @param {string|null} [mimeType]","    * @param {number|null} [fileSize]","   */","   constructor(fileId, thumb, fileName, mimeType, fileSize) {","       this._fileId = fileId","       this._thumb = thumb","       this._fileName = fileName","       this._mimeType = mimeType","       this._fileSize = fileSize","   }","","   /**","    * Unique file identifier","    * @returns {string}","   */","   get fileId() {","       return this._fileId","   }","","   /**","    * Document thumbnail as defined by sender","    * @returns {PhotoSize|null}","   */","   get thumb() {","       return this._thumb","   }","","   /**","    * Original filename as defined by sender","    * @returns {string|null}","   */","   get fileName() {","       return this._fileName","   }","","   /**","    * MIME type of the file as defined by sender","    * @returns {string|null}","   */","   get mimeType() {","       return this._mimeType","   }","","   /**","    * File size","    * @returns {number|null}","   */","   get fileSize() {","       return this._fileSize","   }","","   /**","    *","    * @param {Object} raw","    * @returns {Document}","    */","   static deserialize(raw) {","      return new Document(","          raw['file_id'], ","          raw['thumb'] ? PhotoSize.deserialize(raw['thumb']) : null, ","          raw['file_name'] ? raw['file_name'] : null, ","          raw['mime_type'] ? raw['mime_type'] : null, ","          raw['file_size'] ? raw['file_size'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          file_id: this.fileId ? this.fileId : undefined, ","          thumb: this.thumb ? this.thumb.serialize() : undefined, ","          file_name: this.fileName ? this.fileName : undefined, ","          mime_type: this.mimeType ? this.mimeType : undefined, ","          file_size: this.fileSize ? this.fileSize : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = Document"],"l":{"3":1,"19":0,"20":0,"21":0,"22":0,"23":0,"31":0,"39":0,"47":0,"55":0,"63":0,"72":0,"86":0,"100":0,"104":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/PhotoSize.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/PhotoSize.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":48}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":13},"end":{"line":26,"column":16}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":15}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":13},"end":{"line":42,"column":16}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":15},"end":{"line":50,"column":18}}},"6":{"name":"(anonymous_6)","line":59,"loc":{"start":{"line":59,"column":21},"end":{"line":59,"column":27}}},"7":{"name":"(anonymous_7)","line":67,"loc":{"start":{"line":67,"column":12},"end":{"line":67,"column":15}}},"8":{"name":"(anonymous_8)","line":80,"loc":{"start":{"line":80,"column":9},"end":{"line":80,"column":12}}}},"statementMap":{"1":{"start":{"line":16,"column":7},"end":{"line":16,"column":28}},"2":{"start":{"line":17,"column":7},"end":{"line":17,"column":26}},"3":{"start":{"line":18,"column":7},"end":{"line":18,"column":28}},"4":{"start":{"line":19,"column":7},"end":{"line":19,"column":32}},"5":{"start":{"line":27,"column":7},"end":{"line":27,"column":26}},"6":{"start":{"line":35,"column":7},"end":{"line":35,"column":25}},"7":{"start":{"line":43,"column":7},"end":{"line":43,"column":26}},"8":{"start":{"line":51,"column":7},"end":{"line":51,"column":28}},"9":{"start":{"line":60,"column":6},"end":{"line":60,"column":115}},"10":{"start":{"line":68,"column":6},"end":{"line":73,"column":7}},"11":{"start":{"line":81,"column":6},"end":{"line":81,"column":29}},"12":{"start":{"line":85,"column":0},"end":{"line":85,"column":26}}},"branchMap":{"1":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":91},"end":{"line":60,"column":107}},{"start":{"line":60,"column":110},"end":{"line":60,"column":114}}]},"2":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":33},"end":{"line":69,"column":44}},{"start":{"line":69,"column":47},"end":{"line":69,"column":56}}]},"3":{"line":70,"type":"cond-expr","locations":[{"start":{"line":70,"column":30},"end":{"line":70,"column":40}},{"start":{"line":70,"column":43},"end":{"line":70,"column":52}}]},"4":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":32},"end":{"line":71,"column":43}},{"start":{"line":71,"column":46},"end":{"line":71,"column":55}}]},"5":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":37},"end":{"line":72,"column":50}},{"start":{"line":72,"column":53},"end":{"line":72,"column":62}}]}},"code":["'use strict'","","/**"," * This object represents one size of a photo or a file / sticker thumbnail."," */","","class PhotoSize {","   /**","    *","    * @param {string} fileId","    * @param {number} width","    * @param {number} height","    * @param {number|null} [fileSize]","   */","   constructor(fileId, width, height, fileSize) {","       this._fileId = fileId","       this._width = width","       this._height = height","       this._fileSize = fileSize","   }","","   /**","    * Unique identifier for this file","    * @returns {string}","   */","   get fileId() {","       return this._fileId","   }","","   /**","    * Photo width","    * @returns {number}","   */","   get width() {","       return this._width","   }","","   /**","    * Photo height","    * @returns {number}","   */","   get height() {","       return this._height","   }","","   /**","    * File size","    * @returns {number|null}","   */","   get fileSize() {","       return this._fileSize","   }","","   /**","    *","    * @param {Object} raw","    * @returns {PhotoSize}","    */","   static deserialize(raw) {","      return new PhotoSize(raw['file_id'], raw['width'], raw['height'], raw['file_size'] ? raw['file_size'] : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          file_id: this.fileId ? this.fileId : undefined, ","          width: this.width ? this.width : undefined, ","          height: this.height ? this.height : undefined, ","          file_size: this.fileSize ? this.fileSize : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = PhotoSize"],"l":{"16":0,"17":0,"18":0,"19":0,"27":0,"35":0,"43":0,"51":0,"60":0,"68":0,"81":0,"85":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Game.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Game.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":14},"end":{"line":21,"column":73}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":15}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":18},"end":{"line":42,"column":21}}},"4":{"name":"(anonymous_4)","line":50,"loc":{"start":{"line":50,"column":12},"end":{"line":50,"column":15}}},"5":{"name":"(anonymous_5)","line":58,"loc":{"start":{"line":58,"column":11},"end":{"line":58,"column":14}}},"6":{"name":"(anonymous_6)","line":66,"loc":{"start":{"line":66,"column":19},"end":{"line":66,"column":22}}},"7":{"name":"(anonymous_7)","line":74,"loc":{"start":{"line":74,"column":16},"end":{"line":74,"column":19}}},"8":{"name":"(anonymous_8)","line":83,"loc":{"start":{"line":83,"column":21},"end":{"line":83,"column":27}}},"9":{"name":"(anonymous_9)","line":98,"loc":{"start":{"line":98,"column":12},"end":{"line":98,"column":15}}},"10":{"name":"(anonymous_10)","line":113,"loc":{"start":{"line":113,"column":9},"end":{"line":113,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"4":{"start":{"line":22,"column":7},"end":{"line":22,"column":26}},"5":{"start":{"line":23,"column":7},"end":{"line":23,"column":38}},"6":{"start":{"line":24,"column":7},"end":{"line":24,"column":26}},"7":{"start":{"line":25,"column":7},"end":{"line":25,"column":24}},"8":{"start":{"line":26,"column":7},"end":{"line":26,"column":40}},"9":{"start":{"line":27,"column":7},"end":{"line":27,"column":34}},"10":{"start":{"line":35,"column":7},"end":{"line":35,"column":25}},"11":{"start":{"line":43,"column":7},"end":{"line":43,"column":31}},"12":{"start":{"line":51,"column":7},"end":{"line":51,"column":25}},"13":{"start":{"line":59,"column":7},"end":{"line":59,"column":24}},"14":{"start":{"line":67,"column":7},"end":{"line":67,"column":32}},"15":{"start":{"line":75,"column":7},"end":{"line":75,"column":29}},"16":{"start":{"line":84,"column":6},"end":{"line":91,"column":7}},"17":{"start":{"line":87,"column":50},"end":{"line":87,"column":77}},"18":{"start":{"line":89,"column":66},"end":{"line":89,"column":97}},"19":{"start":{"line":99,"column":6},"end":{"line":106,"column":7}},"20":{"start":{"line":102,"column":53},"end":{"line":102,"column":69}},"21":{"start":{"line":104,"column":75},"end":{"line":104,"column":91}},"22":{"start":{"line":114,"column":6},"end":{"line":114,"column":29}},"23":{"start":{"line":118,"column":0},"end":{"line":118,"column":21}}},"branchMap":{"1":{"line":87,"type":"cond-expr","locations":[{"start":{"line":87,"column":25},"end":{"line":87,"column":78}},{"start":{"line":87,"column":81},"end":{"line":87,"column":85}}]},"2":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":24},"end":{"line":88,"column":35}},{"start":{"line":88,"column":38},"end":{"line":88,"column":42}}]},"3":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":33},"end":{"line":89,"column":98}},{"start":{"line":89,"column":101},"end":{"line":89,"column":105}}]},"4":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":29},"end":{"line":90,"column":68}},{"start":{"line":90,"column":71},"end":{"line":90,"column":75}}]},"5":{"line":100,"type":"cond-expr","locations":[{"start":{"line":100,"column":30},"end":{"line":100,"column":40}},{"start":{"line":100,"column":43},"end":{"line":100,"column":52}}]},"6":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":42},"end":{"line":101,"column":58}},{"start":{"line":101,"column":61},"end":{"line":101,"column":70}}]},"7":{"line":102,"type":"cond-expr","locations":[{"start":{"line":102,"column":30},"end":{"line":102,"column":70}},{"start":{"line":102,"column":73},"end":{"line":102,"column":82}}]},"8":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":28},"end":{"line":103,"column":37}},{"start":{"line":103,"column":40},"end":{"line":103,"column":49}}]},"9":{"line":104,"type":"cond-expr","locations":[{"start":{"line":104,"column":45},"end":{"line":104,"column":92}},{"start":{"line":104,"column":95},"end":{"line":104,"column":104}}]},"10":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":38},"end":{"line":105,"column":64}},{"start":{"line":105,"column":67},"end":{"line":105,"column":76}}]}},"code":["'use strict'","","const PhotoSize = require('./PhotoSize')","const MessageEntity = require('./MessageEntity')","const Animation = require('./Animation')","","/**"," * This object represents a game. Use BotFather to create and edit games, their short names will act as unique identifiers."," */","","class Game {","   /**","    *","    * @param {string} title","    * @param {string} description","    * @param {PhotoSize[]} photo","    * @param {string|null} [text]","    * @param {MessageEntity[]|null} [textEntities]","    * @param {Animation|null} [animation]","   */","   constructor(title, description, photo, text, textEntities, animation) {","       this._title = title","       this._description = description","       this._photo = photo","       this._text = text","       this._textEntities = textEntities","       this._animation = animation","   }","","   /**","    * Title of the game","    * @returns {string}","   */","   get title() {","       return this._title","   }","","   /**","    * Description of the game","    * @returns {string}","   */","   get description() {","       return this._description","   }","","   /**","    * Photo that will be displayed in the game message in chats.","    * @returns {PhotoSize[]}","   */","   get photo() {","       return this._photo","   }","","   /**","    * Brief description of the game or high scores included in the game message. Can be automatically edited to include current high scores for the game when the bot calls setGameScore, or manually edited using editMessageText. 0-4096 characters.","    * @returns {string|null}","   */","   get text() {","       return this._text","   }","","   /**","    * Special entities that appear in text, such as usernames, URLs, bot commands, etc.","    * @returns {MessageEntity[]|null}","   */","   get textEntities() {","       return this._textEntities","   }","","   /**","    * Animation that will be displayed in the game message in chats. Upload via BotFather","    * @returns {Animation|null}","   */","   get animation() {","       return this._animation","   }","","   /**","    *","    * @param {Object} raw","    * @returns {Game}","    */","   static deserialize(raw) {","      return new Game(","          raw['title'], ","          raw['description'], ","          raw['photo'] ? raw['photo'].map(item => PhotoSize.deserialize(item)) : null, ","          raw['text'] ? raw['text'] : null, ","          raw['text_entities'] ? raw['text_entities'].map(item => MessageEntity.deserialize(item)) : null, ","          raw['animation'] ? Animation.deserialize(raw['animation']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          title: this.title ? this.title : undefined, ","          description: this.description ? this.description : undefined, ","          photo: this.photo ? this.photo.map(item => item.serialize()) : undefined, ","          text: this.text ? this.text : undefined, ","          text_entities: this.textEntities ? this.textEntities.map(item => item.serialize()) : undefined, ","          animation: this.animation ? this.animation.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = Game"],"l":{"3":1,"4":1,"5":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"35":0,"43":0,"51":0,"59":0,"67":0,"75":0,"84":0,"87":0,"89":0,"99":0,"102":0,"104":0,"114":0,"118":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Animation.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Animation.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":60}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":16}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":12},"end":{"line":38,"column":15}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":15},"end":{"line":46,"column":18}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":15},"end":{"line":54,"column":18}}},"6":{"name":"(anonymous_6)","line":62,"loc":{"start":{"line":62,"column":15},"end":{"line":62,"column":18}}},"7":{"name":"(anonymous_7)","line":71,"loc":{"start":{"line":71,"column":21},"end":{"line":71,"column":27}}},"8":{"name":"(anonymous_8)","line":85,"loc":{"start":{"line":85,"column":12},"end":{"line":85,"column":15}}},"9":{"name":"(anonymous_9)","line":99,"loc":{"start":{"line":99,"column":9},"end":{"line":99,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":19,"column":7},"end":{"line":19,"column":28}},"3":{"start":{"line":20,"column":7},"end":{"line":20,"column":26}},"4":{"start":{"line":21,"column":7},"end":{"line":21,"column":32}},"5":{"start":{"line":22,"column":7},"end":{"line":22,"column":32}},"6":{"start":{"line":23,"column":7},"end":{"line":23,"column":32}},"7":{"start":{"line":31,"column":7},"end":{"line":31,"column":26}},"8":{"start":{"line":39,"column":7},"end":{"line":39,"column":25}},"9":{"start":{"line":47,"column":7},"end":{"line":47,"column":28}},"10":{"start":{"line":55,"column":7},"end":{"line":55,"column":28}},"11":{"start":{"line":63,"column":7},"end":{"line":63,"column":28}},"12":{"start":{"line":72,"column":6},"end":{"line":78,"column":7}},"13":{"start":{"line":86,"column":6},"end":{"line":92,"column":7}},"14":{"start":{"line":100,"column":6},"end":{"line":100,"column":29}},"15":{"start":{"line":104,"column":0},"end":{"line":104,"column":26}}},"branchMap":{"1":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":25},"end":{"line":74,"column":60}},{"start":{"line":74,"column":63},"end":{"line":74,"column":67}}]},"2":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":29},"end":{"line":75,"column":45}},{"start":{"line":75,"column":48},"end":{"line":75,"column":52}}]},"3":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":29},"end":{"line":76,"column":45}},{"start":{"line":76,"column":48},"end":{"line":76,"column":52}}]},"4":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":29},"end":{"line":77,"column":45}},{"start":{"line":77,"column":48},"end":{"line":77,"column":52}}]},"5":{"line":87,"type":"cond-expr","locations":[{"start":{"line":87,"column":33},"end":{"line":87,"column":44}},{"start":{"line":87,"column":47},"end":{"line":87,"column":56}}]},"6":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":30},"end":{"line":88,"column":52}},{"start":{"line":88,"column":55},"end":{"line":88,"column":64}}]},"7":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":37},"end":{"line":89,"column":50}},{"start":{"line":89,"column":53},"end":{"line":89,"column":62}}]},"8":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":37},"end":{"line":90,"column":50}},{"start":{"line":90,"column":53},"end":{"line":90,"column":62}}]},"9":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":37},"end":{"line":91,"column":50}},{"start":{"line":91,"column":53},"end":{"line":91,"column":62}}]}},"code":["'use strict'","","const PhotoSize = require('./PhotoSize')","","/**"," * You can provide an animation for your game so that it looks stylish in chats (check out Lumberjack for an example). This object represents an animation file to be displayed in the message containing a game."," */","","class Animation {","   /**","    *","    * @param {string} fileId","    * @param {PhotoSize|null} [thumb]","    * @param {string|null} [fileName]","    * @param {string|null} [mimeType]","    * @param {number|null} [fileSize]","   */","   constructor(fileId, thumb, fileName, mimeType, fileSize) {","       this._fileId = fileId","       this._thumb = thumb","       this._fileName = fileName","       this._mimeType = mimeType","       this._fileSize = fileSize","   }","","   /**","    * Unique file identifier","    * @returns {string}","   */","   get fileId() {","       return this._fileId","   }","","   /**","    * Animation thumbnail as defined by sender","    * @returns {PhotoSize|null}","   */","   get thumb() {","       return this._thumb","   }","","   /**","    * Original animation filename as defined by sender","    * @returns {string|null}","   */","   get fileName() {","       return this._fileName","   }","","   /**","    * MIME type of the file as defined by sender","    * @returns {string|null}","   */","   get mimeType() {","       return this._mimeType","   }","","   /**","    * File size","    * @returns {number|null}","   */","   get fileSize() {","       return this._fileSize","   }","","   /**","    *","    * @param {Object} raw","    * @returns {Animation}","    */","   static deserialize(raw) {","      return new Animation(","          raw['file_id'], ","          raw['thumb'] ? PhotoSize.deserialize(raw['thumb']) : null, ","          raw['file_name'] ? raw['file_name'] : null, ","          raw['mime_type'] ? raw['mime_type'] : null, ","          raw['file_size'] ? raw['file_size'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          file_id: this.fileId ? this.fileId : undefined, ","          thumb: this.thumb ? this.thumb.serialize() : undefined, ","          file_name: this.fileName ? this.fileName : undefined, ","          mime_type: this.mimeType ? this.mimeType : undefined, ","          file_size: this.fileSize ? this.fileSize : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = Animation"],"l":{"3":1,"19":0,"20":0,"21":0,"22":0,"23":0,"31":0,"39":0,"47":0,"55":0,"63":0,"72":0,"86":0,"100":0,"104":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Sticker.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Sticker.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":14},"end":{"line":19,"column":62}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":13},"end":{"line":32,"column":16}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":12},"end":{"line":40,"column":15}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":13},"end":{"line":48,"column":16}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":12},"end":{"line":56,"column":15}}},"6":{"name":"(anonymous_6)","line":64,"loc":{"start":{"line":64,"column":12},"end":{"line":64,"column":15}}},"7":{"name":"(anonymous_7)","line":72,"loc":{"start":{"line":72,"column":15},"end":{"line":72,"column":18}}},"8":{"name":"(anonymous_8)","line":81,"loc":{"start":{"line":81,"column":21},"end":{"line":81,"column":27}}},"9":{"name":"(anonymous_9)","line":96,"loc":{"start":{"line":96,"column":12},"end":{"line":96,"column":15}}},"10":{"name":"(anonymous_10)","line":111,"loc":{"start":{"line":111,"column":9},"end":{"line":111,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":20,"column":7},"end":{"line":20,"column":28}},"3":{"start":{"line":21,"column":7},"end":{"line":21,"column":26}},"4":{"start":{"line":22,"column":7},"end":{"line":22,"column":28}},"5":{"start":{"line":23,"column":7},"end":{"line":23,"column":26}},"6":{"start":{"line":24,"column":7},"end":{"line":24,"column":26}},"7":{"start":{"line":25,"column":7},"end":{"line":25,"column":32}},"8":{"start":{"line":33,"column":7},"end":{"line":33,"column":26}},"9":{"start":{"line":41,"column":7},"end":{"line":41,"column":25}},"10":{"start":{"line":49,"column":7},"end":{"line":49,"column":26}},"11":{"start":{"line":57,"column":7},"end":{"line":57,"column":25}},"12":{"start":{"line":65,"column":7},"end":{"line":65,"column":25}},"13":{"start":{"line":73,"column":7},"end":{"line":73,"column":28}},"14":{"start":{"line":82,"column":6},"end":{"line":89,"column":7}},"15":{"start":{"line":97,"column":6},"end":{"line":104,"column":7}},"16":{"start":{"line":112,"column":6},"end":{"line":112,"column":29}},"17":{"start":{"line":116,"column":0},"end":{"line":116,"column":24}}},"branchMap":{"1":{"line":86,"type":"cond-expr","locations":[{"start":{"line":86,"column":25},"end":{"line":86,"column":60}},{"start":{"line":86,"column":63},"end":{"line":86,"column":67}}]},"2":{"line":87,"type":"cond-expr","locations":[{"start":{"line":87,"column":25},"end":{"line":87,"column":37}},{"start":{"line":87,"column":40},"end":{"line":87,"column":44}}]},"3":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":29},"end":{"line":88,"column":45}},{"start":{"line":88,"column":48},"end":{"line":88,"column":52}}]},"4":{"line":98,"type":"cond-expr","locations":[{"start":{"line":98,"column":33},"end":{"line":98,"column":44}},{"start":{"line":98,"column":47},"end":{"line":98,"column":56}}]},"5":{"line":99,"type":"cond-expr","locations":[{"start":{"line":99,"column":30},"end":{"line":99,"column":40}},{"start":{"line":99,"column":43},"end":{"line":99,"column":52}}]},"6":{"line":100,"type":"cond-expr","locations":[{"start":{"line":100,"column":32},"end":{"line":100,"column":43}},{"start":{"line":100,"column":46},"end":{"line":100,"column":55}}]},"7":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":30},"end":{"line":101,"column":52}},{"start":{"line":101,"column":55},"end":{"line":101,"column":64}}]},"8":{"line":102,"type":"cond-expr","locations":[{"start":{"line":102,"column":30},"end":{"line":102,"column":40}},{"start":{"line":102,"column":43},"end":{"line":102,"column":52}}]},"9":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":37},"end":{"line":103,"column":50}},{"start":{"line":103,"column":53},"end":{"line":103,"column":62}}]}},"code":["'use strict'","","const PhotoSize = require('./PhotoSize')","","/**"," * This object represents a sticker."," */","","class Sticker {","   /**","    *","    * @param {string} fileId","    * @param {number} width","    * @param {number} height","    * @param {PhotoSize|null} [thumb]","    * @param {string|null} [emoji]","    * @param {number|null} [fileSize]","   */","   constructor(fileId, width, height, thumb, emoji, fileSize) {","       this._fileId = fileId","       this._width = width","       this._height = height","       this._thumb = thumb","       this._emoji = emoji","       this._fileSize = fileSize","   }","","   /**","    * Unique identifier for this file","    * @returns {string}","   */","   get fileId() {","       return this._fileId","   }","","   /**","    * Sticker width","    * @returns {number}","   */","   get width() {","       return this._width","   }","","   /**","    * Sticker height","    * @returns {number}","   */","   get height() {","       return this._height","   }","","   /**","    * Sticker thumbnail in .webp or .jpg format","    * @returns {PhotoSize|null}","   */","   get thumb() {","       return this._thumb","   }","","   /**","    * Emoji associated with the sticker","    * @returns {string|null}","   */","   get emoji() {","       return this._emoji","   }","","   /**","    * File size","    * @returns {number|null}","   */","   get fileSize() {","       return this._fileSize","   }","","   /**","    *","    * @param {Object} raw","    * @returns {Sticker}","    */","   static deserialize(raw) {","      return new Sticker(","          raw['file_id'], ","          raw['width'], ","          raw['height'], ","          raw['thumb'] ? PhotoSize.deserialize(raw['thumb']) : null, ","          raw['emoji'] ? raw['emoji'] : null, ","          raw['file_size'] ? raw['file_size'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          file_id: this.fileId ? this.fileId : undefined, ","          width: this.width ? this.width : undefined, ","          height: this.height ? this.height : undefined, ","          thumb: this.thumb ? this.thumb.serialize() : undefined, ","          emoji: this.emoji ? this.emoji : undefined, ","          file_size: this.fileSize ? this.fileSize : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = Sticker"],"l":{"3":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"33":0,"41":0,"49":0,"57":0,"65":0,"73":0,"82":0,"97":0,"112":0,"116":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Video.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Video.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":14},"end":{"line":28,"column":5}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":13},"end":{"line":42,"column":16}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":12},"end":{"line":50,"column":15}}},"4":{"name":"(anonymous_4)","line":58,"loc":{"start":{"line":58,"column":13},"end":{"line":58,"column":16}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":15},"end":{"line":66,"column":18}}},"6":{"name":"(anonymous_6)","line":74,"loc":{"start":{"line":74,"column":12},"end":{"line":74,"column":15}}},"7":{"name":"(anonymous_7)","line":82,"loc":{"start":{"line":82,"column":15},"end":{"line":82,"column":18}}},"8":{"name":"(anonymous_8)","line":90,"loc":{"start":{"line":90,"column":15},"end":{"line":90,"column":18}}},"9":{"name":"(anonymous_9)","line":99,"loc":{"start":{"line":99,"column":21},"end":{"line":99,"column":27}}},"10":{"name":"(anonymous_10)","line":115,"loc":{"start":{"line":115,"column":12},"end":{"line":115,"column":15}}},"11":{"name":"(anonymous_11)","line":131,"loc":{"start":{"line":131,"column":9},"end":{"line":131,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":29,"column":7},"end":{"line":29,"column":28}},"3":{"start":{"line":30,"column":7},"end":{"line":30,"column":26}},"4":{"start":{"line":31,"column":7},"end":{"line":31,"column":28}},"5":{"start":{"line":32,"column":7},"end":{"line":32,"column":32}},"6":{"start":{"line":33,"column":7},"end":{"line":33,"column":26}},"7":{"start":{"line":34,"column":7},"end":{"line":34,"column":32}},"8":{"start":{"line":35,"column":7},"end":{"line":35,"column":32}},"9":{"start":{"line":43,"column":7},"end":{"line":43,"column":26}},"10":{"start":{"line":51,"column":7},"end":{"line":51,"column":25}},"11":{"start":{"line":59,"column":7},"end":{"line":59,"column":26}},"12":{"start":{"line":67,"column":7},"end":{"line":67,"column":28}},"13":{"start":{"line":75,"column":7},"end":{"line":75,"column":25}},"14":{"start":{"line":83,"column":7},"end":{"line":83,"column":28}},"15":{"start":{"line":91,"column":7},"end":{"line":91,"column":28}},"16":{"start":{"line":100,"column":6},"end":{"line":108,"column":7}},"17":{"start":{"line":116,"column":6},"end":{"line":124,"column":7}},"18":{"start":{"line":132,"column":6},"end":{"line":132,"column":29}},"19":{"start":{"line":136,"column":0},"end":{"line":136,"column":22}}},"branchMap":{"1":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":25},"end":{"line":105,"column":60}},{"start":{"line":105,"column":63},"end":{"line":105,"column":67}}]},"2":{"line":106,"type":"cond-expr","locations":[{"start":{"line":106,"column":29},"end":{"line":106,"column":45}},{"start":{"line":106,"column":48},"end":{"line":106,"column":52}}]},"3":{"line":107,"type":"cond-expr","locations":[{"start":{"line":107,"column":29},"end":{"line":107,"column":45}},{"start":{"line":107,"column":48},"end":{"line":107,"column":52}}]},"4":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":33},"end":{"line":117,"column":44}},{"start":{"line":117,"column":47},"end":{"line":117,"column":56}}]},"5":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":30},"end":{"line":118,"column":40}},{"start":{"line":118,"column":43},"end":{"line":118,"column":52}}]},"6":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":32},"end":{"line":119,"column":43}},{"start":{"line":119,"column":46},"end":{"line":119,"column":55}}]},"7":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":36},"end":{"line":120,"column":49}},{"start":{"line":120,"column":52},"end":{"line":120,"column":61}}]},"8":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":30},"end":{"line":121,"column":52}},{"start":{"line":121,"column":55},"end":{"line":121,"column":64}}]},"9":{"line":122,"type":"cond-expr","locations":[{"start":{"line":122,"column":37},"end":{"line":122,"column":50}},{"start":{"line":122,"column":53},"end":{"line":122,"column":62}}]},"10":{"line":123,"type":"cond-expr","locations":[{"start":{"line":123,"column":37},"end":{"line":123,"column":50}},{"start":{"line":123,"column":53},"end":{"line":123,"column":62}}]}},"code":["'use strict'","","const PhotoSize = require('./PhotoSize')","","/**"," * This object represents a video file."," */","","class Video {","   /**","    *","    * @param {string} fileId","    * @param {number} width","    * @param {number} height","    * @param {number} duration","    * @param {PhotoSize|null} [thumb]","    * @param {string|null} [mimeType]","    * @param {number|null} [fileSize]","   */","   constructor(","     fileId, ","     width, ","     height, ","     duration, ","     thumb, ","     mimeType, ","     fileSize","   ) {","       this._fileId = fileId","       this._width = width","       this._height = height","       this._duration = duration","       this._thumb = thumb","       this._mimeType = mimeType","       this._fileSize = fileSize","   }","","   /**","    * Unique identifier for this file","    * @returns {string}","   */","   get fileId() {","       return this._fileId","   }","","   /**","    * Video width as defined by sender","    * @returns {number}","   */","   get width() {","       return this._width","   }","","   /**","    * Video height as defined by sender","    * @returns {number}","   */","   get height() {","       return this._height","   }","","   /**","    * Duration of the video in seconds as defined by sender","    * @returns {number}","   */","   get duration() {","       return this._duration","   }","","   /**","    * Video thumbnail","    * @returns {PhotoSize|null}","   */","   get thumb() {","       return this._thumb","   }","","   /**","    * Mime type of a file as defined by sender","    * @returns {string|null}","   */","   get mimeType() {","       return this._mimeType","   }","","   /**","    * File size","    * @returns {number|null}","   */","   get fileSize() {","       return this._fileSize","   }","","   /**","    *","    * @param {Object} raw","    * @returns {Video}","    */","   static deserialize(raw) {","      return new Video(","          raw['file_id'], ","          raw['width'], ","          raw['height'], ","          raw['duration'], ","          raw['thumb'] ? PhotoSize.deserialize(raw['thumb']) : null, ","          raw['mime_type'] ? raw['mime_type'] : null, ","          raw['file_size'] ? raw['file_size'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          file_id: this.fileId ? this.fileId : undefined, ","          width: this.width ? this.width : undefined, ","          height: this.height ? this.height : undefined, ","          duration: this.duration ? this.duration : undefined, ","          thumb: this.thumb ? this.thumb.serialize() : undefined, ","          mime_type: this.mimeType ? this.mimeType : undefined, ","          file_size: this.fileSize ? this.fileSize : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = Video"],"l":{"3":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"43":0,"51":0,"59":0,"67":0,"75":0,"83":0,"91":0,"100":0,"116":0,"132":0,"136":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Voice.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Voice.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":53}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":13},"end":{"line":26,"column":16}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":15},"end":{"line":34,"column":18}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":15},"end":{"line":42,"column":18}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":15},"end":{"line":50,"column":18}}},"6":{"name":"(anonymous_6)","line":59,"loc":{"start":{"line":59,"column":21},"end":{"line":59,"column":27}}},"7":{"name":"(anonymous_7)","line":67,"loc":{"start":{"line":67,"column":12},"end":{"line":67,"column":15}}},"8":{"name":"(anonymous_8)","line":80,"loc":{"start":{"line":80,"column":9},"end":{"line":80,"column":12}}}},"statementMap":{"1":{"start":{"line":16,"column":7},"end":{"line":16,"column":28}},"2":{"start":{"line":17,"column":7},"end":{"line":17,"column":32}},"3":{"start":{"line":18,"column":7},"end":{"line":18,"column":32}},"4":{"start":{"line":19,"column":7},"end":{"line":19,"column":32}},"5":{"start":{"line":27,"column":7},"end":{"line":27,"column":26}},"6":{"start":{"line":35,"column":7},"end":{"line":35,"column":28}},"7":{"start":{"line":43,"column":7},"end":{"line":43,"column":28}},"8":{"start":{"line":51,"column":7},"end":{"line":51,"column":28}},"9":{"start":{"line":60,"column":6},"end":{"line":60,"column":143}},"10":{"start":{"line":68,"column":6},"end":{"line":73,"column":7}},"11":{"start":{"line":81,"column":6},"end":{"line":81,"column":29}},"12":{"start":{"line":85,"column":0},"end":{"line":85,"column":22}}},"branchMap":{"1":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":75},"end":{"line":60,"column":91}},{"start":{"line":60,"column":94},"end":{"line":60,"column":98}}]},"2":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":119},"end":{"line":60,"column":135}},{"start":{"line":60,"column":138},"end":{"line":60,"column":142}}]},"3":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":33},"end":{"line":69,"column":44}},{"start":{"line":69,"column":47},"end":{"line":69,"column":56}}]},"4":{"line":70,"type":"cond-expr","locations":[{"start":{"line":70,"column":36},"end":{"line":70,"column":49}},{"start":{"line":70,"column":52},"end":{"line":70,"column":61}}]},"5":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":37},"end":{"line":71,"column":50}},{"start":{"line":71,"column":53},"end":{"line":71,"column":62}}]},"6":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":37},"end":{"line":72,"column":50}},{"start":{"line":72,"column":53},"end":{"line":72,"column":62}}]}},"code":["'use strict'","","/**"," * This object represents a voice note."," */","","class Voice {","   /**","    *","    * @param {string} fileId","    * @param {number} duration","    * @param {string|null} [mimeType]","    * @param {number|null} [fileSize]","   */","   constructor(fileId, duration, mimeType, fileSize) {","       this._fileId = fileId","       this._duration = duration","       this._mimeType = mimeType","       this._fileSize = fileSize","   }","","   /**","    * Unique identifier for this file","    * @returns {string}","   */","   get fileId() {","       return this._fileId","   }","","   /**","    * Duration of the audio in seconds as defined by sender","    * @returns {number}","   */","   get duration() {","       return this._duration","   }","","   /**","    * MIME type of the file as defined by sender","    * @returns {string|null}","   */","   get mimeType() {","       return this._mimeType","   }","","   /**","    * File size","    * @returns {number|null}","   */","   get fileSize() {","       return this._fileSize","   }","","   /**","    *","    * @param {Object} raw","    * @returns {Voice}","    */","   static deserialize(raw) {","      return new Voice(raw['file_id'], raw['duration'], raw['mime_type'] ? raw['mime_type'] : null, raw['file_size'] ? raw['file_size'] : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          file_id: this.fileId ? this.fileId : undefined, ","          duration: this.duration ? this.duration : undefined, ","          mime_type: this.mimeType ? this.mimeType : undefined, ","          file_size: this.fileSize ? this.fileSize : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = Voice"],"l":{"16":0,"17":0,"18":0,"19":0,"27":0,"35":0,"43":0,"51":0,"60":0,"68":0,"81":0,"85":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Contact.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Contact.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":57}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":18},"end":{"line":26,"column":21}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":16},"end":{"line":34,"column":19}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":15},"end":{"line":42,"column":18}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":13},"end":{"line":50,"column":16}}},"6":{"name":"(anonymous_6)","line":59,"loc":{"start":{"line":59,"column":21},"end":{"line":59,"column":27}}},"7":{"name":"(anonymous_7)","line":67,"loc":{"start":{"line":67,"column":12},"end":{"line":67,"column":15}}},"8":{"name":"(anonymous_8)","line":80,"loc":{"start":{"line":80,"column":9},"end":{"line":80,"column":12}}}},"statementMap":{"1":{"start":{"line":16,"column":7},"end":{"line":16,"column":38}},"2":{"start":{"line":17,"column":7},"end":{"line":17,"column":34}},"3":{"start":{"line":18,"column":7},"end":{"line":18,"column":32}},"4":{"start":{"line":19,"column":7},"end":{"line":19,"column":28}},"5":{"start":{"line":27,"column":7},"end":{"line":27,"column":31}},"6":{"start":{"line":35,"column":7},"end":{"line":35,"column":29}},"7":{"start":{"line":43,"column":7},"end":{"line":43,"column":28}},"8":{"start":{"line":51,"column":7},"end":{"line":51,"column":26}},"9":{"start":{"line":60,"column":6},"end":{"line":60,"column":148}},"10":{"start":{"line":68,"column":6},"end":{"line":73,"column":7}},"11":{"start":{"line":81,"column":6},"end":{"line":81,"column":29}},"12":{"start":{"line":85,"column":0},"end":{"line":85,"column":24}}},"branchMap":{"1":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":84},"end":{"line":60,"column":100}},{"start":{"line":60,"column":103},"end":{"line":60,"column":107}}]},"2":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":126},"end":{"line":60,"column":140}},{"start":{"line":60,"column":143},"end":{"line":60,"column":147}}]},"3":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":43},"end":{"line":69,"column":59}},{"start":{"line":69,"column":62},"end":{"line":69,"column":71}}]},"4":{"line":70,"type":"cond-expr","locations":[{"start":{"line":70,"column":39},"end":{"line":70,"column":53}},{"start":{"line":70,"column":56},"end":{"line":70,"column":65}}]},"5":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":37},"end":{"line":71,"column":50}},{"start":{"line":71,"column":53},"end":{"line":71,"column":62}}]},"6":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":33},"end":{"line":72,"column":44}},{"start":{"line":72,"column":47},"end":{"line":72,"column":56}}]}},"code":["'use strict'","","/**"," * This object represents a phone contact."," */","","class Contact {","   /**","    *","    * @param {string} phoneNumber","    * @param {string} firstName","    * @param {string|null} [lastName]","    * @param {number|null} [userId]","   */","   constructor(phoneNumber, firstName, lastName, userId) {","       this._phoneNumber = phoneNumber","       this._firstName = firstName","       this._lastName = lastName","       this._userId = userId","   }","","   /**","    * Contact's phone number","    * @returns {string}","   */","   get phoneNumber() {","       return this._phoneNumber","   }","","   /**","    * Contact's first name","    * @returns {string}","   */","   get firstName() {","       return this._firstName","   }","","   /**","    * Contact's last name","    * @returns {string|null}","   */","   get lastName() {","       return this._lastName","   }","","   /**","    * Contact's user identifier in Telegram","    * @returns {number|null}","   */","   get userId() {","       return this._userId","   }","","   /**","    *","    * @param {Object} raw","    * @returns {Contact}","    */","   static deserialize(raw) {","      return new Contact(raw['phone_number'], raw['first_name'], raw['last_name'] ? raw['last_name'] : null, raw['user_id'] ? raw['user_id'] : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          phone_number: this.phoneNumber ? this.phoneNumber : undefined, ","          first_name: this.firstName ? this.firstName : undefined, ","          last_name: this.lastName ? this.lastName : undefined, ","          user_id: this.userId ? this.userId : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = Contact"],"l":{"16":0,"17":0,"18":0,"19":0,"27":0,"35":0,"43":0,"51":0,"60":0,"68":0,"81":0,"85":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Location.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Location.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":14},"end":{"line":13,"column":36}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":16},"end":{"line":22,"column":19}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":15},"end":{"line":30,"column":18}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":21},"end":{"line":39,"column":27}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":12},"end":{"line":47,"column":15}}},"6":{"name":"(anonymous_6)","line":58,"loc":{"start":{"line":58,"column":9},"end":{"line":58,"column":12}}}},"statementMap":{"1":{"start":{"line":14,"column":7},"end":{"line":14,"column":34}},"2":{"start":{"line":15,"column":7},"end":{"line":15,"column":32}},"3":{"start":{"line":23,"column":7},"end":{"line":23,"column":29}},"4":{"start":{"line":31,"column":7},"end":{"line":31,"column":28}},"5":{"start":{"line":40,"column":6},"end":{"line":40,"column":60}},"6":{"start":{"line":48,"column":6},"end":{"line":51,"column":7}},"7":{"start":{"line":59,"column":6},"end":{"line":59,"column":29}},"8":{"start":{"line":63,"column":0},"end":{"line":63,"column":25}}},"branchMap":{"1":{"line":49,"type":"cond-expr","locations":[{"start":{"line":49,"column":38},"end":{"line":49,"column":52}},{"start":{"line":49,"column":55},"end":{"line":49,"column":64}}]},"2":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":36},"end":{"line":50,"column":49}},{"start":{"line":50,"column":52},"end":{"line":50,"column":61}}]}},"code":["'use strict'","","/**"," * This object represents a point on the map."," */","","class Location {","   /**","    *","    * @param {number} longitude","    * @param {number} latitude","   */","   constructor(longitude, latitude) {","       this._longitude = longitude","       this._latitude = latitude","   }","","   /**","    * Longitude as defined by sender","    * @returns {number}","   */","   get longitude() {","       return this._longitude","   }","","   /**","    * Latitude as defined by sender","    * @returns {number}","   */","   get latitude() {","       return this._latitude","   }","","   /**","    *","    * @param {Object} raw","    * @returns {Location}","    */","   static deserialize(raw) {","      return new Location(raw['longitude'], raw['latitude'])","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          longitude: this.longitude ? this.longitude : undefined, ","          latitude: this.latitude ? this.latitude : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = Location"],"l":{"14":0,"15":0,"23":0,"31":0,"40":0,"48":0,"59":0,"63":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Venue.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/Venue.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":55}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":15},"end":{"line":28,"column":18}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":12},"end":{"line":36,"column":15}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":14},"end":{"line":44,"column":17}}},"5":{"name":"(anonymous_5)","line":52,"loc":{"start":{"line":52,"column":19},"end":{"line":52,"column":22}}},"6":{"name":"(anonymous_6)","line":61,"loc":{"start":{"line":61,"column":21},"end":{"line":61,"column":27}}},"7":{"name":"(anonymous_7)","line":69,"loc":{"start":{"line":69,"column":12},"end":{"line":69,"column":15}}},"8":{"name":"(anonymous_8)","line":82,"loc":{"start":{"line":82,"column":9},"end":{"line":82,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":18,"column":7},"end":{"line":18,"column":32}},"3":{"start":{"line":19,"column":7},"end":{"line":19,"column":26}},"4":{"start":{"line":20,"column":7},"end":{"line":20,"column":30}},"5":{"start":{"line":21,"column":7},"end":{"line":21,"column":40}},"6":{"start":{"line":29,"column":7},"end":{"line":29,"column":28}},"7":{"start":{"line":37,"column":7},"end":{"line":37,"column":25}},"8":{"start":{"line":45,"column":7},"end":{"line":45,"column":27}},"9":{"start":{"line":53,"column":7},"end":{"line":53,"column":32}},"10":{"start":{"line":62,"column":6},"end":{"line":62,"column":168}},"11":{"start":{"line":70,"column":6},"end":{"line":75,"column":7}},"12":{"start":{"line":83,"column":6},"end":{"line":83,"column":29}},"13":{"start":{"line":87,"column":0},"end":{"line":87,"column":22}}},"branchMap":{"1":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":41},"end":{"line":62,"column":78}},{"start":{"line":62,"column":81},"end":{"line":62,"column":85}}]},"2":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":140},"end":{"line":62,"column":160}},{"start":{"line":62,"column":163},"end":{"line":62,"column":167}}]},"3":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":36},"end":{"line":71,"column":61}},{"start":{"line":71,"column":64},"end":{"line":71,"column":73}}]},"4":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":30},"end":{"line":72,"column":40}},{"start":{"line":72,"column":43},"end":{"line":72,"column":52}}]},"5":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":34},"end":{"line":73,"column":46}},{"start":{"line":73,"column":49},"end":{"line":73,"column":58}}]},"6":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":45},"end":{"line":74,"column":62}},{"start":{"line":74,"column":65},"end":{"line":74,"column":74}}]}},"code":["'use strict'","","const Location = require('./Location')","","/**"," * This object represents a venue."," */","","class Venue {","   /**","    *","    * @param {Location} location","    * @param {string} title","    * @param {string} address","    * @param {string|null} [foursquareId]","   */","   constructor(location, title, address, foursquareId) {","       this._location = location","       this._title = title","       this._address = address","       this._foursquareId = foursquareId","   }","","   /**","    * Venue location","    * @returns {Location}","   */","   get location() {","       return this._location","   }","","   /**","    * Name of the venue","    * @returns {string}","   */","   get title() {","       return this._title","   }","","   /**","    * Address of the venue","    * @returns {string}","   */","   get address() {","       return this._address","   }","","   /**","    * Foursquare identifier of the venue","    * @returns {string|null}","   */","   get foursquareId() {","       return this._foursquareId","   }","","   /**","    *","    * @param {Object} raw","    * @returns {Venue}","    */","   static deserialize(raw) {","      return new Venue(raw['location'] ? Location.deserialize(raw['location']) : null, raw['title'], raw['address'], raw['foursquare_id'] ? raw['foursquare_id'] : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          location: this.location ? this.location.serialize() : undefined, ","          title: this.title ? this.title : undefined, ","          address: this.address ? this.address : undefined, ","          foursquare_id: this.foursquareId ? this.foursquareId : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = Venue"],"l":{"3":1,"18":0,"19":0,"20":0,"21":0,"29":0,"37":0,"45":0,"53":0,"62":0,"70":0,"83":0,"87":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQuery.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQuery.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":14},"end":{"line":19,"column":50}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":9},"end":{"line":31,"column":12}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":11},"end":{"line":39,"column":14}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":15},"end":{"line":47,"column":18}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":12},"end":{"line":55,"column":15}}},"6":{"name":"(anonymous_6)","line":63,"loc":{"start":{"line":63,"column":13},"end":{"line":63,"column":16}}},"7":{"name":"(anonymous_7)","line":72,"loc":{"start":{"line":72,"column":21},"end":{"line":72,"column":27}}},"8":{"name":"(anonymous_8)","line":86,"loc":{"start":{"line":86,"column":12},"end":{"line":86,"column":15}}},"9":{"name":"(anonymous_9)","line":100,"loc":{"start":{"line":100,"column":9},"end":{"line":100,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":20,"column":7},"end":{"line":20,"column":20}},"4":{"start":{"line":21,"column":7},"end":{"line":21,"column":24}},"5":{"start":{"line":22,"column":7},"end":{"line":22,"column":32}},"6":{"start":{"line":23,"column":7},"end":{"line":23,"column":26}},"7":{"start":{"line":24,"column":7},"end":{"line":24,"column":28}},"8":{"start":{"line":32,"column":7},"end":{"line":32,"column":22}},"9":{"start":{"line":40,"column":7},"end":{"line":40,"column":24}},"10":{"start":{"line":48,"column":7},"end":{"line":48,"column":28}},"11":{"start":{"line":56,"column":7},"end":{"line":56,"column":25}},"12":{"start":{"line":64,"column":7},"end":{"line":64,"column":26}},"13":{"start":{"line":73,"column":6},"end":{"line":79,"column":7}},"14":{"start":{"line":87,"column":6},"end":{"line":93,"column":7}},"15":{"start":{"line":101,"column":6},"end":{"line":101,"column":29}},"16":{"start":{"line":105,"column":0},"end":{"line":105,"column":28}}},"branchMap":{"1":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":24},"end":{"line":75,"column":53}},{"start":{"line":75,"column":56},"end":{"line":75,"column":60}}]},"2":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":28},"end":{"line":76,"column":65}},{"start":{"line":76,"column":68},"end":{"line":76,"column":72}}]},"3":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":24},"end":{"line":88,"column":31}},{"start":{"line":88,"column":34},"end":{"line":88,"column":43}}]},"4":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":28},"end":{"line":89,"column":49}},{"start":{"line":89,"column":52},"end":{"line":89,"column":61}}]},"5":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":36},"end":{"line":90,"column":61}},{"start":{"line":90,"column":64},"end":{"line":90,"column":73}}]},"6":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":30},"end":{"line":91,"column":40}},{"start":{"line":91,"column":43},"end":{"line":91,"column":52}}]},"7":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":32},"end":{"line":92,"column":43}},{"start":{"line":92,"column":46},"end":{"line":92,"column":55}}]}},"code":["'use strict'","","const User = require('./User')","const Location = require('./Location')","","/**"," * This object represents an incoming inline query. When the user sends an empty query, your bot could return some default or trending results."," */","","class InlineQuery {","   /**","    *","    * @param {string} id","    * @param {User} from","    * @param {Location|null} [location]","    * @param {string} query","    * @param {string} offset","   */","   constructor(id, from, location, query, offset) {","       this._id = id","       this._from = from","       this._location = location","       this._query = query","       this._offset = offset","   }","","   /**","    * Unique identifier for this query","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * Sender","    * @returns {User}","   */","   get from() {","       return this._from","   }","","   /**","    * Sender location, only for bots that request user location","    * @returns {Location|null}","   */","   get location() {","       return this._location","   }","","   /**","    * Text of the query (up to 512 characters)","    * @returns {string}","   */","   get query() {","       return this._query","   }","","   /**","    * Offset of the results to be returned, can be controlled by the bot","    * @returns {string}","   */","   get offset() {","       return this._offset","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQuery}","    */","   static deserialize(raw) {","      return new InlineQuery(","          raw['id'], ","          raw['from'] ? User.deserialize(raw['from']) : null, ","          raw['location'] ? Location.deserialize(raw['location']) : null, ","          raw['query'], ","          raw['offset']","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          id: this.id ? this.id : undefined, ","          from: this.from ? this.from.serialize() : undefined, ","          location: this.location ? this.location.serialize() : undefined, ","          query: this.query ? this.query : undefined, ","          offset: this.offset ? this.offset : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQuery"],"l":{"3":1,"4":1,"20":0,"21":0,"22":0,"23":0,"24":0,"32":0,"40":0,"48":0,"56":0,"64":0,"73":0,"87":0,"101":0,"105":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/ChosenInlineResult.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/ChosenInlineResult.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":14},"end":{"line":19,"column":65}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":15},"end":{"line":31,"column":18}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":11},"end":{"line":39,"column":14}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":15},"end":{"line":47,"column":18}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":22},"end":{"line":55,"column":25}}},"6":{"name":"(anonymous_6)","line":63,"loc":{"start":{"line":63,"column":12},"end":{"line":63,"column":15}}},"7":{"name":"(anonymous_7)","line":72,"loc":{"start":{"line":72,"column":21},"end":{"line":72,"column":27}}},"8":{"name":"(anonymous_8)","line":86,"loc":{"start":{"line":86,"column":12},"end":{"line":86,"column":15}}},"9":{"name":"(anonymous_9)","line":100,"loc":{"start":{"line":100,"column":9},"end":{"line":100,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":20,"column":7},"end":{"line":20,"column":32}},"4":{"start":{"line":21,"column":7},"end":{"line":21,"column":24}},"5":{"start":{"line":22,"column":7},"end":{"line":22,"column":32}},"6":{"start":{"line":23,"column":7},"end":{"line":23,"column":46}},"7":{"start":{"line":24,"column":7},"end":{"line":24,"column":26}},"8":{"start":{"line":32,"column":7},"end":{"line":32,"column":28}},"9":{"start":{"line":40,"column":7},"end":{"line":40,"column":24}},"10":{"start":{"line":48,"column":7},"end":{"line":48,"column":28}},"11":{"start":{"line":56,"column":7},"end":{"line":56,"column":35}},"12":{"start":{"line":64,"column":7},"end":{"line":64,"column":25}},"13":{"start":{"line":73,"column":6},"end":{"line":79,"column":7}},"14":{"start":{"line":87,"column":6},"end":{"line":93,"column":7}},"15":{"start":{"line":101,"column":6},"end":{"line":101,"column":29}},"16":{"start":{"line":105,"column":0},"end":{"line":105,"column":35}}},"branchMap":{"1":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":24},"end":{"line":75,"column":53}},{"start":{"line":75,"column":56},"end":{"line":75,"column":60}}]},"2":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":28},"end":{"line":76,"column":65}},{"start":{"line":76,"column":68},"end":{"line":76,"column":72}}]},"3":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":37},"end":{"line":77,"column":61}},{"start":{"line":77,"column":64},"end":{"line":77,"column":68}}]},"4":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":37},"end":{"line":88,"column":50}},{"start":{"line":88,"column":53},"end":{"line":88,"column":62}}]},"5":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":28},"end":{"line":89,"column":49}},{"start":{"line":89,"column":52},"end":{"line":89,"column":61}}]},"6":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":36},"end":{"line":90,"column":61}},{"start":{"line":90,"column":64},"end":{"line":90,"column":73}}]},"7":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":52},"end":{"line":91,"column":72}},{"start":{"line":91,"column":75},"end":{"line":91,"column":84}}]},"8":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":30},"end":{"line":92,"column":40}},{"start":{"line":92,"column":43},"end":{"line":92,"column":52}}]}},"code":["'use strict'","","const User = require('./User')","const Location = require('./Location')","","/**"," * Represents a result of an inline query that was chosen by the user and sent to their chat partner. "," */","","class ChosenInlineResult {","   /**","    *","    * @param {string} resultId","    * @param {User} from","    * @param {Location|null} [location]","    * @param {string|null} [inlineMessageId]","    * @param {string} query","   */","   constructor(resultId, from, location, inlineMessageId, query) {","       this._resultId = resultId","       this._from = from","       this._location = location","       this._inlineMessageId = inlineMessageId","       this._query = query","   }","","   /**","    * The unique identifier for the result that was chosen","    * @returns {string}","   */","   get resultId() {","       return this._resultId","   }","","   /**","    * The user that chose the result","    * @returns {User}","   */","   get from() {","       return this._from","   }","","   /**","    * Sender location, only for bots that require user location","    * @returns {Location|null}","   */","   get location() {","       return this._location","   }","","   /**","    * Identifier of the sent inline message. Available only if there is an inline keyboard attached to the message. Will be also received in callback queries and can be used to edit the message.","    * @returns {string|null}","   */","   get inlineMessageId() {","       return this._inlineMessageId","   }","","   /**","    * The query that was used to obtain the result","    * @returns {string}","   */","   get query() {","       return this._query","   }","","   /**","    *","    * @param {Object} raw","    * @returns {ChosenInlineResult}","    */","   static deserialize(raw) {","      return new ChosenInlineResult(","          raw['result_id'], ","          raw['from'] ? User.deserialize(raw['from']) : null, ","          raw['location'] ? Location.deserialize(raw['location']) : null, ","          raw['inline_message_id'] ? raw['inline_message_id'] : null, ","          raw['query']","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          result_id: this.resultId ? this.resultId : undefined, ","          from: this.from ? this.from.serialize() : undefined, ","          location: this.location ? this.location.serialize() : undefined, ","          inline_message_id: this.inlineMessageId ? this.inlineMessageId : undefined, ","          query: this.query ? this.query : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = ChosenInlineResult"],"l":{"3":1,"4":1,"20":0,"21":0,"22":0,"23":0,"24":0,"32":0,"40":0,"48":0,"56":0,"64":0,"73":0,"87":0,"101":0,"105":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/CallbackQuery.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/CallbackQuery.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":14},"end":{"line":29,"column":5}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":9},"end":{"line":43,"column":12}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":11},"end":{"line":51,"column":14}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":14},"end":{"line":59,"column":17}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":22},"end":{"line":67,"column":25}}},"6":{"name":"(anonymous_6)","line":75,"loc":{"start":{"line":75,"column":19},"end":{"line":75,"column":22}}},"7":{"name":"(anonymous_7)","line":83,"loc":{"start":{"line":83,"column":11},"end":{"line":83,"column":14}}},"8":{"name":"(anonymous_8)","line":91,"loc":{"start":{"line":91,"column":20},"end":{"line":91,"column":23}}},"9":{"name":"(anonymous_9)","line":100,"loc":{"start":{"line":100,"column":21},"end":{"line":100,"column":27}}},"10":{"name":"(anonymous_10)","line":116,"loc":{"start":{"line":116,"column":12},"end":{"line":116,"column":15}}},"11":{"name":"(anonymous_11)","line":132,"loc":{"start":{"line":132,"column":9},"end":{"line":132,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"3":{"start":{"line":30,"column":7},"end":{"line":30,"column":20}},"4":{"start":{"line":31,"column":7},"end":{"line":31,"column":24}},"5":{"start":{"line":32,"column":7},"end":{"line":32,"column":30}},"6":{"start":{"line":33,"column":7},"end":{"line":33,"column":46}},"7":{"start":{"line":34,"column":7},"end":{"line":34,"column":40}},"8":{"start":{"line":35,"column":7},"end":{"line":35,"column":24}},"9":{"start":{"line":36,"column":7},"end":{"line":36,"column":42}},"10":{"start":{"line":44,"column":7},"end":{"line":44,"column":22}},"11":{"start":{"line":52,"column":7},"end":{"line":52,"column":24}},"12":{"start":{"line":60,"column":7},"end":{"line":60,"column":27}},"13":{"start":{"line":68,"column":7},"end":{"line":68,"column":35}},"14":{"start":{"line":76,"column":7},"end":{"line":76,"column":32}},"15":{"start":{"line":84,"column":7},"end":{"line":84,"column":24}},"16":{"start":{"line":92,"column":7},"end":{"line":92,"column":33}},"17":{"start":{"line":101,"column":6},"end":{"line":109,"column":7}},"18":{"start":{"line":117,"column":6},"end":{"line":125,"column":7}},"19":{"start":{"line":133,"column":6},"end":{"line":133,"column":29}},"20":{"start":{"line":137,"column":0},"end":{"line":137,"column":30}}},"branchMap":{"1":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":24},"end":{"line":103,"column":53}},{"start":{"line":103,"column":56},"end":{"line":103,"column":60}}]},"2":{"line":104,"type":"cond-expr","locations":[{"start":{"line":104,"column":27},"end":{"line":104,"column":62}},{"start":{"line":104,"column":65},"end":{"line":104,"column":69}}]},"3":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":37},"end":{"line":105,"column":61}},{"start":{"line":105,"column":64},"end":{"line":105,"column":68}}]},"4":{"line":107,"type":"cond-expr","locations":[{"start":{"line":107,"column":24},"end":{"line":107,"column":35}},{"start":{"line":107,"column":38},"end":{"line":107,"column":42}}]},"5":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":35},"end":{"line":108,"column":57}},{"start":{"line":108,"column":60},"end":{"line":108,"column":64}}]},"6":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":24},"end":{"line":118,"column":31}},{"start":{"line":118,"column":34},"end":{"line":118,"column":43}}]},"7":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":28},"end":{"line":119,"column":49}},{"start":{"line":119,"column":52},"end":{"line":119,"column":61}}]},"8":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":34},"end":{"line":120,"column":58}},{"start":{"line":120,"column":61},"end":{"line":120,"column":70}}]},"9":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":52},"end":{"line":121,"column":72}},{"start":{"line":121,"column":75},"end":{"line":121,"column":84}}]},"10":{"line":122,"type":"cond-expr","locations":[{"start":{"line":122,"column":45},"end":{"line":122,"column":62}},{"start":{"line":122,"column":65},"end":{"line":122,"column":74}}]},"11":{"line":123,"type":"cond-expr","locations":[{"start":{"line":123,"column":28},"end":{"line":123,"column":37}},{"start":{"line":123,"column":40},"end":{"line":123,"column":49}}]},"12":{"line":124,"type":"cond-expr","locations":[{"start":{"line":124,"column":48},"end":{"line":124,"column":66}},{"start":{"line":124,"column":69},"end":{"line":124,"column":78}}]}},"code":["'use strict'","","const User = require('./User')","const Message = require('./Message')","","/**"," * This object represents an incoming callback query from a callback button in an inline keyboard. If the button that originated the query was attached to a message sent by the bot, the field message will be present. If the button was attached to a message sent via the bot (in inline mode), the field inline_message_id will be present. Exactly one of the fields data or game_short_name will be present."," */","","class CallbackQuery {","   /**","    *","    * @param {string} id","    * @param {User} from","    * @param {Message|null} [message]","    * @param {string|null} [inlineMessageId]","    * @param {string} chatInstance","    * @param {string|null} [data]","    * @param {string|null} [gameShortName]","   */","   constructor(","     id, ","     from, ","     message, ","     inlineMessageId, ","     chatInstance, ","     data, ","     gameShortName","   ) {","       this._id = id","       this._from = from","       this._message = message","       this._inlineMessageId = inlineMessageId","       this._chatInstance = chatInstance","       this._data = data","       this._gameShortName = gameShortName","   }","","   /**","    * Unique identifier for this query","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * Sender","    * @returns {User}","   */","   get from() {","       return this._from","   }","","   /**","    * Message with the callback button that originated the query. Note that message content and message date will not be available if the message is too old","    * @returns {Message|null}","   */","   get message() {","       return this._message","   }","","   /**","    * Identifier of the message sent via the bot in inline mode, that originated the query.","    * @returns {string|null}","   */","   get inlineMessageId() {","       return this._inlineMessageId","   }","","   /**","    * Global identifier, uniquely corresponding to the chat to which the message with the callback button was sent. Useful for high scores in games.","    * @returns {string}","   */","   get chatInstance() {","       return this._chatInstance","   }","","   /**","    * Data associated with the callback button. Be aware that a bad client can send arbitrary data in this field.","    * @returns {string|null}","   */","   get data() {","       return this._data","   }","","   /**","    * Short name of a Game to be returned, serves as the unique identifier for the game","    * @returns {string|null}","   */","   get gameShortName() {","       return this._gameShortName","   }","","   /**","    *","    * @param {Object} raw","    * @returns {CallbackQuery}","    */","   static deserialize(raw) {","      return new CallbackQuery(","          raw['id'], ","          raw['from'] ? User.deserialize(raw['from']) : null, ","          raw['message'] ? Message.deserialize(raw['message']) : null, ","          raw['inline_message_id'] ? raw['inline_message_id'] : null, ","          raw['chat_instance'], ","          raw['data'] ? raw['data'] : null, ","          raw['game_short_name'] ? raw['game_short_name'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          id: this.id ? this.id : undefined, ","          from: this.from ? this.from.serialize() : undefined, ","          message: this.message ? this.message.serialize() : undefined, ","          inline_message_id: this.inlineMessageId ? this.inlineMessageId : undefined, ","          chat_instance: this.chatInstance ? this.chatInstance : undefined, ","          data: this.data ? this.data : undefined, ","          game_short_name: this.gameShortName ? this.gameShortName : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = CallbackQuery"],"l":{"3":1,"4":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"44":0,"52":0,"60":0,"68":0,"76":0,"84":0,"92":0,"101":0,"117":0,"133":0,"137":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/WebhookInfo.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/WebhookInfo.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":14},"end":{"line":26,"column":5}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":10},"end":{"line":40,"column":13}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":27},"end":{"line":48,"column":30}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":25},"end":{"line":56,"column":28}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":20},"end":{"line":64,"column":23}}},"6":{"name":"(anonymous_6)","line":72,"loc":{"start":{"line":72,"column":23},"end":{"line":72,"column":26}}},"7":{"name":"(anonymous_7)","line":80,"loc":{"start":{"line":80,"column":21},"end":{"line":80,"column":24}}},"8":{"name":"(anonymous_8)","line":88,"loc":{"start":{"line":88,"column":21},"end":{"line":88,"column":24}}},"9":{"name":"(anonymous_9)","line":97,"loc":{"start":{"line":97,"column":21},"end":{"line":97,"column":27}}},"10":{"name":"(anonymous_10)","line":113,"loc":{"start":{"line":113,"column":12},"end":{"line":113,"column":15}}},"11":{"name":"(anonymous_11)","line":129,"loc":{"start":{"line":129,"column":9},"end":{"line":129,"column":12}}}},"statementMap":{"1":{"start":{"line":27,"column":7},"end":{"line":27,"column":22}},"2":{"start":{"line":28,"column":7},"end":{"line":28,"column":56}},"3":{"start":{"line":29,"column":7},"end":{"line":29,"column":52}},"4":{"start":{"line":30,"column":7},"end":{"line":30,"column":42}},"5":{"start":{"line":31,"column":7},"end":{"line":31,"column":48}},"6":{"start":{"line":32,"column":7},"end":{"line":32,"column":44}},"7":{"start":{"line":33,"column":7},"end":{"line":33,"column":44}},"8":{"start":{"line":41,"column":7},"end":{"line":41,"column":23}},"9":{"start":{"line":49,"column":7},"end":{"line":49,"column":40}},"10":{"start":{"line":57,"column":7},"end":{"line":57,"column":38}},"11":{"start":{"line":65,"column":7},"end":{"line":65,"column":33}},"12":{"start":{"line":73,"column":7},"end":{"line":73,"column":36}},"13":{"start":{"line":81,"column":7},"end":{"line":81,"column":34}},"14":{"start":{"line":89,"column":7},"end":{"line":89,"column":34}},"15":{"start":{"line":98,"column":6},"end":{"line":106,"column":7}},"16":{"start":{"line":114,"column":6},"end":{"line":122,"column":7}},"17":{"start":{"line":130,"column":6},"end":{"line":130,"column":29}},"18":{"start":{"line":134,"column":0},"end":{"line":134,"column":28}}},"branchMap":{"1":{"line":102,"type":"cond-expr","locations":[{"start":{"line":102,"column":35},"end":{"line":102,"column":57}},{"start":{"line":102,"column":60},"end":{"line":102,"column":64}}]},"2":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":38},"end":{"line":103,"column":63}},{"start":{"line":103,"column":66},"end":{"line":103,"column":70}}]},"3":{"line":104,"type":"cond-expr","locations":[{"start":{"line":104,"column":35},"end":{"line":104,"column":57}},{"start":{"line":104,"column":60},"end":{"line":104,"column":64}}]},"4":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":35},"end":{"line":105,"column":57}},{"start":{"line":105,"column":60},"end":{"line":105,"column":64}}]},"5":{"line":115,"type":"cond-expr","locations":[{"start":{"line":115,"column":26},"end":{"line":115,"column":34}},{"start":{"line":115,"column":37},"end":{"line":115,"column":46}}]},"6":{"line":116,"type":"cond-expr","locations":[{"start":{"line":116,"column":62},"end":{"line":116,"column":87}},{"start":{"line":116,"column":90},"end":{"line":116,"column":99}}]},"7":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":58},"end":{"line":117,"column":81}},{"start":{"line":117,"column":84},"end":{"line":117,"column":93}}]},"8":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":48},"end":{"line":118,"column":66}},{"start":{"line":118,"column":69},"end":{"line":118,"column":78}}]},"9":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":54},"end":{"line":119,"column":75}},{"start":{"line":119,"column":78},"end":{"line":119,"column":87}}]},"10":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":49},"end":{"line":120,"column":68}},{"start":{"line":120,"column":71},"end":{"line":120,"column":80}}]},"11":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":49},"end":{"line":121,"column":68}},{"start":{"line":121,"column":71},"end":{"line":121,"column":80}}]}},"code":["'use strict'","","/**"," * Contains information about the current status of a webhook."," */","","class WebhookInfo {","   /**","    *","    * @param {string} url","    * @param {boolean} hasCustomCertificate","    * @param {number} pendingUpdateCount","    * @param {number|null} [lastErrorDate]","    * @param {string|null} [lastErrorMessage]","    * @param {number|null} [maxConnections]","    * @param {string[]|null} [allowedUpdates]","   */","   constructor(","     url, ","     hasCustomCertificate, ","     pendingUpdateCount, ","     lastErrorDate, ","     lastErrorMessage, ","     maxConnections, ","     allowedUpdates","   ) {","       this._url = url","       this._hasCustomCertificate = hasCustomCertificate","       this._pendingUpdateCount = pendingUpdateCount","       this._lastErrorDate = lastErrorDate","       this._lastErrorMessage = lastErrorMessage","       this._maxConnections = maxConnections","       this._allowedUpdates = allowedUpdates","   }","","   /**","    * Webhook URL, may be empty if webhook is not set up","    * @returns {string}","   */","   get url() {","       return this._url","   }","","   /**","    * True, if a custom certificate was provided for webhook certificate checks","    * @returns {boolean}","   */","   get hasCustomCertificate() {","       return this._hasCustomCertificate","   }","","   /**","    * Number of updates awaiting delivery","    * @returns {number}","   */","   get pendingUpdateCount() {","       return this._pendingUpdateCount","   }","","   /**","    * Unix time for the most recent error that happened when trying to deliver an update via webhook","    * @returns {number|null}","   */","   get lastErrorDate() {","       return this._lastErrorDate","   }","","   /**","    * Error message in human-readable format for the most recent error that happened when trying to deliver an update via webhook","    * @returns {string|null}","   */","   get lastErrorMessage() {","       return this._lastErrorMessage","   }","","   /**","    * Maximum allowed number of simultaneous HTTPS connections to the webhook for update delivery","    * @returns {number|null}","   */","   get maxConnections() {","       return this._maxConnections","   }","","   /**","    * A list of update types the bot is subscribed to. Defaults to all update types","    * @returns {string[]|null}","   */","   get allowedUpdates() {","       return this._allowedUpdates","   }","","   /**","    *","    * @param {Object} raw","    * @returns {WebhookInfo}","    */","   static deserialize(raw) {","      return new WebhookInfo(","          raw['url'], ","          raw['has_custom_certificate'], ","          raw['pending_update_count'], ","          raw['last_error_date'] ? raw['last_error_date'] : null, ","          raw['last_error_message'] ? raw['last_error_message'] : null, ","          raw['max_connections'] ? raw['max_connections'] : null, ","          raw['allowed_updates'] ? raw['allowed_updates'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          url: this.url ? this.url : undefined, ","          has_custom_certificate: this.hasCustomCertificate ? this.hasCustomCertificate : undefined, ","          pending_update_count: this.pendingUpdateCount ? this.pendingUpdateCount : undefined, ","          last_error_date: this.lastErrorDate ? this.lastErrorDate : undefined, ","          last_error_message: this.lastErrorMessage ? this.lastErrorMessage : undefined, ","          max_connections: this.maxConnections ? this.maxConnections : undefined, ","          allowed_updates: this.allowedUpdates ? this.allowedUpdates : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = WebhookInfo"],"l":{"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"41":0,"49":0,"57":0,"65":0,"73":0,"81":0,"89":0,"98":0,"114":0,"130":0,"134":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/UserProfilePhotos.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/UserProfilePhotos.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":35}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":17},"end":{"line":24,"column":20}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":13},"end":{"line":32,"column":16}}},"4":{"name":"(anonymous_4)","line":41,"loc":{"start":{"line":41,"column":21},"end":{"line":41,"column":27}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":12},"end":{"line":49,"column":15}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":9},"end":{"line":60,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":16,"column":7},"end":{"line":16,"column":36}},"3":{"start":{"line":17,"column":7},"end":{"line":17,"column":28}},"4":{"start":{"line":25,"column":7},"end":{"line":25,"column":30}},"5":{"start":{"line":33,"column":7},"end":{"line":33,"column":26}},"6":{"start":{"line":42,"column":6},"end":{"line":42,"column":149}},"7":{"start":{"line":42,"column":96},"end":{"line":42,"column":140}},"8":{"start":{"line":42,"column":112},"end":{"line":42,"column":139}},"9":{"start":{"line":50,"column":6},"end":{"line":53,"column":7}},"10":{"start":{"line":52,"column":55},"end":{"line":52,"column":88}},"11":{"start":{"line":52,"column":71},"end":{"line":52,"column":87}},"12":{"start":{"line":61,"column":6},"end":{"line":61,"column":29}},"13":{"start":{"line":65,"column":0},"end":{"line":65,"column":34}}},"branchMap":{"1":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":71},"end":{"line":42,"column":141}},{"start":{"line":42,"column":144},"end":{"line":42,"column":148}}]},"2":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":41},"end":{"line":51,"column":56}},{"start":{"line":51,"column":59},"end":{"line":51,"column":68}}]},"3":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":32},"end":{"line":52,"column":89}},{"start":{"line":52,"column":92},"end":{"line":52,"column":101}}]}},"code":["'use strict'","","const PhotoSize = require('./PhotoSize')","","/**"," * This object represent a user's profile pictures."," */","","class UserProfilePhotos {","   /**","    *","    * @param {number} totalCount","    * @param {PhotoSize[][]} photos","   */","   constructor(totalCount, photos) {","       this._totalCount = totalCount","       this._photos = photos","   }","","   /**","    * Total number of profile pictures the target user has","    * @returns {number}","   */","   get totalCount() {","       return this._totalCount","   }","","   /**","    * Requested profile pictures (in up to 4 sizes each)","    * @returns {PhotoSize[][]}","   */","   get photos() {","       return this._photos","   }","","   /**","    *","    * @param {Object} raw","    * @returns {UserProfilePhotos}","    */","   static deserialize(raw) {","      return new UserProfilePhotos(raw['total_count'], raw['photos'] ? raw['photos'].map(arr => arr.map(item => PhotoSize.deserialize(item))) : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          total_count: this.totalCount ? this.totalCount : undefined, ","          photos: this.photos ? this.photos.map(arr => arr.map(item => item.serialize())) : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = UserProfilePhotos"],"l":{"3":1,"16":0,"17":0,"25":0,"33":0,"42":0,"50":0,"52":0,"61":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/File.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/File.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":14},"end":{"line":14,"column":43}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":13},"end":{"line":24,"column":16}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":15},"end":{"line":32,"column":18}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":15},"end":{"line":40,"column":18}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":21},"end":{"line":49,"column":27}}},"6":{"name":"(anonymous_6)","line":57,"loc":{"start":{"line":57,"column":12},"end":{"line":57,"column":15}}},"7":{"name":"(anonymous_7)","line":69,"loc":{"start":{"line":69,"column":9},"end":{"line":69,"column":12}}}},"statementMap":{"1":{"start":{"line":15,"column":7},"end":{"line":15,"column":28}},"2":{"start":{"line":16,"column":7},"end":{"line":16,"column":32}},"3":{"start":{"line":17,"column":7},"end":{"line":17,"column":32}},"4":{"start":{"line":25,"column":7},"end":{"line":25,"column":26}},"5":{"start":{"line":33,"column":7},"end":{"line":33,"column":28}},"6":{"start":{"line":41,"column":7},"end":{"line":41,"column":28}},"7":{"start":{"line":50,"column":6},"end":{"line":50,"column":125}},"8":{"start":{"line":58,"column":6},"end":{"line":62,"column":7}},"9":{"start":{"line":70,"column":6},"end":{"line":70,"column":29}},"10":{"start":{"line":74,"column":0},"end":{"line":74,"column":21}}},"branchMap":{"1":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":57},"end":{"line":50,"column":73}},{"start":{"line":50,"column":76},"end":{"line":50,"column":80}}]},"2":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":101},"end":{"line":50,"column":117}},{"start":{"line":50,"column":120},"end":{"line":50,"column":124}}]},"3":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":33},"end":{"line":59,"column":44}},{"start":{"line":59,"column":47},"end":{"line":59,"column":56}}]},"4":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":37},"end":{"line":60,"column":50}},{"start":{"line":60,"column":53},"end":{"line":60,"column":62}}]},"5":{"line":61,"type":"cond-expr","locations":[{"start":{"line":61,"column":37},"end":{"line":61,"column":50}},{"start":{"line":61,"column":53},"end":{"line":61,"column":62}}]}},"code":["'use strict'","","/**"," * This object represents a file ready to be downloaded. The file can be downloaded via the link https://api.telegram.org/file/bot<token>/<file_path>. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile."," */","","class File {","   /**","    *","    * @param {string} fileId","    * @param {number|null} [fileSize]","    * @param {string|null} [filePath]","   */","   constructor(fileId, fileSize, filePath) {","       this._fileId = fileId","       this._fileSize = fileSize","       this._filePath = filePath","   }","","   /**","    * Unique identifier for this file","    * @returns {string}","   */","   get fileId() {","       return this._fileId","   }","","   /**","    * File size, if known","    * @returns {number|null}","   */","   get fileSize() {","       return this._fileSize","   }","","   /**","    * File path. Use https://api.telegram.org/file/bot<token>/<file_path> to get the file.","    * @returns {string|null}","   */","   get filePath() {","       return this._filePath","   }","","   /**","    *","    * @param {Object} raw","    * @returns {File}","    */","   static deserialize(raw) {","      return new File(raw['file_id'], raw['file_size'] ? raw['file_size'] : null, raw['file_path'] ? raw['file_path'] : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          file_id: this.fileId ? this.fileId : undefined, ","          file_size: this.fileSize ? this.fileSize : undefined, ","          file_path: this.filePath ? this.filePath : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = File"],"l":{"15":0,"16":0,"17":0,"25":0,"33":0,"41":0,"50":0,"58":0,"70":0,"74":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/ReplyKeyboardMarkup.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/ReplyKeyboardMarkup.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":69}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":15},"end":{"line":28,"column":18}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":21},"end":{"line":36,"column":24}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":22},"end":{"line":44,"column":25}}},"5":{"name":"(anonymous_5)","line":52,"loc":{"start":{"line":52,"column":16},"end":{"line":52,"column":19}}},"6":{"name":"(anonymous_6)","line":61,"loc":{"start":{"line":61,"column":21},"end":{"line":61,"column":27}}},"7":{"name":"(anonymous_7)","line":69,"loc":{"start":{"line":69,"column":12},"end":{"line":69,"column":15}}},"8":{"name":"(anonymous_8)","line":82,"loc":{"start":{"line":82,"column":9},"end":{"line":82,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":18,"column":7},"end":{"line":18,"column":32}},"3":{"start":{"line":19,"column":7},"end":{"line":19,"column":44}},"4":{"start":{"line":20,"column":7},"end":{"line":20,"column":46}},"5":{"start":{"line":21,"column":7},"end":{"line":21,"column":34}},"6":{"start":{"line":29,"column":7},"end":{"line":29,"column":28}},"7":{"start":{"line":37,"column":7},"end":{"line":37,"column":34}},"8":{"start":{"line":45,"column":7},"end":{"line":45,"column":35}},"9":{"start":{"line":53,"column":7},"end":{"line":53,"column":29}},"10":{"start":{"line":62,"column":6},"end":{"line":62,"column":300}},"11":{"start":{"line":62,"column":82},"end":{"line":62,"column":131}},"12":{"start":{"line":62,"column":98},"end":{"line":62,"column":130}},"13":{"start":{"line":70,"column":6},"end":{"line":75,"column":7}},"14":{"start":{"line":71,"column":61},"end":{"line":71,"column":94}},"15":{"start":{"line":71,"column":77},"end":{"line":71,"column":93}},"16":{"start":{"line":83,"column":6},"end":{"line":83,"column":29}},"17":{"start":{"line":87,"column":0},"end":{"line":87,"column":36}}},"branchMap":{"1":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":55},"end":{"line":62,"column":132}},{"start":{"line":62,"column":135},"end":{"line":62,"column":139}}]},"2":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":166},"end":{"line":62,"column":188}},{"start":{"line":62,"column":191},"end":{"line":62,"column":195}}]},"3":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":224},"end":{"line":62,"column":248}},{"start":{"line":62,"column":251},"end":{"line":62,"column":255}}]},"4":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":276},"end":{"line":62,"column":292}},{"start":{"line":62,"column":295},"end":{"line":62,"column":299}}]},"5":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":36},"end":{"line":71,"column":95}},{"start":{"line":71,"column":98},"end":{"line":71,"column":107}}]},"6":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":49},"end":{"line":72,"column":68}},{"start":{"line":72,"column":71},"end":{"line":72,"column":80}}]},"7":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":52},"end":{"line":73,"column":72}},{"start":{"line":73,"column":75},"end":{"line":73,"column":84}}]},"8":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":38},"end":{"line":74,"column":52}},{"start":{"line":74,"column":55},"end":{"line":74,"column":64}}]}},"code":["'use strict'","","const KeyboardButton = require('./KeyboardButton')","","/**"," * This object represents a custom keyboard with reply options (see Introduction to bots for details and examples)."," */","","class ReplyKeyboardMarkup {","   /**","    *","    * @param {KeyboardButton[][]} keyboard","    * @param {boolean|null} [resizeKeyboard]","    * @param {boolean|null} [oneTimeKeyboard]","    * @param {boolean|null} [selective]","   */","   constructor(keyboard, resizeKeyboard, oneTimeKeyboard, selective) {","       this._keyboard = keyboard","       this._resizeKeyboard = resizeKeyboard","       this._oneTimeKeyboard = oneTimeKeyboard","       this._selective = selective","   }","","   /**","    * Array of button rows, each represented by an Array of KeyboardButton objects","    * @returns {KeyboardButton[][]}","   */","   get keyboard() {","       return this._keyboard","   }","","   /**","    * Requests clients to resize the keyboard vertically for optimal fit (e.g., make the keyboard smaller if there are just two rows of buttons). Defaults to false, in which case the custom keyboard is always of the same height as the app's standard keyboard.","    * @returns {boolean|null}","   */","   get resizeKeyboard() {","       return this._resizeKeyboard","   }","","   /**","    * Requests clients to hide the keyboard as soon as it's been used. The keyboard will still be available, but clients will automatically display the usual letter-keyboard in the chat – the user can press a special button in the input field to see the custom keyboard again. Defaults to false.","    * @returns {boolean|null}","   */","   get oneTimeKeyboard() {","       return this._oneTimeKeyboard","   }","","   /**","    * Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.Example: A user requests to change the bot‘s language, bot replies to the request with a keyboard to select the new language. Other users in the group don’t see the keyboard.","    * @returns {boolean|null}","   */","   get selective() {","       return this._selective","   }","","   /**","    *","    * @param {Object} raw","    * @returns {ReplyKeyboardMarkup}","    */","   static deserialize(raw) {","      return new ReplyKeyboardMarkup(raw['keyboard'] ? raw['keyboard'].map(arr => arr.map(item => KeyboardButton.deserialize(item))) : null, raw['resize_keyboard'] ? raw['resize_keyboard'] : null, raw['one_time_keyboard'] ? raw['one_time_keyboard'] : null, raw['selective'] ? raw['selective'] : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          keyboard: this.keyboard ? this.keyboard.map(arr => arr.map(item => item.serialize())) : undefined, ","          resize_keyboard: this.resizeKeyboard ? this.resizeKeyboard : undefined, ","          one_time_keyboard: this.oneTimeKeyboard ? this.oneTimeKeyboard : undefined, ","          selective: this.selective ? this.selective : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = ReplyKeyboardMarkup"],"l":{"3":1,"18":0,"19":0,"20":0,"21":0,"29":0,"37":0,"45":0,"53":0,"62":0,"70":0,"71":0,"83":0,"87":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/KeyboardButton.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/KeyboardButton.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":14},"end":{"line":14,"column":54}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":14}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":21},"end":{"line":32,"column":24}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":22},"end":{"line":40,"column":25}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":21},"end":{"line":49,"column":27}}},"6":{"name":"(anonymous_6)","line":57,"loc":{"start":{"line":57,"column":12},"end":{"line":57,"column":15}}},"7":{"name":"(anonymous_7)","line":69,"loc":{"start":{"line":69,"column":9},"end":{"line":69,"column":12}}}},"statementMap":{"1":{"start":{"line":15,"column":7},"end":{"line":15,"column":24}},"2":{"start":{"line":16,"column":7},"end":{"line":16,"column":44}},"3":{"start":{"line":17,"column":7},"end":{"line":17,"column":46}},"4":{"start":{"line":25,"column":7},"end":{"line":25,"column":24}},"5":{"start":{"line":33,"column":7},"end":{"line":33,"column":34}},"6":{"start":{"line":41,"column":7},"end":{"line":41,"column":35}},"7":{"start":{"line":50,"column":6},"end":{"line":50,"column":158}},"8":{"start":{"line":58,"column":6},"end":{"line":62,"column":7}},"9":{"start":{"line":70,"column":6},"end":{"line":70,"column":29}},"10":{"start":{"line":74,"column":0},"end":{"line":74,"column":31}}},"branchMap":{"1":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":70},"end":{"line":50,"column":92}},{"start":{"line":50,"column":95},"end":{"line":50,"column":99}}]},"2":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":127},"end":{"line":50,"column":150}},{"start":{"line":50,"column":153},"end":{"line":50,"column":157}}]},"3":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":28},"end":{"line":59,"column":37}},{"start":{"line":59,"column":40},"end":{"line":59,"column":49}}]},"4":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":49},"end":{"line":60,"column":68}},{"start":{"line":60,"column":71},"end":{"line":60,"column":80}}]},"5":{"line":61,"type":"cond-expr","locations":[{"start":{"line":61,"column":51},"end":{"line":61,"column":71}},{"start":{"line":61,"column":74},"end":{"line":61,"column":83}}]}},"code":["'use strict'","","/**"," * This object represents one button of the reply keyboard. For simple text buttons String can be used instead of this object to specify text of the button. Optional fields are mutually exclusive."," */","","class KeyboardButton {","   /**","    *","    * @param {string} text","    * @param {boolean|null} [requestContact]","    * @param {boolean|null} [requestLocation]","   */","   constructor(text, requestContact, requestLocation) {","       this._text = text","       this._requestContact = requestContact","       this._requestLocation = requestLocation","   }","","   /**","    * Text of the button. If none of the optional fields are used, it will be sent to the bot as a message when the button is pressed","    * @returns {string}","   */","   get text() {","       return this._text","   }","","   /**","    * If True, the user's phone number will be sent as a contact when the button is pressed. Available in private chats only","    * @returns {boolean|null}","   */","   get requestContact() {","       return this._requestContact","   }","","   /**","    * If True, the user's current location will be sent when the button is pressed. Available in private chats only","    * @returns {boolean|null}","   */","   get requestLocation() {","       return this._requestLocation","   }","","   /**","    *","    * @param {Object} raw","    * @returns {KeyboardButton}","    */","   static deserialize(raw) {","      return new KeyboardButton(raw['text'], raw['request_contact'] ? raw['request_contact'] : null, raw['request_location'] ? raw['request_location'] : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          text: this.text ? this.text : undefined, ","          request_contact: this.requestContact ? this.requestContact : undefined, ","          request_location: this.requestLocation ? this.requestLocation : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = KeyboardButton"],"l":{"15":0,"16":0,"17":0,"25":0,"33":0,"41":0,"50":0,"58":0,"70":0,"74":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/ReplyKeyboardRemove.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/ReplyKeyboardRemove.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":14},"end":{"line":13,"column":42}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":21},"end":{"line":22,"column":24}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":16},"end":{"line":30,"column":19}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":21},"end":{"line":39,"column":27}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":12},"end":{"line":47,"column":15}}},"6":{"name":"(anonymous_6)","line":58,"loc":{"start":{"line":58,"column":9},"end":{"line":58,"column":12}}}},"statementMap":{"1":{"start":{"line":14,"column":7},"end":{"line":14,"column":44}},"2":{"start":{"line":15,"column":7},"end":{"line":15,"column":34}},"3":{"start":{"line":23,"column":7},"end":{"line":23,"column":34}},"4":{"start":{"line":31,"column":7},"end":{"line":31,"column":29}},"5":{"start":{"line":40,"column":6},"end":{"line":40,"column":104}},"6":{"start":{"line":48,"column":6},"end":{"line":51,"column":7}},"7":{"start":{"line":59,"column":6},"end":{"line":59,"column":29}},"8":{"start":{"line":63,"column":0},"end":{"line":63,"column":36}}},"branchMap":{"1":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":80},"end":{"line":40,"column":96}},{"start":{"line":40,"column":99},"end":{"line":40,"column":103}}]},"2":{"line":49,"type":"cond-expr","locations":[{"start":{"line":49,"column":49},"end":{"line":49,"column":68}},{"start":{"line":49,"column":71},"end":{"line":49,"column":80}}]},"3":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":38},"end":{"line":50,"column":52}},{"start":{"line":50,"column":55},"end":{"line":50,"column":64}}]}},"code":["'use strict'","","/**"," * Upon receiving a message with this object, Telegram clients will remove the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see ReplyKeyboardMarkup)."," */","","class ReplyKeyboardRemove {","   /**","    *","    * @param {boolean} removeKeyboard","    * @param {boolean|null} [selective]","   */","   constructor(removeKeyboard, selective) {","       this._removeKeyboard = removeKeyboard","       this._selective = selective","   }","","   /**","    * Requests clients to remove the custom keyboard (user will not be able to summon this keyboard; if you want to hide the keyboard from sight but keep it accessible, use one_time_keyboard in ReplyKeyboardMarkup)","    * @returns {boolean}","   */","   get removeKeyboard() {","       return this._removeKeyboard","   }","","   /**","    * Use this parameter if you want to remove the keyboard for specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.Example: A user votes in a poll, bot returns confirmation message in reply to the vote and removes the keyboard for that user, while still showing the keyboard with poll options to users who haven't voted yet.","    * @returns {boolean|null}","   */","   get selective() {","       return this._selective","   }","","   /**","    *","    * @param {Object} raw","    * @returns {ReplyKeyboardRemove}","    */","   static deserialize(raw) {","      return new ReplyKeyboardRemove(raw['remove_keyboard'], raw['selective'] ? raw['selective'] : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          remove_keyboard: this.removeKeyboard ? this.removeKeyboard : undefined, ","          selective: this.selective ? this.selective : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = ReplyKeyboardRemove"],"l":{"14":0,"15":0,"23":0,"31":0,"40":0,"48":0,"59":0,"63":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineKeyboardMarkup.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineKeyboardMarkup.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":14},"end":{"line":14,"column":31}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":21},"end":{"line":22,"column":24}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":21},"end":{"line":31,"column":27}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":12},"end":{"line":39,"column":15}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":9},"end":{"line":49,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":15,"column":7},"end":{"line":15,"column":44}},"3":{"start":{"line":23,"column":7},"end":{"line":23,"column":34}},"4":{"start":{"line":32,"column":6},"end":{"line":32,"column":161}},"5":{"start":{"line":32,"column":97},"end":{"line":32,"column":152}},"6":{"start":{"line":32,"column":113},"end":{"line":32,"column":151}},"7":{"start":{"line":40,"column":6},"end":{"line":42,"column":7}},"8":{"start":{"line":41,"column":80},"end":{"line":41,"column":113}},"9":{"start":{"line":41,"column":96},"end":{"line":41,"column":112}},"10":{"start":{"line":50,"column":6},"end":{"line":50,"column":29}},"11":{"start":{"line":54,"column":0},"end":{"line":54,"column":37}}},"branchMap":{"1":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":63},"end":{"line":32,"column":153}},{"start":{"line":32,"column":156},"end":{"line":32,"column":160}}]},"2":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":49},"end":{"line":41,"column":114}},{"start":{"line":41,"column":117},"end":{"line":41,"column":126}}]}},"code":["'use strict'","","const InlineKeyboardButton = require('./InlineKeyboardButton')","","/**"," * This object represents an inline keyboard that appears right next to the message it belongs to."," */","","class InlineKeyboardMarkup {","   /**","    *","    * @param {InlineKeyboardButton[][]} inlineKeyboard","   */","   constructor(inlineKeyboard) {","       this._inlineKeyboard = inlineKeyboard","   }","","   /**","    * Array of button rows, each represented by an Array of InlineKeyboardButton objects","    * @returns {InlineKeyboardButton[][]}","   */","   get inlineKeyboard() {","       return this._inlineKeyboard","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineKeyboardMarkup}","    */","   static deserialize(raw) {","      return new InlineKeyboardMarkup(raw['inline_keyboard'] ? raw['inline_keyboard'].map(arr => arr.map(item => InlineKeyboardButton.deserialize(item))) : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          inline_keyboard: this.inlineKeyboard ? this.inlineKeyboard.map(arr => arr.map(item => item.serialize())) : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineKeyboardMarkup"],"l":{"3":1,"15":0,"23":0,"32":0,"40":0,"41":0,"50":0,"54":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineKeyboardButton.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineKeyboardButton.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":14},"end":{"line":19,"column":103}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":14}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":10},"end":{"line":40,"column":13}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":19},"end":{"line":48,"column":22}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":24},"end":{"line":56,"column":27}}},"6":{"name":"(anonymous_6)","line":64,"loc":{"start":{"line":64,"column":35},"end":{"line":64,"column":38}}},"7":{"name":"(anonymous_7)","line":72,"loc":{"start":{"line":72,"column":19},"end":{"line":72,"column":22}}},"8":{"name":"(anonymous_8)","line":81,"loc":{"start":{"line":81,"column":21},"end":{"line":81,"column":27}}},"9":{"name":"(anonymous_9)","line":96,"loc":{"start":{"line":96,"column":12},"end":{"line":96,"column":15}}},"10":{"name":"(anonymous_10)","line":111,"loc":{"start":{"line":111,"column":9},"end":{"line":111,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"2":{"start":{"line":20,"column":7},"end":{"line":20,"column":24}},"3":{"start":{"line":21,"column":7},"end":{"line":21,"column":22}},"4":{"start":{"line":22,"column":7},"end":{"line":22,"column":40}},"5":{"start":{"line":23,"column":7},"end":{"line":23,"column":50}},"6":{"start":{"line":24,"column":7},"end":{"line":24,"column":72}},"7":{"start":{"line":25,"column":7},"end":{"line":25,"column":40}},"8":{"start":{"line":33,"column":7},"end":{"line":33,"column":24}},"9":{"start":{"line":41,"column":7},"end":{"line":41,"column":23}},"10":{"start":{"line":49,"column":7},"end":{"line":49,"column":32}},"11":{"start":{"line":57,"column":7},"end":{"line":57,"column":37}},"12":{"start":{"line":65,"column":7},"end":{"line":65,"column":48}},"13":{"start":{"line":73,"column":7},"end":{"line":73,"column":32}},"14":{"start":{"line":82,"column":6},"end":{"line":89,"column":7}},"15":{"start":{"line":97,"column":6},"end":{"line":104,"column":7}},"16":{"start":{"line":112,"column":6},"end":{"line":112,"column":29}},"17":{"start":{"line":116,"column":0},"end":{"line":116,"column":37}}},"branchMap":{"1":{"line":84,"type":"cond-expr","locations":[{"start":{"line":84,"column":23},"end":{"line":84,"column":33}},{"start":{"line":84,"column":36},"end":{"line":84,"column":40}}]},"2":{"line":85,"type":"cond-expr","locations":[{"start":{"line":85,"column":33},"end":{"line":85,"column":53}},{"start":{"line":85,"column":56},"end":{"line":85,"column":60}}]},"3":{"line":86,"type":"cond-expr","locations":[{"start":{"line":86,"column":39},"end":{"line":86,"column":65}},{"start":{"line":86,"column":68},"end":{"line":86,"column":72}}]},"4":{"line":87,"type":"cond-expr","locations":[{"start":{"line":87,"column":52},"end":{"line":87,"column":91}},{"start":{"line":87,"column":94},"end":{"line":87,"column":98}}]},"5":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":33},"end":{"line":88,"column":79}},{"start":{"line":88,"column":82},"end":{"line":88,"column":86}}]},"6":{"line":98,"type":"cond-expr","locations":[{"start":{"line":98,"column":28},"end":{"line":98,"column":37}},{"start":{"line":98,"column":40},"end":{"line":98,"column":49}}]},"7":{"line":99,"type":"cond-expr","locations":[{"start":{"line":99,"column":26},"end":{"line":99,"column":34}},{"start":{"line":99,"column":37},"end":{"line":99,"column":46}}]},"8":{"line":100,"type":"cond-expr","locations":[{"start":{"line":100,"column":45},"end":{"line":100,"column":62}},{"start":{"line":100,"column":65},"end":{"line":100,"column":74}}]},"9":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":56},"end":{"line":101,"column":78}},{"start":{"line":101,"column":81},"end":{"line":101,"column":90}}]},"10":{"line":102,"type":"cond-expr","locations":[{"start":{"line":102,"column":80},"end":{"line":102,"column":113}},{"start":{"line":102,"column":116},"end":{"line":102,"column":125}}]},"11":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":45},"end":{"line":103,"column":74}},{"start":{"line":103,"column":77},"end":{"line":103,"column":86}}]}},"code":["'use strict'","","const CallbackGame = require('./CallbackGame')","","/**"," * This object represents one button of an inline keyboard. You must use exactly one of the optional fields."," */","","class InlineKeyboardButton {","   /**","    *","    * @param {string} text","    * @param {string|null} [url]","    * @param {string|null} [callbackData]","    * @param {string|null} [switchInlineQuery]","    * @param {string|null} [switchInlineQueryCurrentChat]","    * @param {CallbackGame|null} [callbackGame]","   */","   constructor(text, url, callbackData, switchInlineQuery, switchInlineQueryCurrentChat, callbackGame) {","       this._text = text","       this._url = url","       this._callbackData = callbackData","       this._switchInlineQuery = switchInlineQuery","       this._switchInlineQueryCurrentChat = switchInlineQueryCurrentChat","       this._callbackGame = callbackGame","   }","","   /**","    * Label text on the button","    * @returns {string}","   */","   get text() {","       return this._text","   }","","   /**","    * HTTP url to be opened when button is pressed","    * @returns {string|null}","   */","   get url() {","       return this._url","   }","","   /**","    * Data to be sent in a callback query to the bot when button is pressed, 1-64 bytes","    * @returns {string|null}","   */","   get callbackData() {","       return this._callbackData","   }","","   /**","    * If set, pressing the button will prompt the user to select one of their chats, open that chat and insert the bot‘s username and the specified inline query in the input field. Can be empty, in which case just the bot’s username will be inserted.Note: This offers an easy way for users to start using your bot in inline mode when they are currently in a private chat with it. Especially useful when combined with switch_pm… actions – in this case the user will be automatically returned to the chat they switched from, skipping the chat selection screen.","    * @returns {string|null}","   */","   get switchInlineQuery() {","       return this._switchInlineQuery","   }","","   /**","    * If set, pressing the button will insert the bot‘s username and the specified inline query in the current chat's input field. Can be empty, in which case only the bot’s username will be inserted.This offers a quick way for the user to open your bot in inline mode in the same chat – good for selecting something from multiple options.","    * @returns {string|null}","   */","   get switchInlineQueryCurrentChat() {","       return this._switchInlineQueryCurrentChat","   }","","   /**","    * Description of the game that will be launched when the user presses the button.NOTE: This type of button must always be the first button in the first row.","    * @returns {CallbackGame|null}","   */","   get callbackGame() {","       return this._callbackGame","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineKeyboardButton}","    */","   static deserialize(raw) {","      return new InlineKeyboardButton(","          raw['text'], ","          raw['url'] ? raw['url'] : null, ","          raw['callback_data'] ? raw['callback_data'] : null, ","          raw['switch_inline_query'] ? raw['switch_inline_query'] : null, ","          raw['switch_inline_query_current_chat'] ? raw['switch_inline_query_current_chat'] : null, ","          raw['callback_game'] ? CallbackGame.deserialize(raw['callback_game']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          text: this.text ? this.text : undefined, ","          url: this.url ? this.url : undefined, ","          callback_data: this.callbackData ? this.callbackData : undefined, ","          switch_inline_query: this.switchInlineQuery ? this.switchInlineQuery : undefined, ","          switch_inline_query_current_chat: this.switchInlineQueryCurrentChat ? this.switchInlineQueryCurrentChat : undefined, ","          callback_game: this.callbackGame ? this.callbackGame.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineKeyboardButton"],"l":{"3":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"33":0,"41":0,"49":0,"57":0,"65":0,"73":0,"82":0,"97":0,"112":0,"116":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/CallbackGame.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/CallbackGame.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}}},"branchMap":{},"code":["'use strict'","","class CallbackGame {","    //placeholder","}","","module.exports = CallbackGame"],"l":{"7":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/ForceReply.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/ForceReply.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":14},"end":{"line":13,"column":38}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":20}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":16},"end":{"line":30,"column":19}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":21},"end":{"line":39,"column":27}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":12},"end":{"line":47,"column":15}}},"6":{"name":"(anonymous_6)","line":58,"loc":{"start":{"line":58,"column":9},"end":{"line":58,"column":12}}}},"statementMap":{"1":{"start":{"line":14,"column":7},"end":{"line":14,"column":36}},"2":{"start":{"line":15,"column":7},"end":{"line":15,"column":34}},"3":{"start":{"line":23,"column":7},"end":{"line":23,"column":30}},"4":{"start":{"line":31,"column":7},"end":{"line":31,"column":29}},"5":{"start":{"line":40,"column":6},"end":{"line":40,"column":91}},"6":{"start":{"line":48,"column":6},"end":{"line":51,"column":7}},"7":{"start":{"line":59,"column":6},"end":{"line":59,"column":29}},"8":{"start":{"line":63,"column":0},"end":{"line":63,"column":27}}},"branchMap":{"1":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":67},"end":{"line":40,"column":83}},{"start":{"line":40,"column":86},"end":{"line":40,"column":90}}]},"2":{"line":49,"type":"cond-expr","locations":[{"start":{"line":49,"column":41},"end":{"line":49,"column":56}},{"start":{"line":49,"column":59},"end":{"line":49,"column":68}}]},"3":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":38},"end":{"line":50,"column":52}},{"start":{"line":50,"column":55},"end":{"line":50,"column":64}}]}},"code":["'use strict'","","/**"," * Upon receiving a message with this object, Telegram clients will display a reply interface to the user (act as if the user has selected the bot‘s message and tapped ’Reply'). This can be extremely useful if you want to create user-friendly step-by-step interfaces without having to sacrifice privacy mode."," */","","class ForceReply {","   /**","    *","    * @param {boolean} forceReply","    * @param {boolean|null} [selective]","   */","   constructor(forceReply, selective) {","       this._forceReply = forceReply","       this._selective = selective","   }","","   /**","    * Shows reply interface to the user, as if they manually selected the bot‘s message and tapped ’Reply'","    * @returns {boolean}","   */","   get forceReply() {","       return this._forceReply","   }","","   /**","    * Use this parameter if you want to force reply from specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.","    * @returns {boolean|null}","   */","   get selective() {","       return this._selective","   }","","   /**","    *","    * @param {Object} raw","    * @returns {ForceReply}","    */","   static deserialize(raw) {","      return new ForceReply(raw['force_reply'], raw['selective'] ? raw['selective'] : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          force_reply: this.forceReply ? this.forceReply : undefined, ","          selective: this.selective ? this.selective : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = ForceReply"],"l":{"14":0,"15":0,"23":0,"31":0,"40":0,"48":0,"59":0,"63":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/ChatMember.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/ChatMember.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":29}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":14}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":13},"end":{"line":32,"column":16}}},"4":{"name":"(anonymous_4)","line":41,"loc":{"start":{"line":41,"column":21},"end":{"line":41,"column":27}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":12},"end":{"line":49,"column":15}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":9},"end":{"line":60,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":16,"column":7},"end":{"line":16,"column":24}},"3":{"start":{"line":17,"column":7},"end":{"line":17,"column":28}},"4":{"start":{"line":25,"column":7},"end":{"line":25,"column":24}},"5":{"start":{"line":33,"column":7},"end":{"line":33,"column":26}},"6":{"start":{"line":42,"column":6},"end":{"line":42,"column":94}},"7":{"start":{"line":50,"column":6},"end":{"line":53,"column":7}},"8":{"start":{"line":61,"column":6},"end":{"line":61,"column":29}},"9":{"start":{"line":65,"column":0},"end":{"line":65,"column":27}}},"branchMap":{"1":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":42},"end":{"line":42,"column":71}},{"start":{"line":42,"column":74},"end":{"line":42,"column":78}}]},"2":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":28},"end":{"line":51,"column":49}},{"start":{"line":51,"column":52},"end":{"line":51,"column":61}}]},"3":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":32},"end":{"line":52,"column":43}},{"start":{"line":52,"column":46},"end":{"line":52,"column":55}}]}},"code":["'use strict'","","const User = require('./User')","","/**"," * This object contains information about one member of the chat."," */","","class ChatMember {","   /**","    *","    * @param {User} user","    * @param {string} status","   */","   constructor(user, status) {","       this._user = user","       this._status = status","   }","","   /**","    * Information about the user","    * @returns {User}","   */","   get user() {","       return this._user","   }","","   /**","    * The member's status in the chat. Can be “creator”, “administrator”, “member”, “left” or “kicked”","    * @returns {string}","   */","   get status() {","       return this._status","   }","","   /**","    *","    * @param {Object} raw","    * @returns {ChatMember}","    */","   static deserialize(raw) {","      return new ChatMember(raw['user'] ? User.deserialize(raw['user']) : null, raw['status'])","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          user: this.user ? this.user.serialize() : undefined, ","          status: this.status ? this.status : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = ChatMember"],"l":{"3":1,"16":0,"17":0,"25":0,"33":0,"42":0,"50":0,"61":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/ResponseParameters.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/ResponseParameters.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":14},"end":{"line":13,"column":44}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":22},"end":{"line":22,"column":25}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":17},"end":{"line":30,"column":20}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":21},"end":{"line":39,"column":27}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":12},"end":{"line":47,"column":15}}},"6":{"name":"(anonymous_6)","line":58,"loc":{"start":{"line":58,"column":9},"end":{"line":58,"column":12}}}},"statementMap":{"1":{"start":{"line":14,"column":7},"end":{"line":14,"column":46}},"2":{"start":{"line":15,"column":7},"end":{"line":15,"column":36}},"3":{"start":{"line":23,"column":7},"end":{"line":23,"column":35}},"4":{"start":{"line":31,"column":7},"end":{"line":31,"column":30}},"5":{"start":{"line":40,"column":6},"end":{"line":40,"column":145}},"6":{"start":{"line":48,"column":6},"end":{"line":51,"column":7}},"7":{"start":{"line":59,"column":6},"end":{"line":59,"column":29}},"8":{"start":{"line":63,"column":0},"end":{"line":63,"column":35}}},"branchMap":{"1":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":64},"end":{"line":40,"column":89}},{"start":{"line":40,"column":92},"end":{"line":40,"column":96}}]},"2":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":119},"end":{"line":40,"column":137}},{"start":{"line":40,"column":140},"end":{"line":40,"column":144}}]},"3":{"line":49,"type":"cond-expr","locations":[{"start":{"line":49,"column":53},"end":{"line":49,"column":73}},{"start":{"line":49,"column":76},"end":{"line":49,"column":85}}]},"4":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":41},"end":{"line":50,"column":56}},{"start":{"line":50,"column":59},"end":{"line":50,"column":68}}]}},"code":["'use strict'","","/**"," * Contains information about why a request was unsuccessfull."," */","","class ResponseParameters {","   /**","    *","    * @param {number|null} [migrateToChatId]","    * @param {number|null} [retryAfter]","   */","   constructor(migrateToChatId, retryAfter) {","       this._migrateToChatId = migrateToChatId","       this._retryAfter = retryAfter","   }","","   /**","    * The group has been migrated to a supergroup with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.","    * @returns {number|null}","   */","   get migrateToChatId() {","       return this._migrateToChatId","   }","","   /**","    * In case of exceeding flood control, the number of seconds left to wait before the request can be repeated","    * @returns {number|null}","   */","   get retryAfter() {","       return this._retryAfter","   }","","   /**","    *","    * @param {Object} raw","    * @returns {ResponseParameters}","    */","   static deserialize(raw) {","      return new ResponseParameters(raw['migrate_to_chat_id'] ? raw['migrate_to_chat_id'] : null, raw['retry_after'] ? raw['retry_after'] : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          migrate_to_chat_id: this.migrateToChatId ? this.migrateToChatId : undefined, ","          retry_after: this.retryAfter ? this.retryAfter : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = ResponseParameters"],"l":{"14":0,"15":0,"23":0,"31":0,"40":0,"48":0,"59":0,"63":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultArticle.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultArticle.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":14},"end":{"line":37,"column":5}}},"2":{"name":"(anonymous_2)","line":56,"loc":{"start":{"line":56,"column":11},"end":{"line":56,"column":14}}},"3":{"name":"(anonymous_3)","line":64,"loc":{"start":{"line":64,"column":9},"end":{"line":64,"column":12}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":12},"end":{"line":72,"column":15}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":26},"end":{"line":80,"column":29}}},"6":{"name":"(anonymous_6)","line":88,"loc":{"start":{"line":88,"column":18},"end":{"line":88,"column":21}}},"7":{"name":"(anonymous_7)","line":96,"loc":{"start":{"line":96,"column":10},"end":{"line":96,"column":13}}},"8":{"name":"(anonymous_8)","line":104,"loc":{"start":{"line":104,"column":14},"end":{"line":104,"column":17}}},"9":{"name":"(anonymous_9)","line":112,"loc":{"start":{"line":112,"column":18},"end":{"line":112,"column":21}}},"10":{"name":"(anonymous_10)","line":120,"loc":{"start":{"line":120,"column":15},"end":{"line":120,"column":18}}},"11":{"name":"(anonymous_11)","line":128,"loc":{"start":{"line":128,"column":17},"end":{"line":128,"column":20}}},"12":{"name":"(anonymous_12)","line":136,"loc":{"start":{"line":136,"column":18},"end":{"line":136,"column":21}}},"13":{"name":"(anonymous_13)","line":145,"loc":{"start":{"line":145,"column":21},"end":{"line":145,"column":27}}},"14":{"name":"(anonymous_14)","line":165,"loc":{"start":{"line":165,"column":12},"end":{"line":165,"column":15}}},"15":{"name":"(anonymous_15)","line":185,"loc":{"start":{"line":185,"column":9},"end":{"line":185,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":62}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":38,"column":7},"end":{"line":38,"column":14}},"5":{"start":{"line":39,"column":7},"end":{"line":39,"column":24}},"6":{"start":{"line":40,"column":7},"end":{"line":40,"column":20}},"7":{"start":{"line":41,"column":7},"end":{"line":41,"column":26}},"8":{"start":{"line":42,"column":7},"end":{"line":42,"column":54}},"9":{"start":{"line":43,"column":7},"end":{"line":43,"column":38}},"10":{"start":{"line":44,"column":7},"end":{"line":44,"column":22}},"11":{"start":{"line":45,"column":7},"end":{"line":45,"column":30}},"12":{"start":{"line":46,"column":7},"end":{"line":46,"column":38}},"13":{"start":{"line":47,"column":7},"end":{"line":47,"column":32}},"14":{"start":{"line":48,"column":7},"end":{"line":48,"column":36}},"15":{"start":{"line":49,"column":7},"end":{"line":49,"column":38}},"16":{"start":{"line":57,"column":7},"end":{"line":57,"column":24}},"17":{"start":{"line":65,"column":7},"end":{"line":65,"column":22}},"18":{"start":{"line":73,"column":7},"end":{"line":73,"column":25}},"19":{"start":{"line":81,"column":7},"end":{"line":81,"column":39}},"20":{"start":{"line":89,"column":7},"end":{"line":89,"column":31}},"21":{"start":{"line":97,"column":7},"end":{"line":97,"column":23}},"22":{"start":{"line":105,"column":7},"end":{"line":105,"column":27}},"23":{"start":{"line":113,"column":7},"end":{"line":113,"column":31}},"24":{"start":{"line":121,"column":7},"end":{"line":121,"column":28}},"25":{"start":{"line":129,"column":7},"end":{"line":129,"column":30}},"26":{"start":{"line":137,"column":7},"end":{"line":137,"column":31}},"27":{"start":{"line":146,"column":6},"end":{"line":158,"column":7}},"28":{"start":{"line":166,"column":6},"end":{"line":178,"column":7}},"29":{"start":{"line":186,"column":6},"end":{"line":186,"column":29}},"30":{"start":{"line":190,"column":0},"end":{"line":190,"column":41}}},"branchMap":{"1":{"line":150,"type":"cond-expr","locations":[{"start":{"line":150,"column":41},"end":{"line":150,"column":102}},{"start":{"line":150,"column":105},"end":{"line":150,"column":109}}]},"2":{"line":151,"type":"cond-expr","locations":[{"start":{"line":151,"column":32},"end":{"line":151,"column":85}},{"start":{"line":151,"column":88},"end":{"line":151,"column":92}}]},"3":{"line":152,"type":"cond-expr","locations":[{"start":{"line":152,"column":23},"end":{"line":152,"column":33}},{"start":{"line":152,"column":36},"end":{"line":152,"column":40}}]},"4":{"line":153,"type":"cond-expr","locations":[{"start":{"line":153,"column":28},"end":{"line":153,"column":43}},{"start":{"line":153,"column":46},"end":{"line":153,"column":50}}]},"5":{"line":154,"type":"cond-expr","locations":[{"start":{"line":154,"column":31},"end":{"line":154,"column":49}},{"start":{"line":154,"column":52},"end":{"line":154,"column":56}}]},"6":{"line":155,"type":"cond-expr","locations":[{"start":{"line":155,"column":29},"end":{"line":155,"column":45}},{"start":{"line":155,"column":48},"end":{"line":155,"column":52}}]},"7":{"line":156,"type":"cond-expr","locations":[{"start":{"line":156,"column":31},"end":{"line":156,"column":49}},{"start":{"line":156,"column":52},"end":{"line":156,"column":56}}]},"8":{"line":157,"type":"cond-expr","locations":[{"start":{"line":157,"column":32},"end":{"line":157,"column":51}},{"start":{"line":157,"column":54},"end":{"line":157,"column":58}}]},"9":{"line":167,"type":"cond-expr","locations":[{"start":{"line":167,"column":28},"end":{"line":167,"column":37}},{"start":{"line":167,"column":40},"end":{"line":167,"column":49}}]},"10":{"line":168,"type":"cond-expr","locations":[{"start":{"line":168,"column":24},"end":{"line":168,"column":31}},{"start":{"line":168,"column":34},"end":{"line":168,"column":43}}]},"11":{"line":169,"type":"cond-expr","locations":[{"start":{"line":169,"column":30},"end":{"line":169,"column":40}},{"start":{"line":169,"column":43},"end":{"line":169,"column":52}}]},"12":{"line":170,"type":"cond-expr","locations":[{"start":{"line":170,"column":60},"end":{"line":170,"column":96}},{"start":{"line":170,"column":99},"end":{"line":170,"column":108}}]},"13":{"line":171,"type":"cond-expr","locations":[{"start":{"line":171,"column":43},"end":{"line":171,"column":71}},{"start":{"line":171,"column":74},"end":{"line":171,"column":83}}]},"14":{"line":172,"type":"cond-expr","locations":[{"start":{"line":172,"column":26},"end":{"line":172,"column":34}},{"start":{"line":172,"column":37},"end":{"line":172,"column":46}}]},"15":{"line":173,"type":"cond-expr","locations":[{"start":{"line":173,"column":35},"end":{"line":173,"column":47}},{"start":{"line":173,"column":50},"end":{"line":173,"column":59}}]},"16":{"line":174,"type":"cond-expr","locations":[{"start":{"line":174,"column":42},"end":{"line":174,"column":58}},{"start":{"line":174,"column":61},"end":{"line":174,"column":70}}]},"17":{"line":175,"type":"cond-expr","locations":[{"start":{"line":175,"column":37},"end":{"line":175,"column":50}},{"start":{"line":175,"column":53},"end":{"line":175,"column":62}}]},"18":{"line":176,"type":"cond-expr","locations":[{"start":{"line":176,"column":41},"end":{"line":176,"column":56}},{"start":{"line":176,"column":59},"end":{"line":176,"column":68}}]},"19":{"line":177,"type":"cond-expr","locations":[{"start":{"line":177,"column":43},"end":{"line":177,"column":59}},{"start":{"line":177,"column":62},"end":{"line":177,"column":71}}]}},"code":["'use strict'","","const InputMessageContent = require('./InputMessageContent')","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to an article or web page."," */","","class InlineQueryResultArticle extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} title","    * @param {InputMessageContent} inputMessageContent","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {string|null} [url]","    * @param {boolean|null} [hideUrl]","    * @param {string|null} [description]","    * @param {string|null} [thumbUrl]","    * @param {number|null} [thumbWidth]","    * @param {number|null} [thumbHeight]","   */","   constructor(","     type, ","     id, ","     title, ","     inputMessageContent, ","     replyMarkup, ","     url, ","     hideUrl, ","     description, ","     thumbUrl, ","     thumbWidth, ","     thumbHeight","   ) {","       super()","       this._type = type","       this._id = id","       this._title = title","       this._inputMessageContent = inputMessageContent","       this._replyMarkup = replyMarkup","       this._url = url","       this._hideUrl = hideUrl","       this._description = description","       this._thumbUrl = thumbUrl","       this._thumbWidth = thumbWidth","       this._thumbHeight = thumbHeight","   }","","   /**","    * Type of the result, must be article","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 Bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * Title of the result","    * @returns {string}","   */","   get title() {","       return this._title","   }","","   /**","    * Content of the message to be sent","    * @returns {InputMessageContent}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * URL of the result","    * @returns {string|null}","   */","   get url() {","       return this._url","   }","","   /**","    * Pass True, if you don't want the URL to be shown in the message","    * @returns {boolean|null}","   */","   get hideUrl() {","       return this._hideUrl","   }","","   /**","    * Short description of the result","    * @returns {string|null}","   */","   get description() {","       return this._description","   }","","   /**","    * Url of the thumbnail for the result","    * @returns {string|null}","   */","   get thumbUrl() {","       return this._thumbUrl","   }","","   /**","    * Thumbnail width","    * @returns {number|null}","   */","   get thumbWidth() {","       return this._thumbWidth","   }","","   /**","    * Thumbnail height","    * @returns {number|null}","   */","   get thumbHeight() {","       return this._thumbHeight","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultArticle}","    */","   static deserialize(raw) {","      return new InlineQueryResultArticle(","          raw['type'], ","          raw['id'], ","          raw['title'], ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['url'] ? raw['url'] : null, ","          raw['hide_url'] ? raw['hide_url'] : null, ","          raw['description'] ? raw['description'] : null, ","          raw['thumb_url'] ? raw['thumb_url'] : null, ","          raw['thumb_width'] ? raw['thumb_width'] : null, ","          raw['thumb_height'] ? raw['thumb_height'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          title: this.title ? this.title : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          url: this.url ? this.url : undefined, ","          hide_url: this.hideUrl ? this.hideUrl : undefined, ","          description: this.description ? this.description : undefined, ","          thumb_url: this.thumbUrl ? this.thumbUrl : undefined, ","          thumb_width: this.thumbWidth ? this.thumbWidth : undefined, ","          thumb_height: this.thumbHeight ? this.thumbHeight : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultArticle"],"l":{"3":1,"4":1,"5":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"57":0,"65":0,"73":0,"81":0,"89":0,"97":0,"105":0,"113":0,"121":0,"129":0,"137":0,"146":0,"166":0,"186":0,"190":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InputMessageContent.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InputMessageContent.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":1},"b":{"1":[0,0,0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":22},"end":{"line":9,"column":28}}}},"statementMap":{"1":{"start":{"line":10,"column":8},"end":{"line":19,"column":9}},"2":{"start":{"line":12,"column":16},"end":{"line":12,"column":76}},"3":{"start":{"line":14,"column":16},"end":{"line":14,"column":77}},"4":{"start":{"line":16,"column":16},"end":{"line":16,"column":79}},"5":{"start":{"line":18,"column":16},"end":{"line":18,"column":80}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}}},"branchMap":{"1":{"line":10,"type":"switch","locations":[{"start":{"line":11,"column":12},"end":{"line":12,"column":76}},{"start":{"line":13,"column":12},"end":{"line":14,"column":77}},{"start":{"line":15,"column":12},"end":{"line":16,"column":79}},{"start":{"line":17,"column":12},"end":{"line":18,"column":80}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":17},"end":{"line":13,"column":29}},{"start":{"line":13,"column":33},"end":{"line":13,"column":42}}]}},"code":["'use strict'","","class InputMessageContent {","    /**","     *","     * @param {Object} raw","     * @returns {InputTextMessageContent|InputVenueMessageContent|InputContactMessageContent|InputLocationMessageContent}","     */","    static deserialize(raw) {","        switch (raw) {","            case raw.message_text:","                return require('./InputTextMessageContent').deserialize(raw)","            case raw.latitude && raw.title:","                return require('./InputVenueMessageContent').deserialize(raw)","            case raw.phone_number:","                return require('./InputContactMessageContent').deserialize(raw)","            case raw.latitude:","                return require('./InputLocationMessageContent').deserialize(raw)","        }","    }","}","","module.exports = InputMessageContent"],"l":{"10":0,"12":0,"14":0,"16":0,"18":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResult.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResult.js","s":{"1":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":10},"end":{"line":4,"column":13}}},"2":{"name":"(anonymous_2)","line":6,"loc":{"start":{"line":6,"column":10},"end":{"line":6,"column":13}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}}},"branchMap":{},"code":["'use strict' ","","class InlineQueryResult {","    toJSON() { }","    ","    get id() { }","}","","module.exports = InlineQueryResult"],"l":{"9":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultPhoto.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultPhoto.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":14},"end":{"line":37,"column":5}}},"2":{"name":"(anonymous_2)","line":56,"loc":{"start":{"line":56,"column":11},"end":{"line":56,"column":14}}},"3":{"name":"(anonymous_3)","line":64,"loc":{"start":{"line":64,"column":9},"end":{"line":64,"column":12}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":15},"end":{"line":72,"column":18}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":15},"end":{"line":80,"column":18}}},"6":{"name":"(anonymous_6)","line":88,"loc":{"start":{"line":88,"column":17},"end":{"line":88,"column":20}}},"7":{"name":"(anonymous_7)","line":96,"loc":{"start":{"line":96,"column":18},"end":{"line":96,"column":21}}},"8":{"name":"(anonymous_8)","line":104,"loc":{"start":{"line":104,"column":12},"end":{"line":104,"column":15}}},"9":{"name":"(anonymous_9)","line":112,"loc":{"start":{"line":112,"column":18},"end":{"line":112,"column":21}}},"10":{"name":"(anonymous_10)","line":120,"loc":{"start":{"line":120,"column":14},"end":{"line":120,"column":17}}},"11":{"name":"(anonymous_11)","line":128,"loc":{"start":{"line":128,"column":18},"end":{"line":128,"column":21}}},"12":{"name":"(anonymous_12)","line":136,"loc":{"start":{"line":136,"column":26},"end":{"line":136,"column":29}}},"13":{"name":"(anonymous_13)","line":145,"loc":{"start":{"line":145,"column":21},"end":{"line":145,"column":27}}},"14":{"name":"(anonymous_14)","line":165,"loc":{"start":{"line":165,"column":12},"end":{"line":165,"column":15}}},"15":{"name":"(anonymous_15)","line":185,"loc":{"start":{"line":185,"column":9},"end":{"line":185,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":38,"column":7},"end":{"line":38,"column":14}},"5":{"start":{"line":39,"column":7},"end":{"line":39,"column":24}},"6":{"start":{"line":40,"column":7},"end":{"line":40,"column":20}},"7":{"start":{"line":41,"column":7},"end":{"line":41,"column":32}},"8":{"start":{"line":42,"column":7},"end":{"line":42,"column":32}},"9":{"start":{"line":43,"column":7},"end":{"line":43,"column":36}},"10":{"start":{"line":44,"column":7},"end":{"line":44,"column":38}},"11":{"start":{"line":45,"column":7},"end":{"line":45,"column":26}},"12":{"start":{"line":46,"column":7},"end":{"line":46,"column":38}},"13":{"start":{"line":47,"column":7},"end":{"line":47,"column":30}},"14":{"start":{"line":48,"column":7},"end":{"line":48,"column":38}},"15":{"start":{"line":49,"column":7},"end":{"line":49,"column":54}},"16":{"start":{"line":57,"column":7},"end":{"line":57,"column":24}},"17":{"start":{"line":65,"column":7},"end":{"line":65,"column":22}},"18":{"start":{"line":73,"column":7},"end":{"line":73,"column":28}},"19":{"start":{"line":81,"column":7},"end":{"line":81,"column":28}},"20":{"start":{"line":89,"column":7},"end":{"line":89,"column":30}},"21":{"start":{"line":97,"column":7},"end":{"line":97,"column":31}},"22":{"start":{"line":105,"column":7},"end":{"line":105,"column":25}},"23":{"start":{"line":113,"column":7},"end":{"line":113,"column":31}},"24":{"start":{"line":121,"column":7},"end":{"line":121,"column":27}},"25":{"start":{"line":129,"column":7},"end":{"line":129,"column":31}},"26":{"start":{"line":137,"column":7},"end":{"line":137,"column":39}},"27":{"start":{"line":146,"column":6},"end":{"line":158,"column":7}},"28":{"start":{"line":166,"column":6},"end":{"line":178,"column":7}},"29":{"start":{"line":186,"column":6},"end":{"line":186,"column":29}},"30":{"start":{"line":190,"column":0},"end":{"line":190,"column":39}}},"branchMap":{"1":{"line":151,"type":"cond-expr","locations":[{"start":{"line":151,"column":31},"end":{"line":151,"column":49}},{"start":{"line":151,"column":52},"end":{"line":151,"column":56}}]},"2":{"line":152,"type":"cond-expr","locations":[{"start":{"line":152,"column":32},"end":{"line":152,"column":51}},{"start":{"line":152,"column":54},"end":{"line":152,"column":58}}]},"3":{"line":153,"type":"cond-expr","locations":[{"start":{"line":153,"column":25},"end":{"line":153,"column":37}},{"start":{"line":153,"column":40},"end":{"line":153,"column":44}}]},"4":{"line":154,"type":"cond-expr","locations":[{"start":{"line":154,"column":31},"end":{"line":154,"column":49}},{"start":{"line":154,"column":52},"end":{"line":154,"column":56}}]},"5":{"line":155,"type":"cond-expr","locations":[{"start":{"line":155,"column":27},"end":{"line":155,"column":41}},{"start":{"line":155,"column":44},"end":{"line":155,"column":48}}]},"6":{"line":156,"type":"cond-expr","locations":[{"start":{"line":156,"column":32},"end":{"line":156,"column":85}},{"start":{"line":156,"column":88},"end":{"line":156,"column":92}}]},"7":{"line":157,"type":"cond-expr","locations":[{"start":{"line":157,"column":41},"end":{"line":157,"column":102}},{"start":{"line":157,"column":105},"end":{"line":157,"column":109}}]},"8":{"line":167,"type":"cond-expr","locations":[{"start":{"line":167,"column":28},"end":{"line":167,"column":37}},{"start":{"line":167,"column":40},"end":{"line":167,"column":49}}]},"9":{"line":168,"type":"cond-expr","locations":[{"start":{"line":168,"column":24},"end":{"line":168,"column":31}},{"start":{"line":168,"column":34},"end":{"line":168,"column":43}}]},"10":{"line":169,"type":"cond-expr","locations":[{"start":{"line":169,"column":37},"end":{"line":169,"column":50}},{"start":{"line":169,"column":53},"end":{"line":169,"column":62}}]},"11":{"line":170,"type":"cond-expr","locations":[{"start":{"line":170,"column":37},"end":{"line":170,"column":50}},{"start":{"line":170,"column":53},"end":{"line":170,"column":62}}]},"12":{"line":171,"type":"cond-expr","locations":[{"start":{"line":171,"column":41},"end":{"line":171,"column":56}},{"start":{"line":171,"column":59},"end":{"line":171,"column":68}}]},"13":{"line":172,"type":"cond-expr","locations":[{"start":{"line":172,"column":43},"end":{"line":172,"column":59}},{"start":{"line":172,"column":62},"end":{"line":172,"column":71}}]},"14":{"line":173,"type":"cond-expr","locations":[{"start":{"line":173,"column":30},"end":{"line":173,"column":40}},{"start":{"line":173,"column":43},"end":{"line":173,"column":52}}]},"15":{"line":174,"type":"cond-expr","locations":[{"start":{"line":174,"column":42},"end":{"line":174,"column":58}},{"start":{"line":174,"column":61},"end":{"line":174,"column":70}}]},"16":{"line":175,"type":"cond-expr","locations":[{"start":{"line":175,"column":34},"end":{"line":175,"column":46}},{"start":{"line":175,"column":49},"end":{"line":175,"column":58}}]},"17":{"line":176,"type":"cond-expr","locations":[{"start":{"line":176,"column":43},"end":{"line":176,"column":71}},{"start":{"line":176,"column":74},"end":{"line":176,"column":83}}]},"18":{"line":177,"type":"cond-expr","locations":[{"start":{"line":177,"column":60},"end":{"line":177,"column":96}},{"start":{"line":177,"column":99},"end":{"line":177,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to a photo. By default, this photo will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo."," */","","class InlineQueryResultPhoto extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} photoUrl","    * @param {string} thumbUrl","    * @param {number|null} [photoWidth]","    * @param {number|null} [photoHeight]","    * @param {string|null} [title]","    * @param {string|null} [description]","    * @param {string|null} [caption]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(","     type, ","     id, ","     photoUrl, ","     thumbUrl, ","     photoWidth, ","     photoHeight, ","     title, ","     description, ","     caption, ","     replyMarkup, ","     inputMessageContent","   ) {","       super()","       this._type = type","       this._id = id","       this._photoUrl = photoUrl","       this._thumbUrl = thumbUrl","       this._photoWidth = photoWidth","       this._photoHeight = photoHeight","       this._title = title","       this._description = description","       this._caption = caption","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be photo","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * A valid URL of the photo. Photo must be in jpeg format. Photo size must not exceed 5MB","    * @returns {string}","   */","   get photoUrl() {","       return this._photoUrl","   }","","   /**","    * URL of the thumbnail for the photo","    * @returns {string}","   */","   get thumbUrl() {","       return this._thumbUrl","   }","","   /**","    * Width of the photo","    * @returns {number|null}","   */","   get photoWidth() {","       return this._photoWidth","   }","","   /**","    * Height of the photo","    * @returns {number|null}","   */","   get photoHeight() {","       return this._photoHeight","   }","","   /**","    * Title for the result","    * @returns {string|null}","   */","   get title() {","       return this._title","   }","","   /**","    * Short description of the result","    * @returns {string|null}","   */","   get description() {","       return this._description","   }","","   /**","    * Caption of the photo to be sent, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the photo","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultPhoto}","    */","   static deserialize(raw) {","      return new InlineQueryResultPhoto(","          raw['type'], ","          raw['id'], ","          raw['photo_url'], ","          raw['thumb_url'], ","          raw['photo_width'] ? raw['photo_width'] : null, ","          raw['photo_height'] ? raw['photo_height'] : null, ","          raw['title'] ? raw['title'] : null, ","          raw['description'] ? raw['description'] : null, ","          raw['caption'] ? raw['caption'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          photo_url: this.photoUrl ? this.photoUrl : undefined, ","          thumb_url: this.thumbUrl ? this.thumbUrl : undefined, ","          photo_width: this.photoWidth ? this.photoWidth : undefined, ","          photo_height: this.photoHeight ? this.photoHeight : undefined, ","          title: this.title ? this.title : undefined, ","          description: this.description ? this.description : undefined, ","          caption: this.caption ? this.caption : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultPhoto"],"l":{"3":1,"4":1,"5":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"57":0,"65":0,"73":0,"81":0,"89":0,"97":0,"105":0,"113":0,"121":0,"129":0,"137":0,"146":0,"166":0,"186":0,"190":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultGif.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultGif.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":14},"end":{"line":35,"column":5}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":11},"end":{"line":53,"column":14}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":9},"end":{"line":61,"column":12}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":13},"end":{"line":69,"column":16}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":15},"end":{"line":77,"column":18}}},"6":{"name":"(anonymous_6)","line":85,"loc":{"start":{"line":85,"column":16},"end":{"line":85,"column":19}}},"7":{"name":"(anonymous_7)","line":93,"loc":{"start":{"line":93,"column":15},"end":{"line":93,"column":18}}},"8":{"name":"(anonymous_8)","line":101,"loc":{"start":{"line":101,"column":12},"end":{"line":101,"column":15}}},"9":{"name":"(anonymous_9)","line":109,"loc":{"start":{"line":109,"column":14},"end":{"line":109,"column":17}}},"10":{"name":"(anonymous_10)","line":117,"loc":{"start":{"line":117,"column":18},"end":{"line":117,"column":21}}},"11":{"name":"(anonymous_11)","line":125,"loc":{"start":{"line":125,"column":26},"end":{"line":125,"column":29}}},"12":{"name":"(anonymous_12)","line":134,"loc":{"start":{"line":134,"column":21},"end":{"line":134,"column":27}}},"13":{"name":"(anonymous_13)","line":153,"loc":{"start":{"line":153,"column":12},"end":{"line":153,"column":15}}},"14":{"name":"(anonymous_14)","line":172,"loc":{"start":{"line":172,"column":9},"end":{"line":172,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":36,"column":7},"end":{"line":36,"column":14}},"5":{"start":{"line":37,"column":7},"end":{"line":37,"column":24}},"6":{"start":{"line":38,"column":7},"end":{"line":38,"column":20}},"7":{"start":{"line":39,"column":7},"end":{"line":39,"column":28}},"8":{"start":{"line":40,"column":7},"end":{"line":40,"column":32}},"9":{"start":{"line":41,"column":7},"end":{"line":41,"column":34}},"10":{"start":{"line":42,"column":7},"end":{"line":42,"column":32}},"11":{"start":{"line":43,"column":7},"end":{"line":43,"column":26}},"12":{"start":{"line":44,"column":7},"end":{"line":44,"column":30}},"13":{"start":{"line":45,"column":7},"end":{"line":45,"column":38}},"14":{"start":{"line":46,"column":7},"end":{"line":46,"column":54}},"15":{"start":{"line":54,"column":7},"end":{"line":54,"column":24}},"16":{"start":{"line":62,"column":7},"end":{"line":62,"column":22}},"17":{"start":{"line":70,"column":7},"end":{"line":70,"column":26}},"18":{"start":{"line":78,"column":7},"end":{"line":78,"column":28}},"19":{"start":{"line":86,"column":7},"end":{"line":86,"column":29}},"20":{"start":{"line":94,"column":7},"end":{"line":94,"column":28}},"21":{"start":{"line":102,"column":7},"end":{"line":102,"column":25}},"22":{"start":{"line":110,"column":7},"end":{"line":110,"column":27}},"23":{"start":{"line":118,"column":7},"end":{"line":118,"column":31}},"24":{"start":{"line":126,"column":7},"end":{"line":126,"column":39}},"25":{"start":{"line":135,"column":6},"end":{"line":146,"column":7}},"26":{"start":{"line":154,"column":6},"end":{"line":165,"column":7}},"27":{"start":{"line":173,"column":6},"end":{"line":173,"column":29}},"28":{"start":{"line":177,"column":0},"end":{"line":177,"column":37}}},"branchMap":{"1":{"line":139,"type":"cond-expr","locations":[{"start":{"line":139,"column":29},"end":{"line":139,"column":45}},{"start":{"line":139,"column":48},"end":{"line":139,"column":52}}]},"2":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":30},"end":{"line":140,"column":47}},{"start":{"line":140,"column":50},"end":{"line":140,"column":54}}]},"3":{"line":142,"type":"cond-expr","locations":[{"start":{"line":142,"column":25},"end":{"line":142,"column":37}},{"start":{"line":142,"column":40},"end":{"line":142,"column":44}}]},"4":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":27},"end":{"line":143,"column":41}},{"start":{"line":143,"column":44},"end":{"line":143,"column":48}}]},"5":{"line":144,"type":"cond-expr","locations":[{"start":{"line":144,"column":32},"end":{"line":144,"column":85}},{"start":{"line":144,"column":88},"end":{"line":144,"column":92}}]},"6":{"line":145,"type":"cond-expr","locations":[{"start":{"line":145,"column":41},"end":{"line":145,"column":102}},{"start":{"line":145,"column":105},"end":{"line":145,"column":109}}]},"7":{"line":155,"type":"cond-expr","locations":[{"start":{"line":155,"column":28},"end":{"line":155,"column":37}},{"start":{"line":155,"column":40},"end":{"line":155,"column":49}}]},"8":{"line":156,"type":"cond-expr","locations":[{"start":{"line":156,"column":24},"end":{"line":156,"column":31}},{"start":{"line":156,"column":34},"end":{"line":156,"column":43}}]},"9":{"line":157,"type":"cond-expr","locations":[{"start":{"line":157,"column":33},"end":{"line":157,"column":44}},{"start":{"line":157,"column":47},"end":{"line":157,"column":56}}]},"10":{"line":158,"type":"cond-expr","locations":[{"start":{"line":158,"column":37},"end":{"line":158,"column":50}},{"start":{"line":158,"column":53},"end":{"line":158,"column":62}}]},"11":{"line":159,"type":"cond-expr","locations":[{"start":{"line":159,"column":39},"end":{"line":159,"column":53}},{"start":{"line":159,"column":56},"end":{"line":159,"column":65}}]},"12":{"line":160,"type":"cond-expr","locations":[{"start":{"line":160,"column":37},"end":{"line":160,"column":50}},{"start":{"line":160,"column":53},"end":{"line":160,"column":62}}]},"13":{"line":161,"type":"cond-expr","locations":[{"start":{"line":161,"column":30},"end":{"line":161,"column":40}},{"start":{"line":161,"column":43},"end":{"line":161,"column":52}}]},"14":{"line":162,"type":"cond-expr","locations":[{"start":{"line":162,"column":34},"end":{"line":162,"column":46}},{"start":{"line":162,"column":49},"end":{"line":162,"column":58}}]},"15":{"line":163,"type":"cond-expr","locations":[{"start":{"line":163,"column":43},"end":{"line":163,"column":71}},{"start":{"line":163,"column":74},"end":{"line":163,"column":83}}]},"16":{"line":164,"type":"cond-expr","locations":[{"start":{"line":164,"column":60},"end":{"line":164,"column":96}},{"start":{"line":164,"column":99},"end":{"line":164,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to an animated GIF file. By default, this animated GIF file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation."," */","","class InlineQueryResultGif extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} gifUrl","    * @param {number|null} [gifWidth]","    * @param {number|null} [gifHeight]","    * @param {string} thumbUrl","    * @param {string|null} [title]","    * @param {string|null} [caption]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(","     type, ","     id, ","     gifUrl, ","     gifWidth, ","     gifHeight, ","     thumbUrl, ","     title, ","     caption, ","     replyMarkup, ","     inputMessageContent","   ) {","       super()","       this._type = type","       this._id = id","       this._gifUrl = gifUrl","       this._gifWidth = gifWidth","       this._gifHeight = gifHeight","       this._thumbUrl = thumbUrl","       this._title = title","       this._caption = caption","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be gif","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * A valid URL for the GIF file. File size must not exceed 1MB","    * @returns {string}","   */","   get gifUrl() {","       return this._gifUrl","   }","","   /**","    * Width of the GIF","    * @returns {number|null}","   */","   get gifWidth() {","       return this._gifWidth","   }","","   /**","    * Height of the GIF","    * @returns {number|null}","   */","   get gifHeight() {","       return this._gifHeight","   }","","   /**","    * URL of the static thumbnail for the result (jpeg or gif)","    * @returns {string}","   */","   get thumbUrl() {","       return this._thumbUrl","   }","","   /**","    * Title for the result","    * @returns {string|null}","   */","   get title() {","       return this._title","   }","","   /**","    * Caption of the GIF file to be sent, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the GIF animation","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultGif}","    */","   static deserialize(raw) {","      return new InlineQueryResultGif(","          raw['type'], ","          raw['id'], ","          raw['gif_url'], ","          raw['gif_width'] ? raw['gif_width'] : null, ","          raw['gif_height'] ? raw['gif_height'] : null, ","          raw['thumb_url'], ","          raw['title'] ? raw['title'] : null, ","          raw['caption'] ? raw['caption'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          gif_url: this.gifUrl ? this.gifUrl : undefined, ","          gif_width: this.gifWidth ? this.gifWidth : undefined, ","          gif_height: this.gifHeight ? this.gifHeight : undefined, ","          thumb_url: this.thumbUrl ? this.thumbUrl : undefined, ","          title: this.title ? this.title : undefined, ","          caption: this.caption ? this.caption : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultGif"],"l":{"3":1,"4":1,"5":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"54":0,"62":0,"70":0,"78":0,"86":0,"94":0,"102":0,"110":0,"118":0,"126":0,"135":0,"154":0,"173":0,"177":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultMpeg4Gif.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultMpeg4Gif.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":14},"end":{"line":35,"column":5}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":11},"end":{"line":53,"column":14}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":9},"end":{"line":61,"column":12}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":15},"end":{"line":69,"column":18}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":17},"end":{"line":77,"column":20}}},"6":{"name":"(anonymous_6)","line":85,"loc":{"start":{"line":85,"column":18},"end":{"line":85,"column":21}}},"7":{"name":"(anonymous_7)","line":93,"loc":{"start":{"line":93,"column":15},"end":{"line":93,"column":18}}},"8":{"name":"(anonymous_8)","line":101,"loc":{"start":{"line":101,"column":12},"end":{"line":101,"column":15}}},"9":{"name":"(anonymous_9)","line":109,"loc":{"start":{"line":109,"column":14},"end":{"line":109,"column":17}}},"10":{"name":"(anonymous_10)","line":117,"loc":{"start":{"line":117,"column":18},"end":{"line":117,"column":21}}},"11":{"name":"(anonymous_11)","line":125,"loc":{"start":{"line":125,"column":26},"end":{"line":125,"column":29}}},"12":{"name":"(anonymous_12)","line":134,"loc":{"start":{"line":134,"column":21},"end":{"line":134,"column":27}}},"13":{"name":"(anonymous_13)","line":153,"loc":{"start":{"line":153,"column":12},"end":{"line":153,"column":15}}},"14":{"name":"(anonymous_14)","line":172,"loc":{"start":{"line":172,"column":9},"end":{"line":172,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":36,"column":7},"end":{"line":36,"column":14}},"5":{"start":{"line":37,"column":7},"end":{"line":37,"column":24}},"6":{"start":{"line":38,"column":7},"end":{"line":38,"column":20}},"7":{"start":{"line":39,"column":7},"end":{"line":39,"column":32}},"8":{"start":{"line":40,"column":7},"end":{"line":40,"column":36}},"9":{"start":{"line":41,"column":7},"end":{"line":41,"column":38}},"10":{"start":{"line":42,"column":7},"end":{"line":42,"column":32}},"11":{"start":{"line":43,"column":7},"end":{"line":43,"column":26}},"12":{"start":{"line":44,"column":7},"end":{"line":44,"column":30}},"13":{"start":{"line":45,"column":7},"end":{"line":45,"column":38}},"14":{"start":{"line":46,"column":7},"end":{"line":46,"column":54}},"15":{"start":{"line":54,"column":7},"end":{"line":54,"column":24}},"16":{"start":{"line":62,"column":7},"end":{"line":62,"column":22}},"17":{"start":{"line":70,"column":7},"end":{"line":70,"column":28}},"18":{"start":{"line":78,"column":7},"end":{"line":78,"column":30}},"19":{"start":{"line":86,"column":7},"end":{"line":86,"column":31}},"20":{"start":{"line":94,"column":7},"end":{"line":94,"column":28}},"21":{"start":{"line":102,"column":7},"end":{"line":102,"column":25}},"22":{"start":{"line":110,"column":7},"end":{"line":110,"column":27}},"23":{"start":{"line":118,"column":7},"end":{"line":118,"column":31}},"24":{"start":{"line":126,"column":7},"end":{"line":126,"column":39}},"25":{"start":{"line":135,"column":6},"end":{"line":146,"column":7}},"26":{"start":{"line":154,"column":6},"end":{"line":165,"column":7}},"27":{"start":{"line":173,"column":6},"end":{"line":173,"column":29}},"28":{"start":{"line":177,"column":0},"end":{"line":177,"column":42}}},"branchMap":{"1":{"line":139,"type":"cond-expr","locations":[{"start":{"line":139,"column":31},"end":{"line":139,"column":49}},{"start":{"line":139,"column":52},"end":{"line":139,"column":56}}]},"2":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":32},"end":{"line":140,"column":51}},{"start":{"line":140,"column":54},"end":{"line":140,"column":58}}]},"3":{"line":142,"type":"cond-expr","locations":[{"start":{"line":142,"column":25},"end":{"line":142,"column":37}},{"start":{"line":142,"column":40},"end":{"line":142,"column":44}}]},"4":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":27},"end":{"line":143,"column":41}},{"start":{"line":143,"column":44},"end":{"line":143,"column":48}}]},"5":{"line":144,"type":"cond-expr","locations":[{"start":{"line":144,"column":32},"end":{"line":144,"column":85}},{"start":{"line":144,"column":88},"end":{"line":144,"column":92}}]},"6":{"line":145,"type":"cond-expr","locations":[{"start":{"line":145,"column":41},"end":{"line":145,"column":102}},{"start":{"line":145,"column":105},"end":{"line":145,"column":109}}]},"7":{"line":155,"type":"cond-expr","locations":[{"start":{"line":155,"column":28},"end":{"line":155,"column":37}},{"start":{"line":155,"column":40},"end":{"line":155,"column":49}}]},"8":{"line":156,"type":"cond-expr","locations":[{"start":{"line":156,"column":24},"end":{"line":156,"column":31}},{"start":{"line":156,"column":34},"end":{"line":156,"column":43}}]},"9":{"line":157,"type":"cond-expr","locations":[{"start":{"line":157,"column":37},"end":{"line":157,"column":50}},{"start":{"line":157,"column":53},"end":{"line":157,"column":62}}]},"10":{"line":158,"type":"cond-expr","locations":[{"start":{"line":158,"column":41},"end":{"line":158,"column":56}},{"start":{"line":158,"column":59},"end":{"line":158,"column":68}}]},"11":{"line":159,"type":"cond-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":59}},{"start":{"line":159,"column":62},"end":{"line":159,"column":71}}]},"12":{"line":160,"type":"cond-expr","locations":[{"start":{"line":160,"column":37},"end":{"line":160,"column":50}},{"start":{"line":160,"column":53},"end":{"line":160,"column":62}}]},"13":{"line":161,"type":"cond-expr","locations":[{"start":{"line":161,"column":30},"end":{"line":161,"column":40}},{"start":{"line":161,"column":43},"end":{"line":161,"column":52}}]},"14":{"line":162,"type":"cond-expr","locations":[{"start":{"line":162,"column":34},"end":{"line":162,"column":46}},{"start":{"line":162,"column":49},"end":{"line":162,"column":58}}]},"15":{"line":163,"type":"cond-expr","locations":[{"start":{"line":163,"column":43},"end":{"line":163,"column":71}},{"start":{"line":163,"column":74},"end":{"line":163,"column":83}}]},"16":{"line":164,"type":"cond-expr","locations":[{"start":{"line":164,"column":60},"end":{"line":164,"column":96}},{"start":{"line":164,"column":99},"end":{"line":164,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to a video animation (H.264/MPEG-4 AVC video without sound). By default, this animated MPEG-4 file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation."," */","","class InlineQueryResultMpeg4Gif extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} mpeg4Url","    * @param {number|null} [mpeg4Width]","    * @param {number|null} [mpeg4Height]","    * @param {string} thumbUrl","    * @param {string|null} [title]","    * @param {string|null} [caption]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(","     type, ","     id, ","     mpeg4Url, ","     mpeg4Width, ","     mpeg4Height, ","     thumbUrl, ","     title, ","     caption, ","     replyMarkup, ","     inputMessageContent","   ) {","       super()","       this._type = type","       this._id = id","       this._mpeg4Url = mpeg4Url","       this._mpeg4Width = mpeg4Width","       this._mpeg4Height = mpeg4Height","       this._thumbUrl = thumbUrl","       this._title = title","       this._caption = caption","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be mpeg4_gif","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * A valid URL for the MP4 file. File size must not exceed 1MB","    * @returns {string}","   */","   get mpeg4Url() {","       return this._mpeg4Url","   }","","   /**","    * Video width","    * @returns {number|null}","   */","   get mpeg4Width() {","       return this._mpeg4Width","   }","","   /**","    * Video height","    * @returns {number|null}","   */","   get mpeg4Height() {","       return this._mpeg4Height","   }","","   /**","    * URL of the static thumbnail (jpeg or gif) for the result","    * @returns {string}","   */","   get thumbUrl() {","       return this._thumbUrl","   }","","   /**","    * Title for the result","    * @returns {string|null}","   */","   get title() {","       return this._title","   }","","   /**","    * Caption of the MPEG-4 file to be sent, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the video animation","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultMpeg4Gif}","    */","   static deserialize(raw) {","      return new InlineQueryResultMpeg4Gif(","          raw['type'], ","          raw['id'], ","          raw['mpeg4_url'], ","          raw['mpeg4_width'] ? raw['mpeg4_width'] : null, ","          raw['mpeg4_height'] ? raw['mpeg4_height'] : null, ","          raw['thumb_url'], ","          raw['title'] ? raw['title'] : null, ","          raw['caption'] ? raw['caption'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          mpeg4_url: this.mpeg4Url ? this.mpeg4Url : undefined, ","          mpeg4_width: this.mpeg4Width ? this.mpeg4Width : undefined, ","          mpeg4_height: this.mpeg4Height ? this.mpeg4Height : undefined, ","          thumb_url: this.thumbUrl ? this.thumbUrl : undefined, ","          title: this.title ? this.title : undefined, ","          caption: this.caption ? this.caption : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultMpeg4Gif"],"l":{"3":1,"4":1,"5":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"54":0,"62":0,"70":0,"78":0,"86":0,"94":0,"102":0,"110":0,"118":0,"126":0,"135":0,"154":0,"173":0,"177":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultVideo.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultVideo.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":27,"loc":{"start":{"line":27,"column":14},"end":{"line":41,"column":5}}},"2":{"name":"(anonymous_2)","line":62,"loc":{"start":{"line":62,"column":11},"end":{"line":62,"column":14}}},"3":{"name":"(anonymous_3)","line":70,"loc":{"start":{"line":70,"column":9},"end":{"line":70,"column":12}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":15},"end":{"line":78,"column":18}}},"5":{"name":"(anonymous_5)","line":86,"loc":{"start":{"line":86,"column":15},"end":{"line":86,"column":18}}},"6":{"name":"(anonymous_6)","line":94,"loc":{"start":{"line":94,"column":15},"end":{"line":94,"column":18}}},"7":{"name":"(anonymous_7)","line":102,"loc":{"start":{"line":102,"column":12},"end":{"line":102,"column":15}}},"8":{"name":"(anonymous_8)","line":110,"loc":{"start":{"line":110,"column":14},"end":{"line":110,"column":17}}},"9":{"name":"(anonymous_9)","line":118,"loc":{"start":{"line":118,"column":17},"end":{"line":118,"column":20}}},"10":{"name":"(anonymous_10)","line":126,"loc":{"start":{"line":126,"column":18},"end":{"line":126,"column":21}}},"11":{"name":"(anonymous_11)","line":134,"loc":{"start":{"line":134,"column":20},"end":{"line":134,"column":23}}},"12":{"name":"(anonymous_12)","line":142,"loc":{"start":{"line":142,"column":18},"end":{"line":142,"column":21}}},"13":{"name":"(anonymous_13)","line":150,"loc":{"start":{"line":150,"column":18},"end":{"line":150,"column":21}}},"14":{"name":"(anonymous_14)","line":158,"loc":{"start":{"line":158,"column":26},"end":{"line":158,"column":29}}},"15":{"name":"(anonymous_15)","line":167,"loc":{"start":{"line":167,"column":21},"end":{"line":167,"column":27}}},"16":{"name":"(anonymous_16)","line":189,"loc":{"start":{"line":189,"column":12},"end":{"line":189,"column":15}}},"17":{"name":"(anonymous_17)","line":211,"loc":{"start":{"line":211,"column":9},"end":{"line":211,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":42,"column":7},"end":{"line":42,"column":14}},"5":{"start":{"line":43,"column":7},"end":{"line":43,"column":24}},"6":{"start":{"line":44,"column":7},"end":{"line":44,"column":20}},"7":{"start":{"line":45,"column":7},"end":{"line":45,"column":32}},"8":{"start":{"line":46,"column":7},"end":{"line":46,"column":32}},"9":{"start":{"line":47,"column":7},"end":{"line":47,"column":32}},"10":{"start":{"line":48,"column":7},"end":{"line":48,"column":26}},"11":{"start":{"line":49,"column":7},"end":{"line":49,"column":30}},"12":{"start":{"line":50,"column":7},"end":{"line":50,"column":36}},"13":{"start":{"line":51,"column":7},"end":{"line":51,"column":38}},"14":{"start":{"line":52,"column":7},"end":{"line":52,"column":42}},"15":{"start":{"line":53,"column":7},"end":{"line":53,"column":38}},"16":{"start":{"line":54,"column":7},"end":{"line":54,"column":38}},"17":{"start":{"line":55,"column":7},"end":{"line":55,"column":54}},"18":{"start":{"line":63,"column":7},"end":{"line":63,"column":24}},"19":{"start":{"line":71,"column":7},"end":{"line":71,"column":22}},"20":{"start":{"line":79,"column":7},"end":{"line":79,"column":28}},"21":{"start":{"line":87,"column":7},"end":{"line":87,"column":28}},"22":{"start":{"line":95,"column":7},"end":{"line":95,"column":28}},"23":{"start":{"line":103,"column":7},"end":{"line":103,"column":25}},"24":{"start":{"line":111,"column":7},"end":{"line":111,"column":27}},"25":{"start":{"line":119,"column":7},"end":{"line":119,"column":30}},"26":{"start":{"line":127,"column":7},"end":{"line":127,"column":31}},"27":{"start":{"line":135,"column":7},"end":{"line":135,"column":33}},"28":{"start":{"line":143,"column":7},"end":{"line":143,"column":31}},"29":{"start":{"line":151,"column":7},"end":{"line":151,"column":31}},"30":{"start":{"line":159,"column":7},"end":{"line":159,"column":39}},"31":{"start":{"line":168,"column":6},"end":{"line":182,"column":7}},"32":{"start":{"line":190,"column":6},"end":{"line":204,"column":7}},"33":{"start":{"line":212,"column":6},"end":{"line":212,"column":29}},"34":{"start":{"line":216,"column":0},"end":{"line":216,"column":39}}},"branchMap":{"1":{"line":175,"type":"cond-expr","locations":[{"start":{"line":175,"column":27},"end":{"line":175,"column":41}},{"start":{"line":175,"column":44},"end":{"line":175,"column":48}}]},"2":{"line":176,"type":"cond-expr","locations":[{"start":{"line":176,"column":31},"end":{"line":176,"column":49}},{"start":{"line":176,"column":52},"end":{"line":176,"column":56}}]},"3":{"line":177,"type":"cond-expr","locations":[{"start":{"line":177,"column":32},"end":{"line":177,"column":51}},{"start":{"line":177,"column":54},"end":{"line":177,"column":58}}]},"4":{"line":178,"type":"cond-expr","locations":[{"start":{"line":178,"column":34},"end":{"line":178,"column":55}},{"start":{"line":178,"column":58},"end":{"line":178,"column":62}}]},"5":{"line":179,"type":"cond-expr","locations":[{"start":{"line":179,"column":31},"end":{"line":179,"column":49}},{"start":{"line":179,"column":52},"end":{"line":179,"column":56}}]},"6":{"line":180,"type":"cond-expr","locations":[{"start":{"line":180,"column":32},"end":{"line":180,"column":85}},{"start":{"line":180,"column":88},"end":{"line":180,"column":92}}]},"7":{"line":181,"type":"cond-expr","locations":[{"start":{"line":181,"column":41},"end":{"line":181,"column":102}},{"start":{"line":181,"column":105},"end":{"line":181,"column":109}}]},"8":{"line":191,"type":"cond-expr","locations":[{"start":{"line":191,"column":28},"end":{"line":191,"column":37}},{"start":{"line":191,"column":40},"end":{"line":191,"column":49}}]},"9":{"line":192,"type":"cond-expr","locations":[{"start":{"line":192,"column":24},"end":{"line":192,"column":31}},{"start":{"line":192,"column":34},"end":{"line":192,"column":43}}]},"10":{"line":193,"type":"cond-expr","locations":[{"start":{"line":193,"column":37},"end":{"line":193,"column":50}},{"start":{"line":193,"column":53},"end":{"line":193,"column":62}}]},"11":{"line":194,"type":"cond-expr","locations":[{"start":{"line":194,"column":37},"end":{"line":194,"column":50}},{"start":{"line":194,"column":53},"end":{"line":194,"column":62}}]},"12":{"line":195,"type":"cond-expr","locations":[{"start":{"line":195,"column":37},"end":{"line":195,"column":50}},{"start":{"line":195,"column":53},"end":{"line":195,"column":62}}]},"13":{"line":196,"type":"cond-expr","locations":[{"start":{"line":196,"column":30},"end":{"line":196,"column":40}},{"start":{"line":196,"column":43},"end":{"line":196,"column":52}}]},"14":{"line":197,"type":"cond-expr","locations":[{"start":{"line":197,"column":34},"end":{"line":197,"column":46}},{"start":{"line":197,"column":49},"end":{"line":197,"column":58}}]},"15":{"line":198,"type":"cond-expr","locations":[{"start":{"line":198,"column":41},"end":{"line":198,"column":56}},{"start":{"line":198,"column":59},"end":{"line":198,"column":68}}]},"16":{"line":199,"type":"cond-expr","locations":[{"start":{"line":199,"column":43},"end":{"line":199,"column":59}},{"start":{"line":199,"column":62},"end":{"line":199,"column":71}}]},"17":{"line":200,"type":"cond-expr","locations":[{"start":{"line":200,"column":47},"end":{"line":200,"column":65}},{"start":{"line":200,"column":68},"end":{"line":200,"column":77}}]},"18":{"line":201,"type":"cond-expr","locations":[{"start":{"line":201,"column":42},"end":{"line":201,"column":58}},{"start":{"line":201,"column":61},"end":{"line":201,"column":70}}]},"19":{"line":202,"type":"cond-expr","locations":[{"start":{"line":202,"column":43},"end":{"line":202,"column":71}},{"start":{"line":202,"column":74},"end":{"line":202,"column":83}}]},"20":{"line":203,"type":"cond-expr","locations":[{"start":{"line":203,"column":60},"end":{"line":203,"column":96}},{"start":{"line":203,"column":99},"end":{"line":203,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to a page containing an embedded video player or a video file. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video."," */","","class InlineQueryResultVideo extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} videoUrl","    * @param {string} mimeType","    * @param {string} thumbUrl","    * @param {string} title","    * @param {string|null} [caption]","    * @param {number|null} [videoWidth]","    * @param {number|null} [videoHeight]","    * @param {number|null} [videoDuration]","    * @param {string|null} [description]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(","     type, ","     id, ","     videoUrl, ","     mimeType, ","     thumbUrl, ","     title, ","     caption, ","     videoWidth, ","     videoHeight, ","     videoDuration, ","     description, ","     replyMarkup, ","     inputMessageContent","   ) {","       super()","       this._type = type","       this._id = id","       this._videoUrl = videoUrl","       this._mimeType = mimeType","       this._thumbUrl = thumbUrl","       this._title = title","       this._caption = caption","       this._videoWidth = videoWidth","       this._videoHeight = videoHeight","       this._videoDuration = videoDuration","       this._description = description","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be video","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * A valid URL for the embedded video player or video file","    * @returns {string}","   */","   get videoUrl() {","       return this._videoUrl","   }","","   /**","    * Mime type of the content of video url, “text/html” or “video/mp4”","    * @returns {string}","   */","   get mimeType() {","       return this._mimeType","   }","","   /**","    * URL of the thumbnail (jpeg only) for the video","    * @returns {string}","   */","   get thumbUrl() {","       return this._thumbUrl","   }","","   /**","    * Title for the result","    * @returns {string}","   */","   get title() {","       return this._title","   }","","   /**","    * Caption of the video to be sent, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Video width","    * @returns {number|null}","   */","   get videoWidth() {","       return this._videoWidth","   }","","   /**","    * Video height","    * @returns {number|null}","   */","   get videoHeight() {","       return this._videoHeight","   }","","   /**","    * Video duration in seconds","    * @returns {number|null}","   */","   get videoDuration() {","       return this._videoDuration","   }","","   /**","    * Short description of the result","    * @returns {string|null}","   */","   get description() {","       return this._description","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the video","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultVideo}","    */","   static deserialize(raw) {","      return new InlineQueryResultVideo(","          raw['type'], ","          raw['id'], ","          raw['video_url'], ","          raw['mime_type'], ","          raw['thumb_url'], ","          raw['title'], ","          raw['caption'] ? raw['caption'] : null, ","          raw['video_width'] ? raw['video_width'] : null, ","          raw['video_height'] ? raw['video_height'] : null, ","          raw['video_duration'] ? raw['video_duration'] : null, ","          raw['description'] ? raw['description'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          video_url: this.videoUrl ? this.videoUrl : undefined, ","          mime_type: this.mimeType ? this.mimeType : undefined, ","          thumb_url: this.thumbUrl ? this.thumbUrl : undefined, ","          title: this.title ? this.title : undefined, ","          caption: this.caption ? this.caption : undefined, ","          video_width: this.videoWidth ? this.videoWidth : undefined, ","          video_height: this.videoHeight ? this.videoHeight : undefined, ","          video_duration: this.videoDuration ? this.videoDuration : undefined, ","          description: this.description ? this.description : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultVideo"],"l":{"3":1,"4":1,"5":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"63":0,"71":0,"79":0,"87":0,"95":0,"103":0,"111":0,"119":0,"127":0,"135":0,"143":0,"151":0,"159":0,"168":0,"190":0,"212":0,"216":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultAudio.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultAudio.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":23,"loc":{"start":{"line":23,"column":14},"end":{"line":33,"column":5}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":11},"end":{"line":50,"column":14}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":9},"end":{"line":58,"column":12}}},"4":{"name":"(anonymous_4)","line":66,"loc":{"start":{"line":66,"column":15},"end":{"line":66,"column":18}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":12},"end":{"line":74,"column":15}}},"6":{"name":"(anonymous_6)","line":82,"loc":{"start":{"line":82,"column":14},"end":{"line":82,"column":17}}},"7":{"name":"(anonymous_7)","line":90,"loc":{"start":{"line":90,"column":16},"end":{"line":90,"column":19}}},"8":{"name":"(anonymous_8)","line":98,"loc":{"start":{"line":98,"column":20},"end":{"line":98,"column":23}}},"9":{"name":"(anonymous_9)","line":106,"loc":{"start":{"line":106,"column":18},"end":{"line":106,"column":21}}},"10":{"name":"(anonymous_10)","line":114,"loc":{"start":{"line":114,"column":26},"end":{"line":114,"column":29}}},"11":{"name":"(anonymous_11)","line":123,"loc":{"start":{"line":123,"column":21},"end":{"line":123,"column":27}}},"12":{"name":"(anonymous_12)","line":141,"loc":{"start":{"line":141,"column":12},"end":{"line":141,"column":15}}},"13":{"name":"(anonymous_13)","line":159,"loc":{"start":{"line":159,"column":9},"end":{"line":159,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":34,"column":7},"end":{"line":34,"column":14}},"5":{"start":{"line":35,"column":7},"end":{"line":35,"column":24}},"6":{"start":{"line":36,"column":7},"end":{"line":36,"column":20}},"7":{"start":{"line":37,"column":7},"end":{"line":37,"column":32}},"8":{"start":{"line":38,"column":7},"end":{"line":38,"column":26}},"9":{"start":{"line":39,"column":7},"end":{"line":39,"column":30}},"10":{"start":{"line":40,"column":7},"end":{"line":40,"column":34}},"11":{"start":{"line":41,"column":7},"end":{"line":41,"column":42}},"12":{"start":{"line":42,"column":7},"end":{"line":42,"column":38}},"13":{"start":{"line":43,"column":7},"end":{"line":43,"column":54}},"14":{"start":{"line":51,"column":7},"end":{"line":51,"column":24}},"15":{"start":{"line":59,"column":7},"end":{"line":59,"column":22}},"16":{"start":{"line":67,"column":7},"end":{"line":67,"column":28}},"17":{"start":{"line":75,"column":7},"end":{"line":75,"column":25}},"18":{"start":{"line":83,"column":7},"end":{"line":83,"column":27}},"19":{"start":{"line":91,"column":7},"end":{"line":91,"column":29}},"20":{"start":{"line":99,"column":7},"end":{"line":99,"column":33}},"21":{"start":{"line":107,"column":7},"end":{"line":107,"column":31}},"22":{"start":{"line":115,"column":7},"end":{"line":115,"column":39}},"23":{"start":{"line":124,"column":6},"end":{"line":134,"column":7}},"24":{"start":{"line":142,"column":6},"end":{"line":152,"column":7}},"25":{"start":{"line":160,"column":6},"end":{"line":160,"column":29}},"26":{"start":{"line":164,"column":0},"end":{"line":164,"column":39}}},"branchMap":{"1":{"line":129,"type":"cond-expr","locations":[{"start":{"line":129,"column":27},"end":{"line":129,"column":41}},{"start":{"line":129,"column":44},"end":{"line":129,"column":48}}]},"2":{"line":130,"type":"cond-expr","locations":[{"start":{"line":130,"column":29},"end":{"line":130,"column":45}},{"start":{"line":130,"column":48},"end":{"line":130,"column":52}}]},"3":{"line":131,"type":"cond-expr","locations":[{"start":{"line":131,"column":34},"end":{"line":131,"column":55}},{"start":{"line":131,"column":58},"end":{"line":131,"column":62}}]},"4":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":32},"end":{"line":132,"column":85}},{"start":{"line":132,"column":88},"end":{"line":132,"column":92}}]},"5":{"line":133,"type":"cond-expr","locations":[{"start":{"line":133,"column":41},"end":{"line":133,"column":102}},{"start":{"line":133,"column":105},"end":{"line":133,"column":109}}]},"6":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":28},"end":{"line":143,"column":37}},{"start":{"line":143,"column":40},"end":{"line":143,"column":49}}]},"7":{"line":144,"type":"cond-expr","locations":[{"start":{"line":144,"column":24},"end":{"line":144,"column":31}},{"start":{"line":144,"column":34},"end":{"line":144,"column":43}}]},"8":{"line":145,"type":"cond-expr","locations":[{"start":{"line":145,"column":37},"end":{"line":145,"column":50}},{"start":{"line":145,"column":53},"end":{"line":145,"column":62}}]},"9":{"line":146,"type":"cond-expr","locations":[{"start":{"line":146,"column":30},"end":{"line":146,"column":40}},{"start":{"line":146,"column":43},"end":{"line":146,"column":52}}]},"10":{"line":147,"type":"cond-expr","locations":[{"start":{"line":147,"column":34},"end":{"line":147,"column":46}},{"start":{"line":147,"column":49},"end":{"line":147,"column":58}}]},"11":{"line":148,"type":"cond-expr","locations":[{"start":{"line":148,"column":38},"end":{"line":148,"column":52}},{"start":{"line":148,"column":55},"end":{"line":148,"column":64}}]},"12":{"line":149,"type":"cond-expr","locations":[{"start":{"line":149,"column":47},"end":{"line":149,"column":65}},{"start":{"line":149,"column":68},"end":{"line":149,"column":77}}]},"13":{"line":150,"type":"cond-expr","locations":[{"start":{"line":150,"column":43},"end":{"line":150,"column":71}},{"start":{"line":150,"column":74},"end":{"line":150,"column":83}}]},"14":{"line":151,"type":"cond-expr","locations":[{"start":{"line":151,"column":60},"end":{"line":151,"column":96}},{"start":{"line":151,"column":99},"end":{"line":151,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to an mp3 audio file. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio."," */","","class InlineQueryResultAudio extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} audioUrl","    * @param {string} title","    * @param {string|null} [caption]","    * @param {string|null} [performer]","    * @param {number|null} [audioDuration]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(","     type, ","     id, ","     audioUrl, ","     title, ","     caption, ","     performer, ","     audioDuration, ","     replyMarkup, ","     inputMessageContent","   ) {","       super()","       this._type = type","       this._id = id","       this._audioUrl = audioUrl","       this._title = title","       this._caption = caption","       this._performer = performer","       this._audioDuration = audioDuration","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be audio","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * A valid URL for the audio file","    * @returns {string}","   */","   get audioUrl() {","       return this._audioUrl","   }","","   /**","    * Title","    * @returns {string}","   */","   get title() {","       return this._title","   }","","   /**","    * Caption, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Performer","    * @returns {string|null}","   */","   get performer() {","       return this._performer","   }","","   /**","    * Audio duration in seconds","    * @returns {number|null}","   */","   get audioDuration() {","       return this._audioDuration","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the audio","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultAudio}","    */","   static deserialize(raw) {","      return new InlineQueryResultAudio(","          raw['type'], ","          raw['id'], ","          raw['audio_url'], ","          raw['title'], ","          raw['caption'] ? raw['caption'] : null, ","          raw['performer'] ? raw['performer'] : null, ","          raw['audio_duration'] ? raw['audio_duration'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          audio_url: this.audioUrl ? this.audioUrl : undefined, ","          title: this.title ? this.title : undefined, ","          caption: this.caption ? this.caption : undefined, ","          performer: this.performer ? this.performer : undefined, ","          audio_duration: this.audioDuration ? this.audioDuration : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultAudio"],"l":{"3":1,"4":1,"5":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"51":0,"59":0,"67":0,"75":0,"83":0,"91":0,"99":0,"107":0,"115":0,"124":0,"142":0,"160":0,"164":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultVoice.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultVoice.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":14},"end":{"line":31,"column":5}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":11},"end":{"line":47,"column":14}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":9},"end":{"line":55,"column":12}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":15},"end":{"line":63,"column":18}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":12},"end":{"line":71,"column":15}}},"6":{"name":"(anonymous_6)","line":79,"loc":{"start":{"line":79,"column":14},"end":{"line":79,"column":17}}},"7":{"name":"(anonymous_7)","line":87,"loc":{"start":{"line":87,"column":20},"end":{"line":87,"column":23}}},"8":{"name":"(anonymous_8)","line":95,"loc":{"start":{"line":95,"column":18},"end":{"line":95,"column":21}}},"9":{"name":"(anonymous_9)","line":103,"loc":{"start":{"line":103,"column":26},"end":{"line":103,"column":29}}},"10":{"name":"(anonymous_10)","line":112,"loc":{"start":{"line":112,"column":21},"end":{"line":112,"column":27}}},"11":{"name":"(anonymous_11)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":15}}},"12":{"name":"(anonymous_12)","line":146,"loc":{"start":{"line":146,"column":9},"end":{"line":146,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":32,"column":7},"end":{"line":32,"column":14}},"5":{"start":{"line":33,"column":7},"end":{"line":33,"column":24}},"6":{"start":{"line":34,"column":7},"end":{"line":34,"column":20}},"7":{"start":{"line":35,"column":7},"end":{"line":35,"column":32}},"8":{"start":{"line":36,"column":7},"end":{"line":36,"column":26}},"9":{"start":{"line":37,"column":7},"end":{"line":37,"column":30}},"10":{"start":{"line":38,"column":7},"end":{"line":38,"column":42}},"11":{"start":{"line":39,"column":7},"end":{"line":39,"column":38}},"12":{"start":{"line":40,"column":7},"end":{"line":40,"column":54}},"13":{"start":{"line":48,"column":7},"end":{"line":48,"column":24}},"14":{"start":{"line":56,"column":7},"end":{"line":56,"column":22}},"15":{"start":{"line":64,"column":7},"end":{"line":64,"column":28}},"16":{"start":{"line":72,"column":7},"end":{"line":72,"column":25}},"17":{"start":{"line":80,"column":7},"end":{"line":80,"column":27}},"18":{"start":{"line":88,"column":7},"end":{"line":88,"column":33}},"19":{"start":{"line":96,"column":7},"end":{"line":96,"column":31}},"20":{"start":{"line":104,"column":7},"end":{"line":104,"column":39}},"21":{"start":{"line":113,"column":6},"end":{"line":122,"column":7}},"22":{"start":{"line":130,"column":6},"end":{"line":139,"column":7}},"23":{"start":{"line":147,"column":6},"end":{"line":147,"column":29}},"24":{"start":{"line":151,"column":0},"end":{"line":151,"column":39}}},"branchMap":{"1":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":27},"end":{"line":118,"column":41}},{"start":{"line":118,"column":44},"end":{"line":118,"column":48}}]},"2":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":34},"end":{"line":119,"column":55}},{"start":{"line":119,"column":58},"end":{"line":119,"column":62}}]},"3":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":32},"end":{"line":120,"column":85}},{"start":{"line":120,"column":88},"end":{"line":120,"column":92}}]},"4":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":41},"end":{"line":121,"column":102}},{"start":{"line":121,"column":105},"end":{"line":121,"column":109}}]},"5":{"line":131,"type":"cond-expr","locations":[{"start":{"line":131,"column":28},"end":{"line":131,"column":37}},{"start":{"line":131,"column":40},"end":{"line":131,"column":49}}]},"6":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":24},"end":{"line":132,"column":31}},{"start":{"line":132,"column":34},"end":{"line":132,"column":43}}]},"7":{"line":133,"type":"cond-expr","locations":[{"start":{"line":133,"column":37},"end":{"line":133,"column":50}},{"start":{"line":133,"column":53},"end":{"line":133,"column":62}}]},"8":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":30},"end":{"line":134,"column":40}},{"start":{"line":134,"column":43},"end":{"line":134,"column":52}}]},"9":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":34},"end":{"line":135,"column":46}},{"start":{"line":135,"column":49},"end":{"line":135,"column":58}}]},"10":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":47},"end":{"line":136,"column":65}},{"start":{"line":136,"column":68},"end":{"line":136,"column":77}}]},"11":{"line":137,"type":"cond-expr","locations":[{"start":{"line":137,"column":43},"end":{"line":137,"column":71}},{"start":{"line":137,"column":74},"end":{"line":137,"column":83}}]},"12":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":60},"end":{"line":138,"column":96}},{"start":{"line":138,"column":99},"end":{"line":138,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to a voice recording in an .ogg container encoded with OPUS. By default, this voice recording will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the the voice message."," */","","class InlineQueryResultVoice extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} voiceUrl","    * @param {string} title","    * @param {string|null} [caption]","    * @param {number|null} [voiceDuration]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(","     type, ","     id, ","     voiceUrl, ","     title, ","     caption, ","     voiceDuration, ","     replyMarkup, ","     inputMessageContent","   ) {","       super()","       this._type = type","       this._id = id","       this._voiceUrl = voiceUrl","       this._title = title","       this._caption = caption","       this._voiceDuration = voiceDuration","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be voice","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * A valid URL for the voice recording","    * @returns {string}","   */","   get voiceUrl() {","       return this._voiceUrl","   }","","   /**","    * Recording title","    * @returns {string}","   */","   get title() {","       return this._title","   }","","   /**","    * Caption, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Recording duration in seconds","    * @returns {number|null}","   */","   get voiceDuration() {","       return this._voiceDuration","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the voice recording","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultVoice}","    */","   static deserialize(raw) {","      return new InlineQueryResultVoice(","          raw['type'], ","          raw['id'], ","          raw['voice_url'], ","          raw['title'], ","          raw['caption'] ? raw['caption'] : null, ","          raw['voice_duration'] ? raw['voice_duration'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          voice_url: this.voiceUrl ? this.voiceUrl : undefined, ","          title: this.title ? this.title : undefined, ","          caption: this.caption ? this.caption : undefined, ","          voice_duration: this.voiceDuration ? this.voiceDuration : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultVoice"],"l":{"3":1,"4":1,"5":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"48":0,"56":0,"64":0,"72":0,"80":0,"88":0,"96":0,"104":0,"113":0,"130":0,"147":0,"151":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultDocument.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultDocument.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":14},"end":{"line":39,"column":5}}},"2":{"name":"(anonymous_2)","line":59,"loc":{"start":{"line":59,"column":11},"end":{"line":59,"column":14}}},"3":{"name":"(anonymous_3)","line":67,"loc":{"start":{"line":67,"column":9},"end":{"line":67,"column":12}}},"4":{"name":"(anonymous_4)","line":75,"loc":{"start":{"line":75,"column":12},"end":{"line":75,"column":15}}},"5":{"name":"(anonymous_5)","line":83,"loc":{"start":{"line":83,"column":14},"end":{"line":83,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":18},"end":{"line":91,"column":21}}},"7":{"name":"(anonymous_7)","line":99,"loc":{"start":{"line":99,"column":15},"end":{"line":99,"column":18}}},"8":{"name":"(anonymous_8)","line":107,"loc":{"start":{"line":107,"column":18},"end":{"line":107,"column":21}}},"9":{"name":"(anonymous_9)","line":115,"loc":{"start":{"line":115,"column":18},"end":{"line":115,"column":21}}},"10":{"name":"(anonymous_10)","line":123,"loc":{"start":{"line":123,"column":26},"end":{"line":123,"column":29}}},"11":{"name":"(anonymous_11)","line":131,"loc":{"start":{"line":131,"column":15},"end":{"line":131,"column":18}}},"12":{"name":"(anonymous_12)","line":139,"loc":{"start":{"line":139,"column":17},"end":{"line":139,"column":20}}},"13":{"name":"(anonymous_13)","line":147,"loc":{"start":{"line":147,"column":18},"end":{"line":147,"column":21}}},"14":{"name":"(anonymous_14)","line":156,"loc":{"start":{"line":156,"column":21},"end":{"line":156,"column":27}}},"15":{"name":"(anonymous_15)","line":177,"loc":{"start":{"line":177,"column":12},"end":{"line":177,"column":15}}},"16":{"name":"(anonymous_16)","line":198,"loc":{"start":{"line":198,"column":9},"end":{"line":198,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":40,"column":7},"end":{"line":40,"column":14}},"5":{"start":{"line":41,"column":7},"end":{"line":41,"column":24}},"6":{"start":{"line":42,"column":7},"end":{"line":42,"column":20}},"7":{"start":{"line":43,"column":7},"end":{"line":43,"column":26}},"8":{"start":{"line":44,"column":7},"end":{"line":44,"column":30}},"9":{"start":{"line":45,"column":7},"end":{"line":45,"column":38}},"10":{"start":{"line":46,"column":7},"end":{"line":46,"column":32}},"11":{"start":{"line":47,"column":7},"end":{"line":47,"column":38}},"12":{"start":{"line":48,"column":7},"end":{"line":48,"column":38}},"13":{"start":{"line":49,"column":7},"end":{"line":49,"column":54}},"14":{"start":{"line":50,"column":7},"end":{"line":50,"column":32}},"15":{"start":{"line":51,"column":7},"end":{"line":51,"column":36}},"16":{"start":{"line":52,"column":7},"end":{"line":52,"column":38}},"17":{"start":{"line":60,"column":7},"end":{"line":60,"column":24}},"18":{"start":{"line":68,"column":7},"end":{"line":68,"column":22}},"19":{"start":{"line":76,"column":7},"end":{"line":76,"column":25}},"20":{"start":{"line":84,"column":7},"end":{"line":84,"column":27}},"21":{"start":{"line":92,"column":7},"end":{"line":92,"column":31}},"22":{"start":{"line":100,"column":7},"end":{"line":100,"column":28}},"23":{"start":{"line":108,"column":7},"end":{"line":108,"column":31}},"24":{"start":{"line":116,"column":7},"end":{"line":116,"column":31}},"25":{"start":{"line":124,"column":7},"end":{"line":124,"column":39}},"26":{"start":{"line":132,"column":7},"end":{"line":132,"column":28}},"27":{"start":{"line":140,"column":7},"end":{"line":140,"column":30}},"28":{"start":{"line":148,"column":7},"end":{"line":148,"column":31}},"29":{"start":{"line":157,"column":6},"end":{"line":170,"column":7}},"30":{"start":{"line":178,"column":6},"end":{"line":191,"column":7}},"31":{"start":{"line":199,"column":6},"end":{"line":199,"column":29}},"32":{"start":{"line":203,"column":0},"end":{"line":203,"column":42}}},"branchMap":{"1":{"line":161,"type":"cond-expr","locations":[{"start":{"line":161,"column":27},"end":{"line":161,"column":41}},{"start":{"line":161,"column":44},"end":{"line":161,"column":48}}]},"2":{"line":164,"type":"cond-expr","locations":[{"start":{"line":164,"column":31},"end":{"line":164,"column":49}},{"start":{"line":164,"column":52},"end":{"line":164,"column":56}}]},"3":{"line":165,"type":"cond-expr","locations":[{"start":{"line":165,"column":32},"end":{"line":165,"column":85}},{"start":{"line":165,"column":88},"end":{"line":165,"column":92}}]},"4":{"line":166,"type":"cond-expr","locations":[{"start":{"line":166,"column":41},"end":{"line":166,"column":102}},{"start":{"line":166,"column":105},"end":{"line":166,"column":109}}]},"5":{"line":167,"type":"cond-expr","locations":[{"start":{"line":167,"column":29},"end":{"line":167,"column":45}},{"start":{"line":167,"column":48},"end":{"line":167,"column":52}}]},"6":{"line":168,"type":"cond-expr","locations":[{"start":{"line":168,"column":31},"end":{"line":168,"column":49}},{"start":{"line":168,"column":52},"end":{"line":168,"column":56}}]},"7":{"line":169,"type":"cond-expr","locations":[{"start":{"line":169,"column":32},"end":{"line":169,"column":51}},{"start":{"line":169,"column":54},"end":{"line":169,"column":58}}]},"8":{"line":179,"type":"cond-expr","locations":[{"start":{"line":179,"column":28},"end":{"line":179,"column":37}},{"start":{"line":179,"column":40},"end":{"line":179,"column":49}}]},"9":{"line":180,"type":"cond-expr","locations":[{"start":{"line":180,"column":24},"end":{"line":180,"column":31}},{"start":{"line":180,"column":34},"end":{"line":180,"column":43}}]},"10":{"line":181,"type":"cond-expr","locations":[{"start":{"line":181,"column":30},"end":{"line":181,"column":40}},{"start":{"line":181,"column":43},"end":{"line":181,"column":52}}]},"11":{"line":182,"type":"cond-expr","locations":[{"start":{"line":182,"column":34},"end":{"line":182,"column":46}},{"start":{"line":182,"column":49},"end":{"line":182,"column":58}}]},"12":{"line":183,"type":"cond-expr","locations":[{"start":{"line":183,"column":43},"end":{"line":183,"column":59}},{"start":{"line":183,"column":62},"end":{"line":183,"column":71}}]},"13":{"line":184,"type":"cond-expr","locations":[{"start":{"line":184,"column":37},"end":{"line":184,"column":50}},{"start":{"line":184,"column":53},"end":{"line":184,"column":62}}]},"14":{"line":185,"type":"cond-expr","locations":[{"start":{"line":185,"column":42},"end":{"line":185,"column":58}},{"start":{"line":185,"column":61},"end":{"line":185,"column":70}}]},"15":{"line":186,"type":"cond-expr","locations":[{"start":{"line":186,"column":43},"end":{"line":186,"column":71}},{"start":{"line":186,"column":74},"end":{"line":186,"column":83}}]},"16":{"line":187,"type":"cond-expr","locations":[{"start":{"line":187,"column":60},"end":{"line":187,"column":96}},{"start":{"line":187,"column":99},"end":{"line":187,"column":108}}]},"17":{"line":188,"type":"cond-expr","locations":[{"start":{"line":188,"column":37},"end":{"line":188,"column":50}},{"start":{"line":188,"column":53},"end":{"line":188,"column":62}}]},"18":{"line":189,"type":"cond-expr","locations":[{"start":{"line":189,"column":41},"end":{"line":189,"column":56}},{"start":{"line":189,"column":59},"end":{"line":189,"column":68}}]},"19":{"line":190,"type":"cond-expr","locations":[{"start":{"line":190,"column":43},"end":{"line":190,"column":59}},{"start":{"line":190,"column":62},"end":{"line":190,"column":71}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to a file. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file. Currently, only .PDF and .ZIP files can be sent using this method."," */","","class InlineQueryResultDocument extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} title","    * @param {string|null} [caption]","    * @param {string} documentUrl","    * @param {string} mimeType","    * @param {string|null} [description]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","    * @param {string|null} [thumbUrl]","    * @param {number|null} [thumbWidth]","    * @param {number|null} [thumbHeight]","   */","   constructor(","     type, ","     id, ","     title, ","     caption, ","     documentUrl, ","     mimeType, ","     description, ","     replyMarkup, ","     inputMessageContent, ","     thumbUrl, ","     thumbWidth, ","     thumbHeight","   ) {","       super()","       this._type = type","       this._id = id","       this._title = title","       this._caption = caption","       this._documentUrl = documentUrl","       this._mimeType = mimeType","       this._description = description","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","       this._thumbUrl = thumbUrl","       this._thumbWidth = thumbWidth","       this._thumbHeight = thumbHeight","   }","","   /**","    * Type of the result, must be document","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * Title for the result","    * @returns {string}","   */","   get title() {","       return this._title","   }","","   /**","    * Caption of the document to be sent, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * A valid URL for the file","    * @returns {string}","   */","   get documentUrl() {","       return this._documentUrl","   }","","   /**","    * Mime type of the content of the file, either “application/pdf” or “application/zip”","    * @returns {string}","   */","   get mimeType() {","       return this._mimeType","   }","","   /**","    * Short description of the result","    * @returns {string|null}","   */","   get description() {","       return this._description","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the file","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    * URL of the thumbnail (jpeg only) for the file","    * @returns {string|null}","   */","   get thumbUrl() {","       return this._thumbUrl","   }","","   /**","    * Thumbnail width","    * @returns {number|null}","   */","   get thumbWidth() {","       return this._thumbWidth","   }","","   /**","    * Thumbnail height","    * @returns {number|null}","   */","   get thumbHeight() {","       return this._thumbHeight","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultDocument}","    */","   static deserialize(raw) {","      return new InlineQueryResultDocument(","          raw['type'], ","          raw['id'], ","          raw['title'], ","          raw['caption'] ? raw['caption'] : null, ","          raw['document_url'], ","          raw['mime_type'], ","          raw['description'] ? raw['description'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null, ","          raw['thumb_url'] ? raw['thumb_url'] : null, ","          raw['thumb_width'] ? raw['thumb_width'] : null, ","          raw['thumb_height'] ? raw['thumb_height'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          title: this.title ? this.title : undefined, ","          caption: this.caption ? this.caption : undefined, ","          document_url: this.documentUrl ? this.documentUrl : undefined, ","          mime_type: this.mimeType ? this.mimeType : undefined, ","          description: this.description ? this.description : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined, ","          thumb_url: this.thumbUrl ? this.thumbUrl : undefined, ","          thumb_width: this.thumbWidth ? this.thumbWidth : undefined, ","          thumb_height: this.thumbHeight ? this.thumbHeight : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultDocument"],"l":{"3":1,"4":1,"5":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"60":0,"68":0,"76":0,"84":0,"92":0,"100":0,"108":0,"116":0,"124":0,"132":0,"140":0,"148":0,"157":0,"178":0,"199":0,"203":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultLocation.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultLocation.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":14},"end":{"line":35,"column":5}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":11},"end":{"line":53,"column":14}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":9},"end":{"line":61,"column":12}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":15},"end":{"line":69,"column":18}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":16},"end":{"line":77,"column":19}}},"6":{"name":"(anonymous_6)","line":85,"loc":{"start":{"line":85,"column":12},"end":{"line":85,"column":15}}},"7":{"name":"(anonymous_7)","line":93,"loc":{"start":{"line":93,"column":18},"end":{"line":93,"column":21}}},"8":{"name":"(anonymous_8)","line":101,"loc":{"start":{"line":101,"column":26},"end":{"line":101,"column":29}}},"9":{"name":"(anonymous_9)","line":109,"loc":{"start":{"line":109,"column":15},"end":{"line":109,"column":18}}},"10":{"name":"(anonymous_10)","line":117,"loc":{"start":{"line":117,"column":17},"end":{"line":117,"column":20}}},"11":{"name":"(anonymous_11)","line":125,"loc":{"start":{"line":125,"column":18},"end":{"line":125,"column":21}}},"12":{"name":"(anonymous_12)","line":134,"loc":{"start":{"line":134,"column":21},"end":{"line":134,"column":27}}},"13":{"name":"(anonymous_13)","line":153,"loc":{"start":{"line":153,"column":12},"end":{"line":153,"column":15}}},"14":{"name":"(anonymous_14)","line":172,"loc":{"start":{"line":172,"column":9},"end":{"line":172,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":36,"column":7},"end":{"line":36,"column":14}},"5":{"start":{"line":37,"column":7},"end":{"line":37,"column":24}},"6":{"start":{"line":38,"column":7},"end":{"line":38,"column":20}},"7":{"start":{"line":39,"column":7},"end":{"line":39,"column":32}},"8":{"start":{"line":40,"column":7},"end":{"line":40,"column":34}},"9":{"start":{"line":41,"column":7},"end":{"line":41,"column":26}},"10":{"start":{"line":42,"column":7},"end":{"line":42,"column":38}},"11":{"start":{"line":43,"column":7},"end":{"line":43,"column":54}},"12":{"start":{"line":44,"column":7},"end":{"line":44,"column":32}},"13":{"start":{"line":45,"column":7},"end":{"line":45,"column":36}},"14":{"start":{"line":46,"column":7},"end":{"line":46,"column":38}},"15":{"start":{"line":54,"column":7},"end":{"line":54,"column":24}},"16":{"start":{"line":62,"column":7},"end":{"line":62,"column":22}},"17":{"start":{"line":70,"column":7},"end":{"line":70,"column":28}},"18":{"start":{"line":78,"column":7},"end":{"line":78,"column":29}},"19":{"start":{"line":86,"column":7},"end":{"line":86,"column":25}},"20":{"start":{"line":94,"column":7},"end":{"line":94,"column":31}},"21":{"start":{"line":102,"column":7},"end":{"line":102,"column":39}},"22":{"start":{"line":110,"column":7},"end":{"line":110,"column":28}},"23":{"start":{"line":118,"column":7},"end":{"line":118,"column":30}},"24":{"start":{"line":126,"column":7},"end":{"line":126,"column":31}},"25":{"start":{"line":135,"column":6},"end":{"line":146,"column":7}},"26":{"start":{"line":154,"column":6},"end":{"line":165,"column":7}},"27":{"start":{"line":173,"column":6},"end":{"line":173,"column":29}},"28":{"start":{"line":177,"column":0},"end":{"line":177,"column":42}}},"branchMap":{"1":{"line":141,"type":"cond-expr","locations":[{"start":{"line":141,"column":32},"end":{"line":141,"column":85}},{"start":{"line":141,"column":88},"end":{"line":141,"column":92}}]},"2":{"line":142,"type":"cond-expr","locations":[{"start":{"line":142,"column":41},"end":{"line":142,"column":102}},{"start":{"line":142,"column":105},"end":{"line":142,"column":109}}]},"3":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":29},"end":{"line":143,"column":45}},{"start":{"line":143,"column":48},"end":{"line":143,"column":52}}]},"4":{"line":144,"type":"cond-expr","locations":[{"start":{"line":144,"column":31},"end":{"line":144,"column":49}},{"start":{"line":144,"column":52},"end":{"line":144,"column":56}}]},"5":{"line":145,"type":"cond-expr","locations":[{"start":{"line":145,"column":32},"end":{"line":145,"column":51}},{"start":{"line":145,"column":54},"end":{"line":145,"column":58}}]},"6":{"line":155,"type":"cond-expr","locations":[{"start":{"line":155,"column":28},"end":{"line":155,"column":37}},{"start":{"line":155,"column":40},"end":{"line":155,"column":49}}]},"7":{"line":156,"type":"cond-expr","locations":[{"start":{"line":156,"column":24},"end":{"line":156,"column":31}},{"start":{"line":156,"column":34},"end":{"line":156,"column":43}}]},"8":{"line":157,"type":"cond-expr","locations":[{"start":{"line":157,"column":36},"end":{"line":157,"column":49}},{"start":{"line":157,"column":52},"end":{"line":157,"column":61}}]},"9":{"line":158,"type":"cond-expr","locations":[{"start":{"line":158,"column":38},"end":{"line":158,"column":52}},{"start":{"line":158,"column":55},"end":{"line":158,"column":64}}]},"10":{"line":159,"type":"cond-expr","locations":[{"start":{"line":159,"column":30},"end":{"line":159,"column":40}},{"start":{"line":159,"column":43},"end":{"line":159,"column":52}}]},"11":{"line":160,"type":"cond-expr","locations":[{"start":{"line":160,"column":43},"end":{"line":160,"column":71}},{"start":{"line":160,"column":74},"end":{"line":160,"column":83}}]},"12":{"line":161,"type":"cond-expr","locations":[{"start":{"line":161,"column":60},"end":{"line":161,"column":96}},{"start":{"line":161,"column":99},"end":{"line":161,"column":108}}]},"13":{"line":162,"type":"cond-expr","locations":[{"start":{"line":162,"column":37},"end":{"line":162,"column":50}},{"start":{"line":162,"column":53},"end":{"line":162,"column":62}}]},"14":{"line":163,"type":"cond-expr","locations":[{"start":{"line":163,"column":41},"end":{"line":163,"column":56}},{"start":{"line":163,"column":59},"end":{"line":163,"column":68}}]},"15":{"line":164,"type":"cond-expr","locations":[{"start":{"line":164,"column":43},"end":{"line":164,"column":59}},{"start":{"line":164,"column":62},"end":{"line":164,"column":71}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a location on a map. By default, the location will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the location."," */","","class InlineQueryResultLocation extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {number} latitude","    * @param {number} longitude","    * @param {string} title","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","    * @param {string|null} [thumbUrl]","    * @param {number|null} [thumbWidth]","    * @param {number|null} [thumbHeight]","   */","   constructor(","     type, ","     id, ","     latitude, ","     longitude, ","     title, ","     replyMarkup, ","     inputMessageContent, ","     thumbUrl, ","     thumbWidth, ","     thumbHeight","   ) {","       super()","       this._type = type","       this._id = id","       this._latitude = latitude","       this._longitude = longitude","       this._title = title","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","       this._thumbUrl = thumbUrl","       this._thumbWidth = thumbWidth","       this._thumbHeight = thumbHeight","   }","","   /**","    * Type of the result, must be location","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 Bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * Location latitude in degrees","    * @returns {number}","   */","   get latitude() {","       return this._latitude","   }","","   /**","    * Location longitude in degrees","    * @returns {number}","   */","   get longitude() {","       return this._longitude","   }","","   /**","    * Location title","    * @returns {string}","   */","   get title() {","       return this._title","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the location","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    * Url of the thumbnail for the result","    * @returns {string|null}","   */","   get thumbUrl() {","       return this._thumbUrl","   }","","   /**","    * Thumbnail width","    * @returns {number|null}","   */","   get thumbWidth() {","       return this._thumbWidth","   }","","   /**","    * Thumbnail height","    * @returns {number|null}","   */","   get thumbHeight() {","       return this._thumbHeight","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultLocation}","    */","   static deserialize(raw) {","      return new InlineQueryResultLocation(","          raw['type'], ","          raw['id'], ","          raw['latitude'], ","          raw['longitude'], ","          raw['title'], ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null, ","          raw['thumb_url'] ? raw['thumb_url'] : null, ","          raw['thumb_width'] ? raw['thumb_width'] : null, ","          raw['thumb_height'] ? raw['thumb_height'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          latitude: this.latitude ? this.latitude : undefined, ","          longitude: this.longitude ? this.longitude : undefined, ","          title: this.title ? this.title : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined, ","          thumb_url: this.thumbUrl ? this.thumbUrl : undefined, ","          thumb_width: this.thumbWidth ? this.thumbWidth : undefined, ","          thumb_height: this.thumbHeight ? this.thumbHeight : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultLocation"],"l":{"3":1,"4":1,"5":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"54":0,"62":0,"70":0,"78":0,"86":0,"94":0,"102":0,"110":0,"118":0,"126":0,"135":0,"154":0,"173":0,"177":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultVenue.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultVenue.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":14},"end":{"line":39,"column":5}}},"2":{"name":"(anonymous_2)","line":59,"loc":{"start":{"line":59,"column":11},"end":{"line":59,"column":14}}},"3":{"name":"(anonymous_3)","line":67,"loc":{"start":{"line":67,"column":9},"end":{"line":67,"column":12}}},"4":{"name":"(anonymous_4)","line":75,"loc":{"start":{"line":75,"column":15},"end":{"line":75,"column":18}}},"5":{"name":"(anonymous_5)","line":83,"loc":{"start":{"line":83,"column":16},"end":{"line":83,"column":19}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":12},"end":{"line":91,"column":15}}},"7":{"name":"(anonymous_7)","line":99,"loc":{"start":{"line":99,"column":14},"end":{"line":99,"column":17}}},"8":{"name":"(anonymous_8)","line":107,"loc":{"start":{"line":107,"column":19},"end":{"line":107,"column":22}}},"9":{"name":"(anonymous_9)","line":115,"loc":{"start":{"line":115,"column":18},"end":{"line":115,"column":21}}},"10":{"name":"(anonymous_10)","line":123,"loc":{"start":{"line":123,"column":26},"end":{"line":123,"column":29}}},"11":{"name":"(anonymous_11)","line":131,"loc":{"start":{"line":131,"column":15},"end":{"line":131,"column":18}}},"12":{"name":"(anonymous_12)","line":139,"loc":{"start":{"line":139,"column":17},"end":{"line":139,"column":20}}},"13":{"name":"(anonymous_13)","line":147,"loc":{"start":{"line":147,"column":18},"end":{"line":147,"column":21}}},"14":{"name":"(anonymous_14)","line":156,"loc":{"start":{"line":156,"column":21},"end":{"line":156,"column":27}}},"15":{"name":"(anonymous_15)","line":177,"loc":{"start":{"line":177,"column":12},"end":{"line":177,"column":15}}},"16":{"name":"(anonymous_16)","line":198,"loc":{"start":{"line":198,"column":9},"end":{"line":198,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":40,"column":7},"end":{"line":40,"column":14}},"5":{"start":{"line":41,"column":7},"end":{"line":41,"column":24}},"6":{"start":{"line":42,"column":7},"end":{"line":42,"column":20}},"7":{"start":{"line":43,"column":7},"end":{"line":43,"column":32}},"8":{"start":{"line":44,"column":7},"end":{"line":44,"column":34}},"9":{"start":{"line":45,"column":7},"end":{"line":45,"column":26}},"10":{"start":{"line":46,"column":7},"end":{"line":46,"column":30}},"11":{"start":{"line":47,"column":7},"end":{"line":47,"column":40}},"12":{"start":{"line":48,"column":7},"end":{"line":48,"column":38}},"13":{"start":{"line":49,"column":7},"end":{"line":49,"column":54}},"14":{"start":{"line":50,"column":7},"end":{"line":50,"column":32}},"15":{"start":{"line":51,"column":7},"end":{"line":51,"column":36}},"16":{"start":{"line":52,"column":7},"end":{"line":52,"column":38}},"17":{"start":{"line":60,"column":7},"end":{"line":60,"column":24}},"18":{"start":{"line":68,"column":7},"end":{"line":68,"column":22}},"19":{"start":{"line":76,"column":7},"end":{"line":76,"column":28}},"20":{"start":{"line":84,"column":7},"end":{"line":84,"column":29}},"21":{"start":{"line":92,"column":7},"end":{"line":92,"column":25}},"22":{"start":{"line":100,"column":7},"end":{"line":100,"column":27}},"23":{"start":{"line":108,"column":7},"end":{"line":108,"column":32}},"24":{"start":{"line":116,"column":7},"end":{"line":116,"column":31}},"25":{"start":{"line":124,"column":7},"end":{"line":124,"column":39}},"26":{"start":{"line":132,"column":7},"end":{"line":132,"column":28}},"27":{"start":{"line":140,"column":7},"end":{"line":140,"column":30}},"28":{"start":{"line":148,"column":7},"end":{"line":148,"column":31}},"29":{"start":{"line":157,"column":6},"end":{"line":170,"column":7}},"30":{"start":{"line":178,"column":6},"end":{"line":191,"column":7}},"31":{"start":{"line":199,"column":6},"end":{"line":199,"column":29}},"32":{"start":{"line":203,"column":0},"end":{"line":203,"column":39}}},"branchMap":{"1":{"line":164,"type":"cond-expr","locations":[{"start":{"line":164,"column":33},"end":{"line":164,"column":53}},{"start":{"line":164,"column":56},"end":{"line":164,"column":60}}]},"2":{"line":165,"type":"cond-expr","locations":[{"start":{"line":165,"column":32},"end":{"line":165,"column":85}},{"start":{"line":165,"column":88},"end":{"line":165,"column":92}}]},"3":{"line":166,"type":"cond-expr","locations":[{"start":{"line":166,"column":41},"end":{"line":166,"column":102}},{"start":{"line":166,"column":105},"end":{"line":166,"column":109}}]},"4":{"line":167,"type":"cond-expr","locations":[{"start":{"line":167,"column":29},"end":{"line":167,"column":45}},{"start":{"line":167,"column":48},"end":{"line":167,"column":52}}]},"5":{"line":168,"type":"cond-expr","locations":[{"start":{"line":168,"column":31},"end":{"line":168,"column":49}},{"start":{"line":168,"column":52},"end":{"line":168,"column":56}}]},"6":{"line":169,"type":"cond-expr","locations":[{"start":{"line":169,"column":32},"end":{"line":169,"column":51}},{"start":{"line":169,"column":54},"end":{"line":169,"column":58}}]},"7":{"line":179,"type":"cond-expr","locations":[{"start":{"line":179,"column":28},"end":{"line":179,"column":37}},{"start":{"line":179,"column":40},"end":{"line":179,"column":49}}]},"8":{"line":180,"type":"cond-expr","locations":[{"start":{"line":180,"column":24},"end":{"line":180,"column":31}},{"start":{"line":180,"column":34},"end":{"line":180,"column":43}}]},"9":{"line":181,"type":"cond-expr","locations":[{"start":{"line":181,"column":36},"end":{"line":181,"column":49}},{"start":{"line":181,"column":52},"end":{"line":181,"column":61}}]},"10":{"line":182,"type":"cond-expr","locations":[{"start":{"line":182,"column":38},"end":{"line":182,"column":52}},{"start":{"line":182,"column":55},"end":{"line":182,"column":64}}]},"11":{"line":183,"type":"cond-expr","locations":[{"start":{"line":183,"column":30},"end":{"line":183,"column":40}},{"start":{"line":183,"column":43},"end":{"line":183,"column":52}}]},"12":{"line":184,"type":"cond-expr","locations":[{"start":{"line":184,"column":34},"end":{"line":184,"column":46}},{"start":{"line":184,"column":49},"end":{"line":184,"column":58}}]},"13":{"line":185,"type":"cond-expr","locations":[{"start":{"line":185,"column":45},"end":{"line":185,"column":62}},{"start":{"line":185,"column":65},"end":{"line":185,"column":74}}]},"14":{"line":186,"type":"cond-expr","locations":[{"start":{"line":186,"column":43},"end":{"line":186,"column":71}},{"start":{"line":186,"column":74},"end":{"line":186,"column":83}}]},"15":{"line":187,"type":"cond-expr","locations":[{"start":{"line":187,"column":60},"end":{"line":187,"column":96}},{"start":{"line":187,"column":99},"end":{"line":187,"column":108}}]},"16":{"line":188,"type":"cond-expr","locations":[{"start":{"line":188,"column":37},"end":{"line":188,"column":50}},{"start":{"line":188,"column":53},"end":{"line":188,"column":62}}]},"17":{"line":189,"type":"cond-expr","locations":[{"start":{"line":189,"column":41},"end":{"line":189,"column":56}},{"start":{"line":189,"column":59},"end":{"line":189,"column":68}}]},"18":{"line":190,"type":"cond-expr","locations":[{"start":{"line":190,"column":43},"end":{"line":190,"column":59}},{"start":{"line":190,"column":62},"end":{"line":190,"column":71}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a venue. By default, the venue will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the venue."," */","","class InlineQueryResultVenue extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {number} latitude","    * @param {number} longitude","    * @param {string} title","    * @param {string} address","    * @param {string|null} [foursquareId]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","    * @param {string|null} [thumbUrl]","    * @param {number|null} [thumbWidth]","    * @param {number|null} [thumbHeight]","   */","   constructor(","     type, ","     id, ","     latitude, ","     longitude, ","     title, ","     address, ","     foursquareId, ","     replyMarkup, ","     inputMessageContent, ","     thumbUrl, ","     thumbWidth, ","     thumbHeight","   ) {","       super()","       this._type = type","       this._id = id","       this._latitude = latitude","       this._longitude = longitude","       this._title = title","       this._address = address","       this._foursquareId = foursquareId","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","       this._thumbUrl = thumbUrl","       this._thumbWidth = thumbWidth","       this._thumbHeight = thumbHeight","   }","","   /**","    * Type of the result, must be venue","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 Bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * Latitude of the venue location in degrees","    * @returns {number}","   */","   get latitude() {","       return this._latitude","   }","","   /**","    * Longitude of the venue location in degrees","    * @returns {number}","   */","   get longitude() {","       return this._longitude","   }","","   /**","    * Title of the venue","    * @returns {string}","   */","   get title() {","       return this._title","   }","","   /**","    * Address of the venue","    * @returns {string}","   */","   get address() {","       return this._address","   }","","   /**","    * Foursquare identifier of the venue if known","    * @returns {string|null}","   */","   get foursquareId() {","       return this._foursquareId","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the venue","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    * Url of the thumbnail for the result","    * @returns {string|null}","   */","   get thumbUrl() {","       return this._thumbUrl","   }","","   /**","    * Thumbnail width","    * @returns {number|null}","   */","   get thumbWidth() {","       return this._thumbWidth","   }","","   /**","    * Thumbnail height","    * @returns {number|null}","   */","   get thumbHeight() {","       return this._thumbHeight","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultVenue}","    */","   static deserialize(raw) {","      return new InlineQueryResultVenue(","          raw['type'], ","          raw['id'], ","          raw['latitude'], ","          raw['longitude'], ","          raw['title'], ","          raw['address'], ","          raw['foursquare_id'] ? raw['foursquare_id'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null, ","          raw['thumb_url'] ? raw['thumb_url'] : null, ","          raw['thumb_width'] ? raw['thumb_width'] : null, ","          raw['thumb_height'] ? raw['thumb_height'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          latitude: this.latitude ? this.latitude : undefined, ","          longitude: this.longitude ? this.longitude : undefined, ","          title: this.title ? this.title : undefined, ","          address: this.address ? this.address : undefined, ","          foursquare_id: this.foursquareId ? this.foursquareId : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined, ","          thumb_url: this.thumbUrl ? this.thumbUrl : undefined, ","          thumb_width: this.thumbWidth ? this.thumbWidth : undefined, ","          thumb_height: this.thumbHeight ? this.thumbHeight : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultVenue"],"l":{"3":1,"4":1,"5":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"60":0,"68":0,"76":0,"84":0,"92":0,"100":0,"108":0,"116":0,"124":0,"132":0,"140":0,"148":0,"157":0,"178":0,"199":0,"203":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultContact.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultContact.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":14},"end":{"line":35,"column":5}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":11},"end":{"line":53,"column":14}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":9},"end":{"line":61,"column":12}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":21}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":16},"end":{"line":77,"column":19}}},"6":{"name":"(anonymous_6)","line":85,"loc":{"start":{"line":85,"column":15},"end":{"line":85,"column":18}}},"7":{"name":"(anonymous_7)","line":93,"loc":{"start":{"line":93,"column":18},"end":{"line":93,"column":21}}},"8":{"name":"(anonymous_8)","line":101,"loc":{"start":{"line":101,"column":26},"end":{"line":101,"column":29}}},"9":{"name":"(anonymous_9)","line":109,"loc":{"start":{"line":109,"column":15},"end":{"line":109,"column":18}}},"10":{"name":"(anonymous_10)","line":117,"loc":{"start":{"line":117,"column":17},"end":{"line":117,"column":20}}},"11":{"name":"(anonymous_11)","line":125,"loc":{"start":{"line":125,"column":18},"end":{"line":125,"column":21}}},"12":{"name":"(anonymous_12)","line":134,"loc":{"start":{"line":134,"column":21},"end":{"line":134,"column":27}}},"13":{"name":"(anonymous_13)","line":153,"loc":{"start":{"line":153,"column":12},"end":{"line":153,"column":15}}},"14":{"name":"(anonymous_14)","line":172,"loc":{"start":{"line":172,"column":9},"end":{"line":172,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":36,"column":7},"end":{"line":36,"column":14}},"5":{"start":{"line":37,"column":7},"end":{"line":37,"column":24}},"6":{"start":{"line":38,"column":7},"end":{"line":38,"column":20}},"7":{"start":{"line":39,"column":7},"end":{"line":39,"column":38}},"8":{"start":{"line":40,"column":7},"end":{"line":40,"column":34}},"9":{"start":{"line":41,"column":7},"end":{"line":41,"column":32}},"10":{"start":{"line":42,"column":7},"end":{"line":42,"column":38}},"11":{"start":{"line":43,"column":7},"end":{"line":43,"column":54}},"12":{"start":{"line":44,"column":7},"end":{"line":44,"column":32}},"13":{"start":{"line":45,"column":7},"end":{"line":45,"column":36}},"14":{"start":{"line":46,"column":7},"end":{"line":46,"column":38}},"15":{"start":{"line":54,"column":7},"end":{"line":54,"column":24}},"16":{"start":{"line":62,"column":7},"end":{"line":62,"column":22}},"17":{"start":{"line":70,"column":7},"end":{"line":70,"column":31}},"18":{"start":{"line":78,"column":7},"end":{"line":78,"column":29}},"19":{"start":{"line":86,"column":7},"end":{"line":86,"column":28}},"20":{"start":{"line":94,"column":7},"end":{"line":94,"column":31}},"21":{"start":{"line":102,"column":7},"end":{"line":102,"column":39}},"22":{"start":{"line":110,"column":7},"end":{"line":110,"column":28}},"23":{"start":{"line":118,"column":7},"end":{"line":118,"column":30}},"24":{"start":{"line":126,"column":7},"end":{"line":126,"column":31}},"25":{"start":{"line":135,"column":6},"end":{"line":146,"column":7}},"26":{"start":{"line":154,"column":6},"end":{"line":165,"column":7}},"27":{"start":{"line":173,"column":6},"end":{"line":173,"column":29}},"28":{"start":{"line":177,"column":0},"end":{"line":177,"column":41}}},"branchMap":{"1":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":29},"end":{"line":140,"column":45}},{"start":{"line":140,"column":48},"end":{"line":140,"column":52}}]},"2":{"line":141,"type":"cond-expr","locations":[{"start":{"line":141,"column":32},"end":{"line":141,"column":85}},{"start":{"line":141,"column":88},"end":{"line":141,"column":92}}]},"3":{"line":142,"type":"cond-expr","locations":[{"start":{"line":142,"column":41},"end":{"line":142,"column":102}},{"start":{"line":142,"column":105},"end":{"line":142,"column":109}}]},"4":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":29},"end":{"line":143,"column":45}},{"start":{"line":143,"column":48},"end":{"line":143,"column":52}}]},"5":{"line":144,"type":"cond-expr","locations":[{"start":{"line":144,"column":31},"end":{"line":144,"column":49}},{"start":{"line":144,"column":52},"end":{"line":144,"column":56}}]},"6":{"line":145,"type":"cond-expr","locations":[{"start":{"line":145,"column":32},"end":{"line":145,"column":51}},{"start":{"line":145,"column":54},"end":{"line":145,"column":58}}]},"7":{"line":155,"type":"cond-expr","locations":[{"start":{"line":155,"column":28},"end":{"line":155,"column":37}},{"start":{"line":155,"column":40},"end":{"line":155,"column":49}}]},"8":{"line":156,"type":"cond-expr","locations":[{"start":{"line":156,"column":24},"end":{"line":156,"column":31}},{"start":{"line":156,"column":34},"end":{"line":156,"column":43}}]},"9":{"line":157,"type":"cond-expr","locations":[{"start":{"line":157,"column":43},"end":{"line":157,"column":59}},{"start":{"line":157,"column":62},"end":{"line":157,"column":71}}]},"10":{"line":158,"type":"cond-expr","locations":[{"start":{"line":158,"column":39},"end":{"line":158,"column":53}},{"start":{"line":158,"column":56},"end":{"line":158,"column":65}}]},"11":{"line":159,"type":"cond-expr","locations":[{"start":{"line":159,"column":37},"end":{"line":159,"column":50}},{"start":{"line":159,"column":53},"end":{"line":159,"column":62}}]},"12":{"line":160,"type":"cond-expr","locations":[{"start":{"line":160,"column":43},"end":{"line":160,"column":71}},{"start":{"line":160,"column":74},"end":{"line":160,"column":83}}]},"13":{"line":161,"type":"cond-expr","locations":[{"start":{"line":161,"column":60},"end":{"line":161,"column":96}},{"start":{"line":161,"column":99},"end":{"line":161,"column":108}}]},"14":{"line":162,"type":"cond-expr","locations":[{"start":{"line":162,"column":37},"end":{"line":162,"column":50}},{"start":{"line":162,"column":53},"end":{"line":162,"column":62}}]},"15":{"line":163,"type":"cond-expr","locations":[{"start":{"line":163,"column":41},"end":{"line":163,"column":56}},{"start":{"line":163,"column":59},"end":{"line":163,"column":68}}]},"16":{"line":164,"type":"cond-expr","locations":[{"start":{"line":164,"column":43},"end":{"line":164,"column":59}},{"start":{"line":164,"column":62},"end":{"line":164,"column":71}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a contact with a phone number. By default, this contact will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the contact."," */","","class InlineQueryResultContact extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} phoneNumber","    * @param {string} firstName","    * @param {string|null} [lastName]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","    * @param {string|null} [thumbUrl]","    * @param {number|null} [thumbWidth]","    * @param {number|null} [thumbHeight]","   */","   constructor(","     type, ","     id, ","     phoneNumber, ","     firstName, ","     lastName, ","     replyMarkup, ","     inputMessageContent, ","     thumbUrl, ","     thumbWidth, ","     thumbHeight","   ) {","       super()","       this._type = type","       this._id = id","       this._phoneNumber = phoneNumber","       this._firstName = firstName","       this._lastName = lastName","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","       this._thumbUrl = thumbUrl","       this._thumbWidth = thumbWidth","       this._thumbHeight = thumbHeight","   }","","   /**","    * Type of the result, must be contact","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 Bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * Contact's phone number","    * @returns {string}","   */","   get phoneNumber() {","       return this._phoneNumber","   }","","   /**","    * Contact's first name","    * @returns {string}","   */","   get firstName() {","       return this._firstName","   }","","   /**","    * Contact's last name","    * @returns {string|null}","   */","   get lastName() {","       return this._lastName","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the contact","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    * Url of the thumbnail for the result","    * @returns {string|null}","   */","   get thumbUrl() {","       return this._thumbUrl","   }","","   /**","    * Thumbnail width","    * @returns {number|null}","   */","   get thumbWidth() {","       return this._thumbWidth","   }","","   /**","    * Thumbnail height","    * @returns {number|null}","   */","   get thumbHeight() {","       return this._thumbHeight","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultContact}","    */","   static deserialize(raw) {","      return new InlineQueryResultContact(","          raw['type'], ","          raw['id'], ","          raw['phone_number'], ","          raw['first_name'], ","          raw['last_name'] ? raw['last_name'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null, ","          raw['thumb_url'] ? raw['thumb_url'] : null, ","          raw['thumb_width'] ? raw['thumb_width'] : null, ","          raw['thumb_height'] ? raw['thumb_height'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          phone_number: this.phoneNumber ? this.phoneNumber : undefined, ","          first_name: this.firstName ? this.firstName : undefined, ","          last_name: this.lastName ? this.lastName : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined, ","          thumb_url: this.thumbUrl ? this.thumbUrl : undefined, ","          thumb_width: this.thumbWidth ? this.thumbWidth : undefined, ","          thumb_height: this.thumbHeight ? this.thumbHeight : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultContact"],"l":{"3":1,"4":1,"5":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"54":0,"62":0,"70":0,"78":0,"86":0,"94":0,"102":0,"110":0,"118":0,"126":0,"135":0,"154":0,"173":0,"177":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultGame.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultGame.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":53}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":11},"end":{"line":29,"column":14}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":9},"end":{"line":37,"column":12}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":20},"end":{"line":45,"column":23}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":18},"end":{"line":53,"column":21}}},"6":{"name":"(anonymous_6)","line":62,"loc":{"start":{"line":62,"column":21},"end":{"line":62,"column":27}}},"7":{"name":"(anonymous_7)","line":70,"loc":{"start":{"line":70,"column":12},"end":{"line":70,"column":15}}},"8":{"name":"(anonymous_8)","line":83,"loc":{"start":{"line":83,"column":9},"end":{"line":83,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":56}},"3":{"start":{"line":18,"column":7},"end":{"line":18,"column":14}},"4":{"start":{"line":19,"column":7},"end":{"line":19,"column":24}},"5":{"start":{"line":20,"column":7},"end":{"line":20,"column":20}},"6":{"start":{"line":21,"column":7},"end":{"line":21,"column":42}},"7":{"start":{"line":22,"column":7},"end":{"line":22,"column":38}},"8":{"start":{"line":30,"column":7},"end":{"line":30,"column":24}},"9":{"start":{"line":38,"column":7},"end":{"line":38,"column":22}},"10":{"start":{"line":46,"column":7},"end":{"line":46,"column":33}},"11":{"start":{"line":54,"column":7},"end":{"line":54,"column":31}},"12":{"start":{"line":63,"column":6},"end":{"line":63,"column":170}},"13":{"start":{"line":71,"column":6},"end":{"line":76,"column":7}},"14":{"start":{"line":84,"column":6},"end":{"line":84,"column":29}},"15":{"start":{"line":88,"column":0},"end":{"line":88,"column":38}}},"branchMap":{"1":{"line":63,"type":"cond-expr","locations":[{"start":{"line":63,"column":109},"end":{"line":63,"column":162}},{"start":{"line":63,"column":165},"end":{"line":63,"column":169}}]},"2":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":28},"end":{"line":72,"column":37}},{"start":{"line":72,"column":40},"end":{"line":72,"column":49}}]},"3":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":24},"end":{"line":73,"column":31}},{"start":{"line":73,"column":34},"end":{"line":73,"column":43}}]},"4":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":48},"end":{"line":74,"column":66}},{"start":{"line":74,"column":69},"end":{"line":74,"column":78}}]},"5":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":43},"end":{"line":75,"column":71}},{"start":{"line":75,"column":74},"end":{"line":75,"column":83}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a Game."," */","","class InlineQueryResultGame extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} gameShortName","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","   */","   constructor(type, id, gameShortName, replyMarkup) {","       super()","       this._type = type","       this._id = id","       this._gameShortName = gameShortName","       this._replyMarkup = replyMarkup","   }","","   /**","    * Type of the result, must be game","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * Short name of the game","    * @returns {string}","   */","   get gameShortName() {","       return this._gameShortName","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultGame}","    */","   static deserialize(raw) {","      return new InlineQueryResultGame(raw['type'], raw['id'], raw['game_short_name'], raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          game_short_name: this.gameShortName ? this.gameShortName : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultGame"],"l":{"3":1,"4":1,"18":0,"19":0,"20":0,"21":0,"22":0,"30":0,"38":0,"46":0,"54":0,"63":0,"71":0,"84":0,"88":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedPhoto.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedPhoto.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":14},"end":{"line":31,"column":5}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":11},"end":{"line":47,"column":14}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":9},"end":{"line":55,"column":12}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":18},"end":{"line":63,"column":21}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":12},"end":{"line":71,"column":15}}},"6":{"name":"(anonymous_6)","line":79,"loc":{"start":{"line":79,"column":18},"end":{"line":79,"column":21}}},"7":{"name":"(anonymous_7)","line":87,"loc":{"start":{"line":87,"column":14},"end":{"line":87,"column":17}}},"8":{"name":"(anonymous_8)","line":95,"loc":{"start":{"line":95,"column":18},"end":{"line":95,"column":21}}},"9":{"name":"(anonymous_9)","line":103,"loc":{"start":{"line":103,"column":26},"end":{"line":103,"column":29}}},"10":{"name":"(anonymous_10)","line":112,"loc":{"start":{"line":112,"column":21},"end":{"line":112,"column":27}}},"11":{"name":"(anonymous_11)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":15}}},"12":{"name":"(anonymous_12)","line":146,"loc":{"start":{"line":146,"column":9},"end":{"line":146,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":32,"column":7},"end":{"line":32,"column":14}},"5":{"start":{"line":33,"column":7},"end":{"line":33,"column":24}},"6":{"start":{"line":34,"column":7},"end":{"line":34,"column":20}},"7":{"start":{"line":35,"column":7},"end":{"line":35,"column":38}},"8":{"start":{"line":36,"column":7},"end":{"line":36,"column":26}},"9":{"start":{"line":37,"column":7},"end":{"line":37,"column":38}},"10":{"start":{"line":38,"column":7},"end":{"line":38,"column":30}},"11":{"start":{"line":39,"column":7},"end":{"line":39,"column":38}},"12":{"start":{"line":40,"column":7},"end":{"line":40,"column":54}},"13":{"start":{"line":48,"column":7},"end":{"line":48,"column":24}},"14":{"start":{"line":56,"column":7},"end":{"line":56,"column":22}},"15":{"start":{"line":64,"column":7},"end":{"line":64,"column":31}},"16":{"start":{"line":72,"column":7},"end":{"line":72,"column":25}},"17":{"start":{"line":80,"column":7},"end":{"line":80,"column":31}},"18":{"start":{"line":88,"column":7},"end":{"line":88,"column":27}},"19":{"start":{"line":96,"column":7},"end":{"line":96,"column":31}},"20":{"start":{"line":104,"column":7},"end":{"line":104,"column":39}},"21":{"start":{"line":113,"column":6},"end":{"line":122,"column":7}},"22":{"start":{"line":130,"column":6},"end":{"line":139,"column":7}},"23":{"start":{"line":147,"column":6},"end":{"line":147,"column":29}},"24":{"start":{"line":151,"column":0},"end":{"line":151,"column":45}}},"branchMap":{"1":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":25},"end":{"line":117,"column":37}},{"start":{"line":117,"column":40},"end":{"line":117,"column":44}}]},"2":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":31},"end":{"line":118,"column":49}},{"start":{"line":118,"column":52},"end":{"line":118,"column":56}}]},"3":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":27},"end":{"line":119,"column":41}},{"start":{"line":119,"column":44},"end":{"line":119,"column":48}}]},"4":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":32},"end":{"line":120,"column":85}},{"start":{"line":120,"column":88},"end":{"line":120,"column":92}}]},"5":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":41},"end":{"line":121,"column":102}},{"start":{"line":121,"column":105},"end":{"line":121,"column":109}}]},"6":{"line":131,"type":"cond-expr","locations":[{"start":{"line":131,"column":28},"end":{"line":131,"column":37}},{"start":{"line":131,"column":40},"end":{"line":131,"column":49}}]},"7":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":24},"end":{"line":132,"column":31}},{"start":{"line":132,"column":34},"end":{"line":132,"column":43}}]},"8":{"line":133,"type":"cond-expr","locations":[{"start":{"line":133,"column":44},"end":{"line":133,"column":60}},{"start":{"line":133,"column":63},"end":{"line":133,"column":72}}]},"9":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":30},"end":{"line":134,"column":40}},{"start":{"line":134,"column":43},"end":{"line":134,"column":52}}]},"10":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":42},"end":{"line":135,"column":58}},{"start":{"line":135,"column":61},"end":{"line":135,"column":70}}]},"11":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":34},"end":{"line":136,"column":46}},{"start":{"line":136,"column":49},"end":{"line":136,"column":58}}]},"12":{"line":137,"type":"cond-expr","locations":[{"start":{"line":137,"column":43},"end":{"line":137,"column":71}},{"start":{"line":137,"column":74},"end":{"line":137,"column":83}}]},"13":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":60},"end":{"line":138,"column":96}},{"start":{"line":138,"column":99},"end":{"line":138,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to a photo stored on the Telegram servers. By default, this photo will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo."," */","","class InlineQueryResultCachedPhoto extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} photoFileId","    * @param {string|null} [title]","    * @param {string|null} [description]","    * @param {string|null} [caption]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(","     type, ","     id, ","     photoFileId, ","     title, ","     description, ","     caption, ","     replyMarkup, ","     inputMessageContent","   ) {","       super()","       this._type = type","       this._id = id","       this._photoFileId = photoFileId","       this._title = title","       this._description = description","       this._caption = caption","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be photo","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * A valid file identifier of the photo","    * @returns {string}","   */","   get photoFileId() {","       return this._photoFileId","   }","","   /**","    * Title for the result","    * @returns {string|null}","   */","   get title() {","       return this._title","   }","","   /**","    * Short description of the result","    * @returns {string|null}","   */","   get description() {","       return this._description","   }","","   /**","    * Caption of the photo to be sent, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the photo","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultCachedPhoto}","    */","   static deserialize(raw) {","      return new InlineQueryResultCachedPhoto(","          raw['type'], ","          raw['id'], ","          raw['photo_file_id'], ","          raw['title'] ? raw['title'] : null, ","          raw['description'] ? raw['description'] : null, ","          raw['caption'] ? raw['caption'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          photo_file_id: this.photoFileId ? this.photoFileId : undefined, ","          title: this.title ? this.title : undefined, ","          description: this.description ? this.description : undefined, ","          caption: this.caption ? this.caption : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultCachedPhoto"],"l":{"3":1,"4":1,"5":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"48":0,"56":0,"64":0,"72":0,"80":0,"88":0,"96":0,"104":0,"113":0,"130":0,"147":0,"151":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedGif.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedGif.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":14},"end":{"line":29,"column":5}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":11},"end":{"line":44,"column":14}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":9},"end":{"line":52,"column":12}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":16},"end":{"line":60,"column":19}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":12},"end":{"line":68,"column":15}}},"6":{"name":"(anonymous_6)","line":76,"loc":{"start":{"line":76,"column":14},"end":{"line":76,"column":17}}},"7":{"name":"(anonymous_7)","line":84,"loc":{"start":{"line":84,"column":18},"end":{"line":84,"column":21}}},"8":{"name":"(anonymous_8)","line":92,"loc":{"start":{"line":92,"column":26},"end":{"line":92,"column":29}}},"9":{"name":"(anonymous_9)","line":101,"loc":{"start":{"line":101,"column":21},"end":{"line":101,"column":27}}},"10":{"name":"(anonymous_10)","line":117,"loc":{"start":{"line":117,"column":12},"end":{"line":117,"column":15}}},"11":{"name":"(anonymous_11)","line":133,"loc":{"start":{"line":133,"column":9},"end":{"line":133,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":30,"column":7},"end":{"line":30,"column":14}},"5":{"start":{"line":31,"column":7},"end":{"line":31,"column":24}},"6":{"start":{"line":32,"column":7},"end":{"line":32,"column":20}},"7":{"start":{"line":33,"column":7},"end":{"line":33,"column":34}},"8":{"start":{"line":34,"column":7},"end":{"line":34,"column":26}},"9":{"start":{"line":35,"column":7},"end":{"line":35,"column":30}},"10":{"start":{"line":36,"column":7},"end":{"line":36,"column":38}},"11":{"start":{"line":37,"column":7},"end":{"line":37,"column":54}},"12":{"start":{"line":45,"column":7},"end":{"line":45,"column":24}},"13":{"start":{"line":53,"column":7},"end":{"line":53,"column":22}},"14":{"start":{"line":61,"column":7},"end":{"line":61,"column":29}},"15":{"start":{"line":69,"column":7},"end":{"line":69,"column":25}},"16":{"start":{"line":77,"column":7},"end":{"line":77,"column":27}},"17":{"start":{"line":85,"column":7},"end":{"line":85,"column":31}},"18":{"start":{"line":93,"column":7},"end":{"line":93,"column":39}},"19":{"start":{"line":102,"column":6},"end":{"line":110,"column":7}},"20":{"start":{"line":118,"column":6},"end":{"line":126,"column":7}},"21":{"start":{"line":134,"column":6},"end":{"line":134,"column":29}},"22":{"start":{"line":138,"column":0},"end":{"line":138,"column":43}}},"branchMap":{"1":{"line":106,"type":"cond-expr","locations":[{"start":{"line":106,"column":25},"end":{"line":106,"column":37}},{"start":{"line":106,"column":40},"end":{"line":106,"column":44}}]},"2":{"line":107,"type":"cond-expr","locations":[{"start":{"line":107,"column":27},"end":{"line":107,"column":41}},{"start":{"line":107,"column":44},"end":{"line":107,"column":48}}]},"3":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":32},"end":{"line":108,"column":85}},{"start":{"line":108,"column":88},"end":{"line":108,"column":92}}]},"4":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":41},"end":{"line":109,"column":102}},{"start":{"line":109,"column":105},"end":{"line":109,"column":109}}]},"5":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":28},"end":{"line":119,"column":37}},{"start":{"line":119,"column":40},"end":{"line":119,"column":49}}]},"6":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":24},"end":{"line":120,"column":31}},{"start":{"line":120,"column":34},"end":{"line":120,"column":43}}]},"7":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":40},"end":{"line":121,"column":54}},{"start":{"line":121,"column":57},"end":{"line":121,"column":66}}]},"8":{"line":122,"type":"cond-expr","locations":[{"start":{"line":122,"column":30},"end":{"line":122,"column":40}},{"start":{"line":122,"column":43},"end":{"line":122,"column":52}}]},"9":{"line":123,"type":"cond-expr","locations":[{"start":{"line":123,"column":34},"end":{"line":123,"column":46}},{"start":{"line":123,"column":49},"end":{"line":123,"column":58}}]},"10":{"line":124,"type":"cond-expr","locations":[{"start":{"line":124,"column":43},"end":{"line":124,"column":71}},{"start":{"line":124,"column":74},"end":{"line":124,"column":83}}]},"11":{"line":125,"type":"cond-expr","locations":[{"start":{"line":125,"column":60},"end":{"line":125,"column":96}},{"start":{"line":125,"column":99},"end":{"line":125,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to an animated GIF file stored on the Telegram servers. By default, this animated GIF file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with specified content instead of the animation."," */","","class InlineQueryResultCachedGif extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} gifFileId","    * @param {string|null} [title]","    * @param {string|null} [caption]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(","     type, ","     id, ","     gifFileId, ","     title, ","     caption, ","     replyMarkup, ","     inputMessageContent","   ) {","       super()","       this._type = type","       this._id = id","       this._gifFileId = gifFileId","       this._title = title","       this._caption = caption","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be gif","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * A valid file identifier for the GIF file","    * @returns {string}","   */","   get gifFileId() {","       return this._gifFileId","   }","","   /**","    * Title for the result","    * @returns {string|null}","   */","   get title() {","       return this._title","   }","","   /**","    * Caption of the GIF file to be sent, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the GIF animation","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultCachedGif}","    */","   static deserialize(raw) {","      return new InlineQueryResultCachedGif(","          raw['type'], ","          raw['id'], ","          raw['gif_file_id'], ","          raw['title'] ? raw['title'] : null, ","          raw['caption'] ? raw['caption'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          gif_file_id: this.gifFileId ? this.gifFileId : undefined, ","          title: this.title ? this.title : undefined, ","          caption: this.caption ? this.caption : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultCachedGif"],"l":{"3":1,"4":1,"5":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"45":0,"53":0,"61":0,"69":0,"77":0,"85":0,"93":0,"102":0,"118":0,"134":0,"138":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedMpeg4Gif.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedMpeg4Gif.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":14},"end":{"line":29,"column":5}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":11},"end":{"line":44,"column":14}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":9},"end":{"line":52,"column":12}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":18},"end":{"line":60,"column":21}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":12},"end":{"line":68,"column":15}}},"6":{"name":"(anonymous_6)","line":76,"loc":{"start":{"line":76,"column":14},"end":{"line":76,"column":17}}},"7":{"name":"(anonymous_7)","line":84,"loc":{"start":{"line":84,"column":18},"end":{"line":84,"column":21}}},"8":{"name":"(anonymous_8)","line":92,"loc":{"start":{"line":92,"column":26},"end":{"line":92,"column":29}}},"9":{"name":"(anonymous_9)","line":101,"loc":{"start":{"line":101,"column":21},"end":{"line":101,"column":27}}},"10":{"name":"(anonymous_10)","line":117,"loc":{"start":{"line":117,"column":12},"end":{"line":117,"column":15}}},"11":{"name":"(anonymous_11)","line":133,"loc":{"start":{"line":133,"column":9},"end":{"line":133,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":30,"column":7},"end":{"line":30,"column":14}},"5":{"start":{"line":31,"column":7},"end":{"line":31,"column":24}},"6":{"start":{"line":32,"column":7},"end":{"line":32,"column":20}},"7":{"start":{"line":33,"column":7},"end":{"line":33,"column":38}},"8":{"start":{"line":34,"column":7},"end":{"line":34,"column":26}},"9":{"start":{"line":35,"column":7},"end":{"line":35,"column":30}},"10":{"start":{"line":36,"column":7},"end":{"line":36,"column":38}},"11":{"start":{"line":37,"column":7},"end":{"line":37,"column":54}},"12":{"start":{"line":45,"column":7},"end":{"line":45,"column":24}},"13":{"start":{"line":53,"column":7},"end":{"line":53,"column":22}},"14":{"start":{"line":61,"column":7},"end":{"line":61,"column":31}},"15":{"start":{"line":69,"column":7},"end":{"line":69,"column":25}},"16":{"start":{"line":77,"column":7},"end":{"line":77,"column":27}},"17":{"start":{"line":85,"column":7},"end":{"line":85,"column":31}},"18":{"start":{"line":93,"column":7},"end":{"line":93,"column":39}},"19":{"start":{"line":102,"column":6},"end":{"line":110,"column":7}},"20":{"start":{"line":118,"column":6},"end":{"line":126,"column":7}},"21":{"start":{"line":134,"column":6},"end":{"line":134,"column":29}},"22":{"start":{"line":138,"column":0},"end":{"line":138,"column":48}}},"branchMap":{"1":{"line":106,"type":"cond-expr","locations":[{"start":{"line":106,"column":25},"end":{"line":106,"column":37}},{"start":{"line":106,"column":40},"end":{"line":106,"column":44}}]},"2":{"line":107,"type":"cond-expr","locations":[{"start":{"line":107,"column":27},"end":{"line":107,"column":41}},{"start":{"line":107,"column":44},"end":{"line":107,"column":48}}]},"3":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":32},"end":{"line":108,"column":85}},{"start":{"line":108,"column":88},"end":{"line":108,"column":92}}]},"4":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":41},"end":{"line":109,"column":102}},{"start":{"line":109,"column":105},"end":{"line":109,"column":109}}]},"5":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":28},"end":{"line":119,"column":37}},{"start":{"line":119,"column":40},"end":{"line":119,"column":49}}]},"6":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":24},"end":{"line":120,"column":31}},{"start":{"line":120,"column":34},"end":{"line":120,"column":43}}]},"7":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":44},"end":{"line":121,"column":60}},{"start":{"line":121,"column":63},"end":{"line":121,"column":72}}]},"8":{"line":122,"type":"cond-expr","locations":[{"start":{"line":122,"column":30},"end":{"line":122,"column":40}},{"start":{"line":122,"column":43},"end":{"line":122,"column":52}}]},"9":{"line":123,"type":"cond-expr","locations":[{"start":{"line":123,"column":34},"end":{"line":123,"column":46}},{"start":{"line":123,"column":49},"end":{"line":123,"column":58}}]},"10":{"line":124,"type":"cond-expr","locations":[{"start":{"line":124,"column":43},"end":{"line":124,"column":71}},{"start":{"line":124,"column":74},"end":{"line":124,"column":83}}]},"11":{"line":125,"type":"cond-expr","locations":[{"start":{"line":125,"column":60},"end":{"line":125,"column":96}},{"start":{"line":125,"column":99},"end":{"line":125,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to a video animation (H.264/MPEG-4 AVC video without sound) stored on the Telegram servers. By default, this animated MPEG-4 file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation."," */","","class InlineQueryResultCachedMpeg4Gif extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} mpeg4FileId","    * @param {string|null} [title]","    * @param {string|null} [caption]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(","     type, ","     id, ","     mpeg4FileId, ","     title, ","     caption, ","     replyMarkup, ","     inputMessageContent","   ) {","       super()","       this._type = type","       this._id = id","       this._mpeg4FileId = mpeg4FileId","       this._title = title","       this._caption = caption","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be mpeg4_gif","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * A valid file identifier for the MP4 file","    * @returns {string}","   */","   get mpeg4FileId() {","       return this._mpeg4FileId","   }","","   /**","    * Title for the result","    * @returns {string|null}","   */","   get title() {","       return this._title","   }","","   /**","    * Caption of the MPEG-4 file to be sent, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the video animation","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultCachedMpeg4Gif}","    */","   static deserialize(raw) {","      return new InlineQueryResultCachedMpeg4Gif(","          raw['type'], ","          raw['id'], ","          raw['mpeg4_file_id'], ","          raw['title'] ? raw['title'] : null, ","          raw['caption'] ? raw['caption'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          mpeg4_file_id: this.mpeg4FileId ? this.mpeg4FileId : undefined, ","          title: this.title ? this.title : undefined, ","          caption: this.caption ? this.caption : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultCachedMpeg4Gif"],"l":{"3":1,"4":1,"5":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"45":0,"53":0,"61":0,"69":0,"77":0,"85":0,"93":0,"102":0,"118":0,"134":0,"138":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedSticker.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedSticker.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":14},"end":{"line":19,"column":74}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":14}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":9},"end":{"line":40,"column":12}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":20},"end":{"line":48,"column":23}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":18},"end":{"line":56,"column":21}}},"6":{"name":"(anonymous_6)","line":64,"loc":{"start":{"line":64,"column":26},"end":{"line":64,"column":29}}},"7":{"name":"(anonymous_7)","line":73,"loc":{"start":{"line":73,"column":21},"end":{"line":73,"column":27}}},"8":{"name":"(anonymous_8)","line":87,"loc":{"start":{"line":87,"column":12},"end":{"line":87,"column":15}}},"9":{"name":"(anonymous_9)","line":101,"loc":{"start":{"line":101,"column":9},"end":{"line":101,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":20,"column":7},"end":{"line":20,"column":14}},"5":{"start":{"line":21,"column":7},"end":{"line":21,"column":24}},"6":{"start":{"line":22,"column":7},"end":{"line":22,"column":20}},"7":{"start":{"line":23,"column":7},"end":{"line":23,"column":42}},"8":{"start":{"line":24,"column":7},"end":{"line":24,"column":38}},"9":{"start":{"line":25,"column":7},"end":{"line":25,"column":54}},"10":{"start":{"line":33,"column":7},"end":{"line":33,"column":24}},"11":{"start":{"line":41,"column":7},"end":{"line":41,"column":22}},"12":{"start":{"line":49,"column":7},"end":{"line":49,"column":33}},"13":{"start":{"line":57,"column":7},"end":{"line":57,"column":31}},"14":{"start":{"line":65,"column":7},"end":{"line":65,"column":39}},"15":{"start":{"line":74,"column":6},"end":{"line":80,"column":7}},"16":{"start":{"line":88,"column":6},"end":{"line":94,"column":7}},"17":{"start":{"line":102,"column":6},"end":{"line":102,"column":29}},"18":{"start":{"line":106,"column":0},"end":{"line":106,"column":47}}},"branchMap":{"1":{"line":78,"type":"cond-expr","locations":[{"start":{"line":78,"column":32},"end":{"line":78,"column":85}},{"start":{"line":78,"column":88},"end":{"line":78,"column":92}}]},"2":{"line":79,"type":"cond-expr","locations":[{"start":{"line":79,"column":41},"end":{"line":79,"column":102}},{"start":{"line":79,"column":105},"end":{"line":79,"column":109}}]},"3":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":28},"end":{"line":89,"column":37}},{"start":{"line":89,"column":40},"end":{"line":89,"column":49}}]},"4":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":24},"end":{"line":90,"column":31}},{"start":{"line":90,"column":34},"end":{"line":90,"column":43}}]},"5":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":48},"end":{"line":91,"column":66}},{"start":{"line":91,"column":69},"end":{"line":91,"column":78}}]},"6":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":43},"end":{"line":92,"column":71}},{"start":{"line":92,"column":74},"end":{"line":92,"column":83}}]},"7":{"line":93,"type":"cond-expr","locations":[{"start":{"line":93,"column":60},"end":{"line":93,"column":96}},{"start":{"line":93,"column":99},"end":{"line":93,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to a sticker stored on the Telegram servers. By default, this sticker will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the sticker."," */","","class InlineQueryResultCachedSticker extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} stickerFileId","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(type, id, stickerFileId, replyMarkup, inputMessageContent) {","       super()","       this._type = type","       this._id = id","       this._stickerFileId = stickerFileId","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be sticker","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * A valid file identifier of the sticker","    * @returns {string}","   */","   get stickerFileId() {","       return this._stickerFileId","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the sticker","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultCachedSticker}","    */","   static deserialize(raw) {","      return new InlineQueryResultCachedSticker(","          raw['type'], ","          raw['id'], ","          raw['sticker_file_id'], ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          sticker_file_id: this.stickerFileId ? this.stickerFileId : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultCachedSticker"],"l":{"3":1,"4":1,"5":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"33":0,"41":0,"49":0,"57":0,"65":0,"74":0,"88":0,"102":0,"106":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedDocument.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedDocument.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":14},"end":{"line":31,"column":5}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":11},"end":{"line":47,"column":14}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":9},"end":{"line":55,"column":12}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":12},"end":{"line":63,"column":15}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":21},"end":{"line":71,"column":24}}},"6":{"name":"(anonymous_6)","line":79,"loc":{"start":{"line":79,"column":18},"end":{"line":79,"column":21}}},"7":{"name":"(anonymous_7)","line":87,"loc":{"start":{"line":87,"column":14},"end":{"line":87,"column":17}}},"8":{"name":"(anonymous_8)","line":95,"loc":{"start":{"line":95,"column":18},"end":{"line":95,"column":21}}},"9":{"name":"(anonymous_9)","line":103,"loc":{"start":{"line":103,"column":26},"end":{"line":103,"column":29}}},"10":{"name":"(anonymous_10)","line":112,"loc":{"start":{"line":112,"column":21},"end":{"line":112,"column":27}}},"11":{"name":"(anonymous_11)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":15}}},"12":{"name":"(anonymous_12)","line":146,"loc":{"start":{"line":146,"column":9},"end":{"line":146,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":32,"column":7},"end":{"line":32,"column":14}},"5":{"start":{"line":33,"column":7},"end":{"line":33,"column":24}},"6":{"start":{"line":34,"column":7},"end":{"line":34,"column":20}},"7":{"start":{"line":35,"column":7},"end":{"line":35,"column":26}},"8":{"start":{"line":36,"column":7},"end":{"line":36,"column":44}},"9":{"start":{"line":37,"column":7},"end":{"line":37,"column":38}},"10":{"start":{"line":38,"column":7},"end":{"line":38,"column":30}},"11":{"start":{"line":39,"column":7},"end":{"line":39,"column":38}},"12":{"start":{"line":40,"column":7},"end":{"line":40,"column":54}},"13":{"start":{"line":48,"column":7},"end":{"line":48,"column":24}},"14":{"start":{"line":56,"column":7},"end":{"line":56,"column":22}},"15":{"start":{"line":64,"column":7},"end":{"line":64,"column":25}},"16":{"start":{"line":72,"column":7},"end":{"line":72,"column":34}},"17":{"start":{"line":80,"column":7},"end":{"line":80,"column":31}},"18":{"start":{"line":88,"column":7},"end":{"line":88,"column":27}},"19":{"start":{"line":96,"column":7},"end":{"line":96,"column":31}},"20":{"start":{"line":104,"column":7},"end":{"line":104,"column":39}},"21":{"start":{"line":113,"column":6},"end":{"line":122,"column":7}},"22":{"start":{"line":130,"column":6},"end":{"line":139,"column":7}},"23":{"start":{"line":147,"column":6},"end":{"line":147,"column":29}},"24":{"start":{"line":151,"column":0},"end":{"line":151,"column":48}}},"branchMap":{"1":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":31},"end":{"line":118,"column":49}},{"start":{"line":118,"column":52},"end":{"line":118,"column":56}}]},"2":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":27},"end":{"line":119,"column":41}},{"start":{"line":119,"column":44},"end":{"line":119,"column":48}}]},"3":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":32},"end":{"line":120,"column":85}},{"start":{"line":120,"column":88},"end":{"line":120,"column":92}}]},"4":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":41},"end":{"line":121,"column":102}},{"start":{"line":121,"column":105},"end":{"line":121,"column":109}}]},"5":{"line":131,"type":"cond-expr","locations":[{"start":{"line":131,"column":28},"end":{"line":131,"column":37}},{"start":{"line":131,"column":40},"end":{"line":131,"column":49}}]},"6":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":24},"end":{"line":132,"column":31}},{"start":{"line":132,"column":34},"end":{"line":132,"column":43}}]},"7":{"line":133,"type":"cond-expr","locations":[{"start":{"line":133,"column":30},"end":{"line":133,"column":40}},{"start":{"line":133,"column":43},"end":{"line":133,"column":52}}]},"8":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":50},"end":{"line":134,"column":69}},{"start":{"line":134,"column":72},"end":{"line":134,"column":81}}]},"9":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":42},"end":{"line":135,"column":58}},{"start":{"line":135,"column":61},"end":{"line":135,"column":70}}]},"10":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":34},"end":{"line":136,"column":46}},{"start":{"line":136,"column":49},"end":{"line":136,"column":58}}]},"11":{"line":137,"type":"cond-expr","locations":[{"start":{"line":137,"column":43},"end":{"line":137,"column":71}},{"start":{"line":137,"column":74},"end":{"line":137,"column":83}}]},"12":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":60},"end":{"line":138,"column":96}},{"start":{"line":138,"column":99},"end":{"line":138,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to a file stored on the Telegram servers. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file."," */","","class InlineQueryResultCachedDocument extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} title","    * @param {string} documentFileId","    * @param {string|null} [description]","    * @param {string|null} [caption]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(","     type, ","     id, ","     title, ","     documentFileId, ","     description, ","     caption, ","     replyMarkup, ","     inputMessageContent","   ) {","       super()","       this._type = type","       this._id = id","       this._title = title","       this._documentFileId = documentFileId","       this._description = description","       this._caption = caption","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be document","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * Title for the result","    * @returns {string}","   */","   get title() {","       return this._title","   }","","   /**","    * A valid file identifier for the file","    * @returns {string}","   */","   get documentFileId() {","       return this._documentFileId","   }","","   /**","    * Short description of the result","    * @returns {string|null}","   */","   get description() {","       return this._description","   }","","   /**","    * Caption of the document to be sent, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the file","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultCachedDocument}","    */","   static deserialize(raw) {","      return new InlineQueryResultCachedDocument(","          raw['type'], ","          raw['id'], ","          raw['title'], ","          raw['document_file_id'], ","          raw['description'] ? raw['description'] : null, ","          raw['caption'] ? raw['caption'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          title: this.title ? this.title : undefined, ","          document_file_id: this.documentFileId ? this.documentFileId : undefined, ","          description: this.description ? this.description : undefined, ","          caption: this.caption ? this.caption : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultCachedDocument"],"l":{"3":1,"4":1,"5":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"48":0,"56":0,"64":0,"72":0,"80":0,"88":0,"96":0,"104":0,"113":0,"130":0,"147":0,"151":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedVideo.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedVideo.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":14},"end":{"line":31,"column":5}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":11},"end":{"line":47,"column":14}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":9},"end":{"line":55,"column":12}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":18},"end":{"line":63,"column":21}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":12},"end":{"line":71,"column":15}}},"6":{"name":"(anonymous_6)","line":79,"loc":{"start":{"line":79,"column":18},"end":{"line":79,"column":21}}},"7":{"name":"(anonymous_7)","line":87,"loc":{"start":{"line":87,"column":14},"end":{"line":87,"column":17}}},"8":{"name":"(anonymous_8)","line":95,"loc":{"start":{"line":95,"column":18},"end":{"line":95,"column":21}}},"9":{"name":"(anonymous_9)","line":103,"loc":{"start":{"line":103,"column":26},"end":{"line":103,"column":29}}},"10":{"name":"(anonymous_10)","line":112,"loc":{"start":{"line":112,"column":21},"end":{"line":112,"column":27}}},"11":{"name":"(anonymous_11)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":15}}},"12":{"name":"(anonymous_12)","line":146,"loc":{"start":{"line":146,"column":9},"end":{"line":146,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":32,"column":7},"end":{"line":32,"column":14}},"5":{"start":{"line":33,"column":7},"end":{"line":33,"column":24}},"6":{"start":{"line":34,"column":7},"end":{"line":34,"column":20}},"7":{"start":{"line":35,"column":7},"end":{"line":35,"column":38}},"8":{"start":{"line":36,"column":7},"end":{"line":36,"column":26}},"9":{"start":{"line":37,"column":7},"end":{"line":37,"column":38}},"10":{"start":{"line":38,"column":7},"end":{"line":38,"column":30}},"11":{"start":{"line":39,"column":7},"end":{"line":39,"column":38}},"12":{"start":{"line":40,"column":7},"end":{"line":40,"column":54}},"13":{"start":{"line":48,"column":7},"end":{"line":48,"column":24}},"14":{"start":{"line":56,"column":7},"end":{"line":56,"column":22}},"15":{"start":{"line":64,"column":7},"end":{"line":64,"column":31}},"16":{"start":{"line":72,"column":7},"end":{"line":72,"column":25}},"17":{"start":{"line":80,"column":7},"end":{"line":80,"column":31}},"18":{"start":{"line":88,"column":7},"end":{"line":88,"column":27}},"19":{"start":{"line":96,"column":7},"end":{"line":96,"column":31}},"20":{"start":{"line":104,"column":7},"end":{"line":104,"column":39}},"21":{"start":{"line":113,"column":6},"end":{"line":122,"column":7}},"22":{"start":{"line":130,"column":6},"end":{"line":139,"column":7}},"23":{"start":{"line":147,"column":6},"end":{"line":147,"column":29}},"24":{"start":{"line":151,"column":0},"end":{"line":151,"column":45}}},"branchMap":{"1":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":31},"end":{"line":118,"column":49}},{"start":{"line":118,"column":52},"end":{"line":118,"column":56}}]},"2":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":27},"end":{"line":119,"column":41}},{"start":{"line":119,"column":44},"end":{"line":119,"column":48}}]},"3":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":32},"end":{"line":120,"column":85}},{"start":{"line":120,"column":88},"end":{"line":120,"column":92}}]},"4":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":41},"end":{"line":121,"column":102}},{"start":{"line":121,"column":105},"end":{"line":121,"column":109}}]},"5":{"line":131,"type":"cond-expr","locations":[{"start":{"line":131,"column":28},"end":{"line":131,"column":37}},{"start":{"line":131,"column":40},"end":{"line":131,"column":49}}]},"6":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":24},"end":{"line":132,"column":31}},{"start":{"line":132,"column":34},"end":{"line":132,"column":43}}]},"7":{"line":133,"type":"cond-expr","locations":[{"start":{"line":133,"column":44},"end":{"line":133,"column":60}},{"start":{"line":133,"column":63},"end":{"line":133,"column":72}}]},"8":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":30},"end":{"line":134,"column":40}},{"start":{"line":134,"column":43},"end":{"line":134,"column":52}}]},"9":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":42},"end":{"line":135,"column":58}},{"start":{"line":135,"column":61},"end":{"line":135,"column":70}}]},"10":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":34},"end":{"line":136,"column":46}},{"start":{"line":136,"column":49},"end":{"line":136,"column":58}}]},"11":{"line":137,"type":"cond-expr","locations":[{"start":{"line":137,"column":43},"end":{"line":137,"column":71}},{"start":{"line":137,"column":74},"end":{"line":137,"column":83}}]},"12":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":60},"end":{"line":138,"column":96}},{"start":{"line":138,"column":99},"end":{"line":138,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to a video file stored on the Telegram servers. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video."," */","","class InlineQueryResultCachedVideo extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} videoFileId","    * @param {string} title","    * @param {string|null} [description]","    * @param {string|null} [caption]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(","     type, ","     id, ","     videoFileId, ","     title, ","     description, ","     caption, ","     replyMarkup, ","     inputMessageContent","   ) {","       super()","       this._type = type","       this._id = id","       this._videoFileId = videoFileId","       this._title = title","       this._description = description","       this._caption = caption","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be video","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * A valid file identifier for the video file","    * @returns {string}","   */","   get videoFileId() {","       return this._videoFileId","   }","","   /**","    * Title for the result","    * @returns {string}","   */","   get title() {","       return this._title","   }","","   /**","    * Short description of the result","    * @returns {string|null}","   */","   get description() {","       return this._description","   }","","   /**","    * Caption of the video to be sent, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the video","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultCachedVideo}","    */","   static deserialize(raw) {","      return new InlineQueryResultCachedVideo(","          raw['type'], ","          raw['id'], ","          raw['video_file_id'], ","          raw['title'], ","          raw['description'] ? raw['description'] : null, ","          raw['caption'] ? raw['caption'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          video_file_id: this.videoFileId ? this.videoFileId : undefined, ","          title: this.title ? this.title : undefined, ","          description: this.description ? this.description : undefined, ","          caption: this.caption ? this.caption : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultCachedVideo"],"l":{"3":1,"4":1,"5":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"48":0,"56":0,"64":0,"72":0,"80":0,"88":0,"96":0,"104":0,"113":0,"130":0,"147":0,"151":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedVoice.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedVoice.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":14},"end":{"line":29,"column":5}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":11},"end":{"line":44,"column":14}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":9},"end":{"line":52,"column":12}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":18},"end":{"line":60,"column":21}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":12},"end":{"line":68,"column":15}}},"6":{"name":"(anonymous_6)","line":76,"loc":{"start":{"line":76,"column":14},"end":{"line":76,"column":17}}},"7":{"name":"(anonymous_7)","line":84,"loc":{"start":{"line":84,"column":18},"end":{"line":84,"column":21}}},"8":{"name":"(anonymous_8)","line":92,"loc":{"start":{"line":92,"column":26},"end":{"line":92,"column":29}}},"9":{"name":"(anonymous_9)","line":101,"loc":{"start":{"line":101,"column":21},"end":{"line":101,"column":27}}},"10":{"name":"(anonymous_10)","line":117,"loc":{"start":{"line":117,"column":12},"end":{"line":117,"column":15}}},"11":{"name":"(anonymous_11)","line":133,"loc":{"start":{"line":133,"column":9},"end":{"line":133,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":30,"column":7},"end":{"line":30,"column":14}},"5":{"start":{"line":31,"column":7},"end":{"line":31,"column":24}},"6":{"start":{"line":32,"column":7},"end":{"line":32,"column":20}},"7":{"start":{"line":33,"column":7},"end":{"line":33,"column":38}},"8":{"start":{"line":34,"column":7},"end":{"line":34,"column":26}},"9":{"start":{"line":35,"column":7},"end":{"line":35,"column":30}},"10":{"start":{"line":36,"column":7},"end":{"line":36,"column":38}},"11":{"start":{"line":37,"column":7},"end":{"line":37,"column":54}},"12":{"start":{"line":45,"column":7},"end":{"line":45,"column":24}},"13":{"start":{"line":53,"column":7},"end":{"line":53,"column":22}},"14":{"start":{"line":61,"column":7},"end":{"line":61,"column":31}},"15":{"start":{"line":69,"column":7},"end":{"line":69,"column":25}},"16":{"start":{"line":77,"column":7},"end":{"line":77,"column":27}},"17":{"start":{"line":85,"column":7},"end":{"line":85,"column":31}},"18":{"start":{"line":93,"column":7},"end":{"line":93,"column":39}},"19":{"start":{"line":102,"column":6},"end":{"line":110,"column":7}},"20":{"start":{"line":118,"column":6},"end":{"line":126,"column":7}},"21":{"start":{"line":134,"column":6},"end":{"line":134,"column":29}},"22":{"start":{"line":138,"column":0},"end":{"line":138,"column":45}}},"branchMap":{"1":{"line":107,"type":"cond-expr","locations":[{"start":{"line":107,"column":27},"end":{"line":107,"column":41}},{"start":{"line":107,"column":44},"end":{"line":107,"column":48}}]},"2":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":32},"end":{"line":108,"column":85}},{"start":{"line":108,"column":88},"end":{"line":108,"column":92}}]},"3":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":41},"end":{"line":109,"column":102}},{"start":{"line":109,"column":105},"end":{"line":109,"column":109}}]},"4":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":28},"end":{"line":119,"column":37}},{"start":{"line":119,"column":40},"end":{"line":119,"column":49}}]},"5":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":24},"end":{"line":120,"column":31}},{"start":{"line":120,"column":34},"end":{"line":120,"column":43}}]},"6":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":44},"end":{"line":121,"column":60}},{"start":{"line":121,"column":63},"end":{"line":121,"column":72}}]},"7":{"line":122,"type":"cond-expr","locations":[{"start":{"line":122,"column":30},"end":{"line":122,"column":40}},{"start":{"line":122,"column":43},"end":{"line":122,"column":52}}]},"8":{"line":123,"type":"cond-expr","locations":[{"start":{"line":123,"column":34},"end":{"line":123,"column":46}},{"start":{"line":123,"column":49},"end":{"line":123,"column":58}}]},"9":{"line":124,"type":"cond-expr","locations":[{"start":{"line":124,"column":43},"end":{"line":124,"column":71}},{"start":{"line":124,"column":74},"end":{"line":124,"column":83}}]},"10":{"line":125,"type":"cond-expr","locations":[{"start":{"line":125,"column":60},"end":{"line":125,"column":96}},{"start":{"line":125,"column":99},"end":{"line":125,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to a voice message stored on the Telegram servers. By default, this voice message will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the voice message."," */","","class InlineQueryResultCachedVoice extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} voiceFileId","    * @param {string} title","    * @param {string|null} [caption]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(","     type, ","     id, ","     voiceFileId, ","     title, ","     caption, ","     replyMarkup, ","     inputMessageContent","   ) {","       super()","       this._type = type","       this._id = id","       this._voiceFileId = voiceFileId","       this._title = title","       this._caption = caption","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be voice","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * A valid file identifier for the voice message","    * @returns {string}","   */","   get voiceFileId() {","       return this._voiceFileId","   }","","   /**","    * Voice message title","    * @returns {string}","   */","   get title() {","       return this._title","   }","","   /**","    * Caption, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the voice message","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultCachedVoice}","    */","   static deserialize(raw) {","      return new InlineQueryResultCachedVoice(","          raw['type'], ","          raw['id'], ","          raw['voice_file_id'], ","          raw['title'], ","          raw['caption'] ? raw['caption'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          voice_file_id: this.voiceFileId ? this.voiceFileId : undefined, ","          title: this.title ? this.title : undefined, ","          caption: this.caption ? this.caption : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultCachedVoice"],"l":{"3":1,"4":1,"5":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"45":0,"53":0,"61":0,"69":0,"77":0,"85":0,"93":0,"102":0,"118":0,"134":0,"138":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedAudio.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InlineQueryResultCachedAudio.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":14},"end":{"line":20,"column":81}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":11},"end":{"line":34,"column":14}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":9},"end":{"line":42,"column":12}}},"4":{"name":"(anonymous_4)","line":50,"loc":{"start":{"line":50,"column":18},"end":{"line":50,"column":21}}},"5":{"name":"(anonymous_5)","line":58,"loc":{"start":{"line":58,"column":14},"end":{"line":58,"column":17}}},"6":{"name":"(anonymous_6)","line":66,"loc":{"start":{"line":66,"column":18},"end":{"line":66,"column":21}}},"7":{"name":"(anonymous_7)","line":74,"loc":{"start":{"line":74,"column":26},"end":{"line":74,"column":29}}},"8":{"name":"(anonymous_8)","line":83,"loc":{"start":{"line":83,"column":21},"end":{"line":83,"column":27}}},"9":{"name":"(anonymous_9)","line":98,"loc":{"start":{"line":98,"column":12},"end":{"line":98,"column":15}}},"10":{"name":"(anonymous_10)","line":113,"loc":{"start":{"line":113,"column":9},"end":{"line":113,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":21,"column":7},"end":{"line":21,"column":14}},"5":{"start":{"line":22,"column":7},"end":{"line":22,"column":24}},"6":{"start":{"line":23,"column":7},"end":{"line":23,"column":20}},"7":{"start":{"line":24,"column":7},"end":{"line":24,"column":38}},"8":{"start":{"line":25,"column":7},"end":{"line":25,"column":30}},"9":{"start":{"line":26,"column":7},"end":{"line":26,"column":38}},"10":{"start":{"line":27,"column":7},"end":{"line":27,"column":54}},"11":{"start":{"line":35,"column":7},"end":{"line":35,"column":24}},"12":{"start":{"line":43,"column":7},"end":{"line":43,"column":22}},"13":{"start":{"line":51,"column":7},"end":{"line":51,"column":31}},"14":{"start":{"line":59,"column":7},"end":{"line":59,"column":27}},"15":{"start":{"line":67,"column":7},"end":{"line":67,"column":31}},"16":{"start":{"line":75,"column":7},"end":{"line":75,"column":39}},"17":{"start":{"line":84,"column":6},"end":{"line":91,"column":7}},"18":{"start":{"line":99,"column":6},"end":{"line":106,"column":7}},"19":{"start":{"line":114,"column":6},"end":{"line":114,"column":29}},"20":{"start":{"line":118,"column":0},"end":{"line":118,"column":45}}},"branchMap":{"1":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":27},"end":{"line":88,"column":41}},{"start":{"line":88,"column":44},"end":{"line":88,"column":48}}]},"2":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":32},"end":{"line":89,"column":85}},{"start":{"line":89,"column":88},"end":{"line":89,"column":92}}]},"3":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":41},"end":{"line":90,"column":102}},{"start":{"line":90,"column":105},"end":{"line":90,"column":109}}]},"4":{"line":100,"type":"cond-expr","locations":[{"start":{"line":100,"column":28},"end":{"line":100,"column":37}},{"start":{"line":100,"column":40},"end":{"line":100,"column":49}}]},"5":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":24},"end":{"line":101,"column":31}},{"start":{"line":101,"column":34},"end":{"line":101,"column":43}}]},"6":{"line":102,"type":"cond-expr","locations":[{"start":{"line":102,"column":44},"end":{"line":102,"column":60}},{"start":{"line":102,"column":63},"end":{"line":102,"column":72}}]},"7":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":34},"end":{"line":103,"column":46}},{"start":{"line":103,"column":49},"end":{"line":103,"column":58}}]},"8":{"line":104,"type":"cond-expr","locations":[{"start":{"line":104,"column":43},"end":{"line":104,"column":71}},{"start":{"line":104,"column":74},"end":{"line":104,"column":83}}]},"9":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":60},"end":{"line":105,"column":96}},{"start":{"line":105,"column":99},"end":{"line":105,"column":108}}]}},"code":["'use strict'","","const InlineKeyboardMarkup = require('./InlineKeyboardMarkup')","const InputMessageContent = require('./InputMessageContent')","const InlineQueryResult = require('./InlineQueryResult')","/**"," * Represents a link to an mp3 audio file stored on the Telegram servers. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio."," */","","class InlineQueryResultCachedAudio extends InlineQueryResult {","   /**","    *","    * @param {string} type","    * @param {string} id","    * @param {string} audioFileId","    * @param {string|null} [caption]","    * @param {InlineKeyboardMarkup|null} [replyMarkup]","    * @param {InputMessageContent|null} [inputMessageContent]","   */","   constructor(type, id, audioFileId, caption, replyMarkup, inputMessageContent) {","       super()","       this._type = type","       this._id = id","       this._audioFileId = audioFileId","       this._caption = caption","       this._replyMarkup = replyMarkup","       this._inputMessageContent = inputMessageContent","   }","","   /**","    * Type of the result, must be audio","    * @returns {string}","   */","   get type() {","       return this._type","   }","","   /**","    * Unique identifier for this result, 1-64 bytes","    * @returns {string}","   */","   get id() {","       return this._id","   }","","   /**","    * A valid file identifier for the audio file","    * @returns {string}","   */","   get audioFileId() {","       return this._audioFileId","   }","","   /**","    * Caption, 0-200 characters","    * @returns {string|null}","   */","   get caption() {","       return this._caption","   }","","   /**","    * Inline keyboard attached to the message","    * @returns {InlineKeyboardMarkup|null}","   */","   get replyMarkup() {","       return this._replyMarkup","   }","","   /**","    * Content of the message to be sent instead of the audio","    * @returns {InputMessageContent|null}","   */","   get inputMessageContent() {","       return this._inputMessageContent","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InlineQueryResultCachedAudio}","    */","   static deserialize(raw) {","      return new InlineQueryResultCachedAudio(","          raw['type'], ","          raw['id'], ","          raw['audio_file_id'], ","          raw['caption'] ? raw['caption'] : null, ","          raw['reply_markup'] ? InlineKeyboardMarkup.deserialize(raw['reply_markup']) : null, ","          raw['input_message_content'] ? InputMessageContent.deserialize(raw['input_message_content']) : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          type: this.type ? this.type : undefined, ","          id: this.id ? this.id : undefined, ","          audio_file_id: this.audioFileId ? this.audioFileId : undefined, ","          caption: this.caption ? this.caption : undefined, ","          reply_markup: this.replyMarkup ? this.replyMarkup.serialize() : undefined, ","          input_message_content: this.inputMessageContent ? this.inputMessageContent.serialize() : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InlineQueryResultCachedAudio"],"l":{"3":1,"4":1,"5":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"35":0,"43":0,"51":0,"59":0,"67":0,"75":0,"84":0,"99":0,"114":0,"118":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InputTextMessageContent.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InputTextMessageContent.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":62}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":18},"end":{"line":26,"column":21}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":16},"end":{"line":34,"column":19}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":28},"end":{"line":42,"column":31}}},"5":{"name":"(anonymous_5)","line":51,"loc":{"start":{"line":51,"column":21},"end":{"line":51,"column":27}}},"6":{"name":"(anonymous_6)","line":59,"loc":{"start":{"line":59,"column":12},"end":{"line":59,"column":15}}},"7":{"name":"(anonymous_7)","line":71,"loc":{"start":{"line":71,"column":9},"end":{"line":71,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"2":{"start":{"line":16,"column":7},"end":{"line":16,"column":14}},"3":{"start":{"line":17,"column":7},"end":{"line":17,"column":38}},"4":{"start":{"line":18,"column":7},"end":{"line":18,"column":34}},"5":{"start":{"line":19,"column":7},"end":{"line":19,"column":58}},"6":{"start":{"line":27,"column":7},"end":{"line":27,"column":31}},"7":{"start":{"line":35,"column":7},"end":{"line":35,"column":29}},"8":{"start":{"line":43,"column":7},"end":{"line":43,"column":41}},"9":{"start":{"line":52,"column":6},"end":{"line":52,"column":181}},"10":{"start":{"line":60,"column":6},"end":{"line":64,"column":7}},"11":{"start":{"line":72,"column":6},"end":{"line":72,"column":29}},"12":{"start":{"line":76,"column":0},"end":{"line":76,"column":40}}},"branchMap":{"1":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":82},"end":{"line":52,"column":99}},{"start":{"line":52,"column":102},"end":{"line":52,"column":106}}]},"2":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":142},"end":{"line":52,"column":173}},{"start":{"line":52,"column":176},"end":{"line":52,"column":180}}]},"3":{"line":61,"type":"cond-expr","locations":[{"start":{"line":61,"column":43},"end":{"line":61,"column":59}},{"start":{"line":61,"column":62},"end":{"line":61,"column":71}}]},"4":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":39},"end":{"line":62,"column":53}},{"start":{"line":62,"column":56},"end":{"line":62,"column":65}}]},"5":{"line":63,"type":"cond-expr","locations":[{"start":{"line":63,"column":65},"end":{"line":63,"column":91}},{"start":{"line":63,"column":94},"end":{"line":63,"column":103}}]}},"code":["'use strict'","","const InputMessageContent = require('./InputMessageContent')","/**"," * Represents the content of a text message to be sent as the result of an inline query. "," */","","class InputTextMessageContent extends InputMessageContent {","   /**","    *","    * @param {string} messageText","    * @param {string|null} [parseMode]","    * @param {boolean|null} [disableWebPagePreview]","   */","   constructor(messageText, parseMode, disableWebPagePreview) {","       super()","       this._messageText = messageText","       this._parseMode = parseMode","       this._disableWebPagePreview = disableWebPagePreview","   }","","   /**","    * Text of the message to be sent, 1-4096 characters","    * @returns {string}","   */","   get messageText() {","       return this._messageText","   }","","   /**","    * Send Markdown or HTML, if you want Telegram apps to show bold, italic, fixed-width text or inline URLs in your bot's message.","    * @returns {string|null}","   */","   get parseMode() {","       return this._parseMode","   }","","   /**","    * Disables link previews for links in the sent message","    * @returns {boolean|null}","   */","   get disableWebPagePreview() {","       return this._disableWebPagePreview","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InputTextMessageContent}","    */","   static deserialize(raw) {","      return new InputTextMessageContent(raw['message_text'], raw['parse_mode'] ? raw['parse_mode'] : null, raw['disable_web_page_preview'] ? raw['disable_web_page_preview'] : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          message_text: this.messageText ? this.messageText : undefined, ","          parse_mode: this.parseMode ? this.parseMode : undefined, ","          disable_web_page_preview: this.disableWebPagePreview ? this.disableWebPagePreview : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InputTextMessageContent"],"l":{"3":1,"16":0,"17":0,"18":0,"19":0,"27":0,"35":0,"43":0,"52":0,"60":0,"72":0,"76":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InputLocationMessageContent.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InputLocationMessageContent.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":14},"end":{"line":14,"column":36}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":15},"end":{"line":24,"column":18}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":16},"end":{"line":32,"column":19}}},"4":{"name":"(anonymous_4)","line":41,"loc":{"start":{"line":41,"column":21},"end":{"line":41,"column":27}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":12},"end":{"line":49,"column":15}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":9},"end":{"line":60,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"2":{"start":{"line":15,"column":7},"end":{"line":15,"column":14}},"3":{"start":{"line":16,"column":7},"end":{"line":16,"column":32}},"4":{"start":{"line":17,"column":7},"end":{"line":17,"column":34}},"5":{"start":{"line":25,"column":7},"end":{"line":25,"column":28}},"6":{"start":{"line":33,"column":7},"end":{"line":33,"column":29}},"7":{"start":{"line":42,"column":6},"end":{"line":42,"column":79}},"8":{"start":{"line":50,"column":6},"end":{"line":53,"column":7}},"9":{"start":{"line":61,"column":6},"end":{"line":61,"column":29}},"10":{"start":{"line":65,"column":0},"end":{"line":65,"column":44}}},"branchMap":{"1":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":36},"end":{"line":51,"column":49}},{"start":{"line":51,"column":52},"end":{"line":51,"column":61}}]},"2":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":38},"end":{"line":52,"column":52}},{"start":{"line":52,"column":55},"end":{"line":52,"column":64}}]}},"code":["'use strict'","","const InputMessageContent = require('./InputMessageContent')","/**"," * Represents the content of a location message to be sent as the result of an inline query. "," */","","class InputLocationMessageContent extends InputMessageContent {","   /**","    *","    * @param {number} latitude","    * @param {number} longitude","   */","   constructor(latitude, longitude) {","       super()","       this._latitude = latitude","       this._longitude = longitude","   }","","   /**","    * Latitude of the location in degrees","    * @returns {number}","   */","   get latitude() {","       return this._latitude","   }","","   /**","    * Longitude of the location in degrees","    * @returns {number}","   */","   get longitude() {","       return this._longitude","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InputLocationMessageContent}","    */","   static deserialize(raw) {","      return new InputLocationMessageContent(raw['latitude'], raw['longitude'])","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          latitude: this.latitude ? this.latitude : undefined, ","          longitude: this.longitude ? this.longitude : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InputLocationMessageContent"],"l":{"3":1,"15":0,"16":0,"17":0,"25":0,"33":0,"42":0,"50":0,"61":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InputVenueMessageContent.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InputVenueMessageContent.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":66}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":15},"end":{"line":30,"column":18}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":16},"end":{"line":38,"column":19}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":12},"end":{"line":46,"column":15}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":14},"end":{"line":54,"column":17}}},"6":{"name":"(anonymous_6)","line":62,"loc":{"start":{"line":62,"column":19},"end":{"line":62,"column":22}}},"7":{"name":"(anonymous_7)","line":71,"loc":{"start":{"line":71,"column":21},"end":{"line":71,"column":27}}},"8":{"name":"(anonymous_8)","line":85,"loc":{"start":{"line":85,"column":12},"end":{"line":85,"column":15}}},"9":{"name":"(anonymous_9)","line":99,"loc":{"start":{"line":99,"column":9},"end":{"line":99,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"2":{"start":{"line":18,"column":7},"end":{"line":18,"column":14}},"3":{"start":{"line":19,"column":7},"end":{"line":19,"column":32}},"4":{"start":{"line":20,"column":7},"end":{"line":20,"column":34}},"5":{"start":{"line":21,"column":7},"end":{"line":21,"column":26}},"6":{"start":{"line":22,"column":7},"end":{"line":22,"column":30}},"7":{"start":{"line":23,"column":7},"end":{"line":23,"column":40}},"8":{"start":{"line":31,"column":7},"end":{"line":31,"column":28}},"9":{"start":{"line":39,"column":7},"end":{"line":39,"column":29}},"10":{"start":{"line":47,"column":7},"end":{"line":47,"column":25}},"11":{"start":{"line":55,"column":7},"end":{"line":55,"column":27}},"12":{"start":{"line":63,"column":7},"end":{"line":63,"column":32}},"13":{"start":{"line":72,"column":6},"end":{"line":78,"column":7}},"14":{"start":{"line":86,"column":6},"end":{"line":92,"column":7}},"15":{"start":{"line":100,"column":6},"end":{"line":100,"column":29}},"16":{"start":{"line":104,"column":0},"end":{"line":104,"column":41}}},"branchMap":{"1":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":33},"end":{"line":77,"column":53}},{"start":{"line":77,"column":56},"end":{"line":77,"column":60}}]},"2":{"line":87,"type":"cond-expr","locations":[{"start":{"line":87,"column":36},"end":{"line":87,"column":49}},{"start":{"line":87,"column":52},"end":{"line":87,"column":61}}]},"3":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":38},"end":{"line":88,"column":52}},{"start":{"line":88,"column":55},"end":{"line":88,"column":64}}]},"4":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":30},"end":{"line":89,"column":40}},{"start":{"line":89,"column":43},"end":{"line":89,"column":52}}]},"5":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":34},"end":{"line":90,"column":46}},{"start":{"line":90,"column":49},"end":{"line":90,"column":58}}]},"6":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":45},"end":{"line":91,"column":62}},{"start":{"line":91,"column":65},"end":{"line":91,"column":74}}]}},"code":["'use strict'","","const InputMessageContent = require('./InputMessageContent')","/**"," * Represents the content of a venue message to be sent as the result of an inline query. "," */","","class InputVenueMessageContent extends InputMessageContent {","   /**","    *","    * @param {number} latitude","    * @param {number} longitude","    * @param {string} title","    * @param {string} address","    * @param {string|null} [foursquareId]","   */","   constructor(latitude, longitude, title, address, foursquareId) {","       super()","       this._latitude = latitude","       this._longitude = longitude","       this._title = title","       this._address = address","       this._foursquareId = foursquareId","   }","","   /**","    * Latitude of the venue in degrees","    * @returns {number}","   */","   get latitude() {","       return this._latitude","   }","","   /**","    * Longitude of the venue in degrees","    * @returns {number}","   */","   get longitude() {","       return this._longitude","   }","","   /**","    * Name of the venue","    * @returns {string}","   */","   get title() {","       return this._title","   }","","   /**","    * Address of the venue","    * @returns {string}","   */","   get address() {","       return this._address","   }","","   /**","    * Foursquare identifier of the venue, if known","    * @returns {string|null}","   */","   get foursquareId() {","       return this._foursquareId","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InputVenueMessageContent}","    */","   static deserialize(raw) {","      return new InputVenueMessageContent(","          raw['latitude'], ","          raw['longitude'], ","          raw['title'], ","          raw['address'], ","          raw['foursquare_id'] ? raw['foursquare_id'] : null","      )","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          latitude: this.latitude ? this.latitude : undefined, ","          longitude: this.longitude ? this.longitude : undefined, ","          title: this.title ? this.title : undefined, ","          address: this.address ? this.address : undefined, ","          foursquare_id: this.foursquareId ? this.foursquareId : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InputVenueMessageContent"],"l":{"3":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"31":0,"39":0,"47":0,"55":0,"63":0,"72":0,"86":0,"100":0,"104":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InputContactMessageContent.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/InputContactMessageContent.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":49}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":18},"end":{"line":26,"column":21}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":16},"end":{"line":34,"column":19}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":15},"end":{"line":42,"column":18}}},"5":{"name":"(anonymous_5)","line":51,"loc":{"start":{"line":51,"column":21},"end":{"line":51,"column":27}}},"6":{"name":"(anonymous_6)","line":59,"loc":{"start":{"line":59,"column":12},"end":{"line":59,"column":15}}},"7":{"name":"(anonymous_7)","line":71,"loc":{"start":{"line":71,"column":9},"end":{"line":71,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"2":{"start":{"line":16,"column":7},"end":{"line":16,"column":14}},"3":{"start":{"line":17,"column":7},"end":{"line":17,"column":38}},"4":{"start":{"line":18,"column":7},"end":{"line":18,"column":34}},"5":{"start":{"line":19,"column":7},"end":{"line":19,"column":32}},"6":{"start":{"line":27,"column":7},"end":{"line":27,"column":31}},"7":{"start":{"line":35,"column":7},"end":{"line":35,"column":29}},"8":{"start":{"line":43,"column":7},"end":{"line":43,"column":28}},"9":{"start":{"line":52,"column":6},"end":{"line":52,"column":127}},"10":{"start":{"line":60,"column":6},"end":{"line":64,"column":7}},"11":{"start":{"line":72,"column":6},"end":{"line":72,"column":29}},"12":{"start":{"line":76,"column":0},"end":{"line":76,"column":43}}},"branchMap":{"1":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":103},"end":{"line":52,"column":119}},{"start":{"line":52,"column":122},"end":{"line":52,"column":126}}]},"2":{"line":61,"type":"cond-expr","locations":[{"start":{"line":61,"column":43},"end":{"line":61,"column":59}},{"start":{"line":61,"column":62},"end":{"line":61,"column":71}}]},"3":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":39},"end":{"line":62,"column":53}},{"start":{"line":62,"column":56},"end":{"line":62,"column":65}}]},"4":{"line":63,"type":"cond-expr","locations":[{"start":{"line":63,"column":37},"end":{"line":63,"column":50}},{"start":{"line":63,"column":53},"end":{"line":63,"column":62}}]}},"code":["'use strict'","","const InputMessageContent = require('./InputMessageContent')","/**"," * Represents the content of a contact message to be sent as the result of an inline query. "," */","","class InputContactMessageContent extends InputMessageContent {","   /**","    *","    * @param {string} phoneNumber","    * @param {string} firstName","    * @param {string|null} [lastName]","   */","   constructor(phoneNumber, firstName, lastName) {","       super()","       this._phoneNumber = phoneNumber","       this._firstName = firstName","       this._lastName = lastName","   }","","   /**","    * Contact's phone number","    * @returns {string}","   */","   get phoneNumber() {","       return this._phoneNumber","   }","","   /**","    * Contact's first name","    * @returns {string}","   */","   get firstName() {","       return this._firstName","   }","","   /**","    * Contact's last name","    * @returns {string|null}","   */","   get lastName() {","       return this._lastName","   }","","   /**","    *","    * @param {Object} raw","    * @returns {InputContactMessageContent}","    */","   static deserialize(raw) {","      return new InputContactMessageContent(raw['phone_number'], raw['first_name'], raw['last_name'] ? raw['last_name'] : null)","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          phone_number: this.phoneNumber ? this.phoneNumber : undefined, ","          first_name: this.firstName ? this.firstName : undefined, ","          last_name: this.lastName ? this.lastName : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = InputContactMessageContent"],"l":{"3":1,"16":0,"17":0,"18":0,"19":0,"27":0,"35":0,"43":0,"52":0,"60":0,"72":0,"76":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/GameHighScore.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/models/GameHighScore.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":14},"end":{"line":16,"column":38}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":15},"end":{"line":26,"column":18}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":11},"end":{"line":34,"column":14}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":12},"end":{"line":42,"column":15}}},"5":{"name":"(anonymous_5)","line":51,"loc":{"start":{"line":51,"column":21},"end":{"line":51,"column":27}}},"6":{"name":"(anonymous_6)","line":59,"loc":{"start":{"line":59,"column":12},"end":{"line":59,"column":15}}},"7":{"name":"(anonymous_7)","line":71,"loc":{"start":{"line":71,"column":9},"end":{"line":71,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":17,"column":7},"end":{"line":17,"column":32}},"3":{"start":{"line":18,"column":7},"end":{"line":18,"column":24}},"4":{"start":{"line":19,"column":7},"end":{"line":19,"column":26}},"5":{"start":{"line":27,"column":7},"end":{"line":27,"column":28}},"6":{"start":{"line":35,"column":7},"end":{"line":35,"column":24}},"7":{"start":{"line":43,"column":7},"end":{"line":43,"column":25}},"8":{"start":{"line":52,"column":6},"end":{"line":52,"column":113}},"9":{"start":{"line":60,"column":6},"end":{"line":64,"column":7}},"10":{"start":{"line":72,"column":6},"end":{"line":72,"column":29}},"11":{"start":{"line":76,"column":0},"end":{"line":76,"column":30}}},"branchMap":{"1":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":62},"end":{"line":52,"column":91}},{"start":{"line":52,"column":94},"end":{"line":52,"column":98}}]},"2":{"line":61,"type":"cond-expr","locations":[{"start":{"line":61,"column":36},"end":{"line":61,"column":49}},{"start":{"line":61,"column":52},"end":{"line":61,"column":61}}]},"3":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":28},"end":{"line":62,"column":49}},{"start":{"line":62,"column":52},"end":{"line":62,"column":61}}]},"4":{"line":63,"type":"cond-expr","locations":[{"start":{"line":63,"column":30},"end":{"line":63,"column":40}},{"start":{"line":63,"column":43},"end":{"line":63,"column":52}}]}},"code":["'use strict'","","const User = require('./User')","","/**"," * This object represents one row of the high scores table for a game."," */","","class GameHighScore {","   /**","    *","    * @param {number} position","    * @param {User} user","    * @param {number} score","   */","   constructor(position, user, score) {","       this._position = position","       this._user = user","       this._score = score","   }","","   /**","    * Position in high score table for the game","    * @returns {number}","   */","   get position() {","       return this._position","   }","","   /**","    * User","    * @returns {User}","   */","   get user() {","       return this._user","   }","","   /**","    * Score","    * @returns {number}","   */","   get score() {","       return this._score","   }","","   /**","    *","    * @param {Object} raw","    * @returns {GameHighScore}","    */","   static deserialize(raw) {","      return new GameHighScore(raw['position'], raw['user'] ? User.deserialize(raw['user']) : null, raw['score'])","   }","","   /**","    *","    * @returns {Object}","    */","   serialize() {","      return { ","          position: this.position ? this.position : undefined, ","          user: this.user ? this.user.serialize() : undefined, ","          score: this.score ? this.score : undefined","      }","   }","","   /**","    *","    * @returns {string}","    */","   toJSON() {","      return this.serialize()","   }","}","","module.exports = GameHighScore"],"l":{"3":1,"17":0,"18":0,"19":0,"27":0,"35":0,"43":0,"52":0,"60":0,"72":0,"76":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/api/InputFile.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/api/InputFile.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"b":{"1":[0,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":47,"loc":{"start":{"line":47,"column":15},"end":{"line":47,"column":53}}},"2":{"name":"(anonymous_2)","line":60,"loc":{"start":{"line":60,"column":18},"end":{"line":60,"column":33}}},"3":{"name":"(anonymous_3)","line":114,"loc":{"start":{"line":114,"column":22},"end":{"line":114,"column":28}}},"4":{"name":"(anonymous_4)","line":134,"loc":{"start":{"line":134,"column":15},"end":{"line":134,"column":20}}},"5":{"name":"(anonymous_5)","line":144,"loc":{"start":{"line":144,"column":21},"end":{"line":144,"column":28}}},"6":{"name":"(anonymous_6)","line":155,"loc":{"start":{"line":155,"column":16},"end":{"line":155,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"4":{"start":{"line":7,"column":0},"end":{"line":28,"column":1}},"5":{"start":{"line":30,"column":0},"end":{"line":30,"column":30}},"6":{"start":{"line":32,"column":0},"end":{"line":34,"column":1}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":21}},"8":{"start":{"line":48,"column":8},"end":{"line":48,"column":29}},"9":{"start":{"line":49,"column":8},"end":{"line":49,"column":33}},"10":{"start":{"line":50,"column":8},"end":{"line":50,"column":31}},"11":{"start":{"line":51,"column":8},"end":{"line":51,"column":33}},"12":{"start":{"line":61,"column":8},"end":{"line":105,"column":10}},"13":{"start":{"line":62,"column":12},"end":{"line":66,"column":13}},"14":{"start":{"line":63,"column":16},"end":{"line":63,"column":43}},"15":{"start":{"line":65,"column":16},"end":{"line":65,"column":60}},"16":{"start":{"line":68,"column":12},"end":{"line":92,"column":13}},"17":{"start":{"line":69,"column":16},"end":{"line":69,"column":104}},"18":{"start":{"line":70,"column":16},"end":{"line":70,"column":62}},"19":{"start":{"line":72,"column":16},"end":{"line":74,"column":17}},"20":{"start":{"line":73,"column":20},"end":{"line":73,"column":39}},"21":{"start":{"line":76,"column":16},"end":{"line":86,"column":18}},"22":{"start":{"line":77,"column":20},"end":{"line":77,"column":41}},"23":{"start":{"line":79,"column":20},"end":{"line":83,"column":21}},"24":{"start":{"line":85,"column":20},"end":{"line":85,"column":94}},"25":{"start":{"line":88,"column":16},"end":{"line":91,"column":18}},"26":{"start":{"line":94,"column":12},"end":{"line":104,"column":13}},"27":{"start":{"line":95,"column":16},"end":{"line":95,"column":37}},"28":{"start":{"line":97,"column":16},"end":{"line":101,"column":17}},"29":{"start":{"line":103,"column":16},"end":{"line":103,"column":65}},"30":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"31":{"start":{"line":116,"column":12},"end":{"line":116,"column":38}},"32":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"33":{"start":{"line":120,"column":12},"end":{"line":120,"column":57}},"34":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":49}},"36":{"start":{"line":135,"column":8},"end":{"line":135,"column":50}},"37":{"start":{"line":145,"column":8},"end":{"line":145,"column":52}},"38":{"start":{"line":156,"column":8},"end":{"line":156,"column":55}},"39":{"start":{"line":160,"column":0},"end":{"line":160,"column":26}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":0},"end":{"line":32,"column":0}},{"start":{"line":32,"column":0},"end":{"line":32,"column":0}}]},"2":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":12}},{"start":{"line":62,"column":12},"end":{"line":62,"column":12}}]},"3":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":12},"end":{"line":68,"column":12}},{"start":{"line":68,"column":12},"end":{"line":68,"column":12}}]},"4":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":34},"end":{"line":81,"column":48}},{"start":{"line":81,"column":52},"end":{"line":81,"column":81}}]},"5":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":12}},{"start":{"line":94,"column":12},"end":{"line":94,"column":12}}]},"6":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":30},"end":{"line":99,"column":59}},{"start":{"line":99,"column":63},"end":{"line":99,"column":92}}]},"7":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":8}},{"start":{"line":115,"column":8},"end":{"line":115,"column":8}}]},"8":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":8}},{"start":{"line":119,"column":8},"end":{"line":119,"column":8}}]},"9":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]}},"code":["'use strict'","","const fs = require(\"fs\")","const req = require('tiny_request')","const path = require('path')","","const STANDARD_TYPES = {","    photo: {","        filename: 'photo.png',","        type: 'image/png'","    },","    audio: {","        filename: 'audio.mp3',","        type: 'audio/mpeg'","    },","    document: {","        filename: 'data.dat',","        type: ''","    },","    sticker: {","        filename: 'sticker.webp',","        type: ''","    },","    video: {","        filename: 'video.mp4',","        type: 'audio/mp4'","    }","}","","let dir = __dirname + '/temp/'","","if (!fs.existsSync(dir)) {","    fs.mkdirSync(dir)","}","","/**"," * This class represents any file that's going be send to Telegram"," */","class InputFile {","    /**","     * @param {string|null} fileId","     * @param {string|null} filePath","     * @param {string|null} fileUrl","     * @param {string|null} fileName","     * @private","     */","    constructor(fileId, filePath, fileUrl, fileName) {","        this._fileId = fileId","        this._filePath = filePath","        this._fileUrl = fileUrl","        this._fileName = fileName","    }","","    /**","     *","     * @param {string} type","     * @param {Object} params","     * @returns {Promise<Object>}","     */","    prepareRequest(type, params) {","        return new Promise((resolve) => {","            if (this._fileId) {","                params[type] = this._fileId","","                resolve({ params: params, multipart: null })","            }","","            if (this._fileUrl) {","                const filePath = __dirname + '/temp/' + Math.random().toString(36).substring(7) + '.dat'","                const wstream = fs.createWriteStream(filePath)","","                const sendedCallback = () => {","                    fs.unlink(filePath)","                }","","                wstream.on('finish', () => {","                    const multipart = { }","","                    multipart[type] = {","                        value: fs.createReadStream(filePath),","                        filename: this._fileName || STANDARD_TYPES[type].filename,","                        contentType: STANDARD_TYPES[type].type","                    }","","                    resolve({ params: params, multipart: multipart, callback: sendedCallback})","                })","","                req.get({","                    url: this._fileUrl,","                    pipe: wstream","                })","            }","","            if (this._filePath) {","                const multipart = { }","","                multipart[type] = {","                    value: fs.createReadStream(this._filePath),","                    filename: path.basename(this._filePath) || STANDARD_TYPES[type].filename,","                    contentType: STANDARD_TYPES[type].type","                }","","                resolve({ params: params, multipart: multipart })","            }","        })","    }","","    /**","     * Creates InputFile from plain Object","     *","     * @param {Object|string} raw","     * @returns {InputFile}","     */","    static deserialize(raw) {","        if (typeof raw == 'string') {","            return InputFile.byId(raw)","        }","","        if (raw.url) {","            return InputFile.byUrl(raw.url, raw.filename)","        }","","        if (raw.path) {","            return InputFile.byFilePath(raw.path)","        }","    }","","    /**","     * Creates InputFile by file id","     *","     * @param {string} id","     * @returns {InputFile}","     */","    static byId(id) {","        return new InputFile(id, null, null, null)","    }","","    /**","     * Creates InputFile by file path","     *","     * @param {string} path","     * @returns {InputFile}","     */","    static byFilePath(path) {","        return new InputFile(null, path, null, null)","    }","","    /**","     * Creates InputFile by url","     *","     * @param {string} url","     * @param {string} [fileName]","     * @returns {InputFile}","     */","    static byUrl(url, fileName) {","        return new InputFile(null, null, url, fileName)","    }","}","","module.exports = InputFile"],"l":{"3":1,"4":1,"5":1,"7":1,"30":1,"32":1,"33":0,"48":0,"49":0,"50":0,"51":0,"61":0,"62":0,"63":0,"65":0,"68":0,"69":0,"70":0,"72":0,"73":0,"76":0,"77":0,"79":0,"85":0,"88":0,"94":0,"95":0,"97":0,"103":0,"115":0,"116":0,"119":0,"120":0,"123":0,"124":0,"135":0,"145":0,"156":0,"160":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/api/TelegramApiError.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/api/TelegramApiError.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":15},"end":{"line":12,"column":35}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":15}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":19},"end":{"line":29,"column":22}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":23},"end":{"line":38,"column":29}}}},"statementMap":{"1":{"start":{"line":13,"column":8},"end":{"line":13,"column":25}},"2":{"start":{"line":14,"column":8},"end":{"line":14,"column":39}},"3":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"4":{"start":{"line":30,"column":8},"end":{"line":30,"column":32}},"5":{"start":{"line":39,"column":8},"end":{"line":39,"column":68}},"6":{"start":{"line":43,"column":0},"end":{"line":43,"column":33}}},"branchMap":{},"code":["'use strict'","","/**"," *  TelegramApiError"," */","class TelegramApiError {","    /**","     *","     * @param {number} code","     * @param {string} description","     */","    constructor(code, description) {","        this._code = code","        this._description = description","    }","","    /**","     *","     * @returns {number}","     */","    get code() {","        return this._code","    }","","    /**","     *","     * @returns {string}","     */","    get description() {","        return this._description","    }","","    /**","     *","     * @param {Object} raw","     * @returns {TelegramApiError}","     */","    static fromResponse(raw) {","        return new TelegramApiError(raw.error_code, raw.description)","    }","}","","module.exports = TelegramApiError"],"l":{"13":0,"14":0,"22":0,"30":0,"39":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/routing/TelegramRouter.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/routing/TelegramRouter.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":18}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":8},"end":{"line":36,"column":31}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":7},"end":{"line":48,"column":20}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":13},"end":{"line":61,"column":26}}},"5":{"name":"(anonymous_5)","line":73,"loc":{"start":{"line":73,"column":17},"end":{"line":73,"column":30}}},"6":{"name":"(anonymous_6)","line":84,"loc":{"start":{"line":84,"column":15},"end":{"line":84,"column":28}}},"7":{"name":"(anonymous_7)","line":93,"loc":{"start":{"line":93,"column":31},"end":{"line":93,"column":34}}},"8":{"name":"(anonymous_8)","line":101,"loc":{"start":{"line":101,"column":29},"end":{"line":101,"column":32}}},"9":{"name":"(anonymous_9)","line":109,"loc":{"start":{"line":109,"column":23},"end":{"line":109,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":51}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":25}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":40}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":44}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":42}},"7":{"start":{"line":37,"column":8},"end":{"line":37,"column":66}},"8":{"start":{"line":39,"column":8},"end":{"line":39,"column":19}},"9":{"start":{"line":49,"column":8},"end":{"line":49,"column":74}},"10":{"start":{"line":51,"column":8},"end":{"line":51,"column":19}},"11":{"start":{"line":62,"column":8},"end":{"line":62,"column":46}},"12":{"start":{"line":64,"column":8},"end":{"line":64,"column":19}},"13":{"start":{"line":74,"column":8},"end":{"line":74,"column":50}},"14":{"start":{"line":75,"column":8},"end":{"line":75,"column":19}},"15":{"start":{"line":85,"column":8},"end":{"line":85,"column":48}},"16":{"start":{"line":86,"column":8},"end":{"line":86,"column":19}},"17":{"start":{"line":94,"column":8},"end":{"line":94,"column":44}},"18":{"start":{"line":102,"column":8},"end":{"line":102,"column":42}},"19":{"start":{"line":110,"column":8},"end":{"line":110,"column":28}},"20":{"start":{"line":112,"column":8},"end":{"line":131,"column":10}},"21":{"start":{"line":113,"column":12},"end":{"line":113,"column":43}},"22":{"start":{"line":115,"column":12},"end":{"line":130,"column":13}},"23":{"start":{"line":116,"column":16},"end":{"line":116,"column":62}},"24":{"start":{"line":117,"column":16},"end":{"line":117,"column":37}},"25":{"start":{"line":119,"column":16},"end":{"line":124,"column":17}},"26":{"start":{"line":120,"column":20},"end":{"line":120,"column":77}},"27":{"start":{"line":123,"column":20},"end":{"line":123,"column":48}},"28":{"start":{"line":126,"column":16},"end":{"line":129,"column":18}},"29":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"30":{"start":{"line":134,"column":12},"end":{"line":134,"column":89}},"31":{"start":{"line":137,"column":8},"end":{"line":137,"column":26}},"32":{"start":{"line":141,"column":0},"end":{"line":141,"column":31}}},"branchMap":{"1":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":12},"end":{"line":115,"column":12}},{"start":{"line":115,"column":12},"end":{"line":115,"column":12}}]},"2":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":16},"end":{"line":119,"column":16}},{"start":{"line":119,"column":16},"end":{"line":119,"column":16}}]},"3":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":20},"end":{"line":119,"column":36}},{"start":{"line":119,"column":40},"end":{"line":119,"column":77}}]},"4":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":133,"column":8}},{"start":{"line":133,"column":8},"end":{"line":133,"column":8}}]},"5":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":12},"end":{"line":133,"column":36}},{"start":{"line":133,"column":40},"end":{"line":133,"column":74}}]}},"code":["'use strict'","","const TelegramRoute = require('./TelegramRoute')","const AnyCommand = require('./commands/AnyCommand')","","class TelegramRouter {","    constructor() {","        /**","         * @type {TelegramRoute[]}","         * @private","         */","        this._routes = []","","        /**","         * @type {TelegramBaseController}","         * @private","         */","        this._otherwiseController = null","","        this._callbackQueryController = null","        this._inlineQueryController = null","    }","","","    /**","     * You can pass your command pattern or array of patterns","     * and some child of TelegramBaseController","     *","     * After that any update that satisfies your command","     * will be passed to your controller","     *","     * @param {BaseCommand|BaseCommand[]} commands","     * @param {TelegramBaseController} controller","     * @returns {TelegramRouter}","     */","    when(commands, controller) {","        this._routes.push(new TelegramRoute(commands, controller))","","        return this","    }","","    /**","     * This child of TelegramBaseController will be called for all updates","     *","     * @param {TelegramBaseController} controller","     * @returns {TelegramRouter}","     */","    any(controller) {","        this._routes.push(new TelegramRoute(new AnyCommand(), controller))","","        return this","    }","","    /**","     * This child of TelegramBaseController will be called","     * if there is no controller for that update (except controller passed to 'any' method)","     *","     * @param {TelegramBaseController} controller","     * @returns {TelegramRouter}","     */","    otherwise(controller) {","        this._otherwiseController = controller","","        return this","    }","","","    /**","     * This child of TelegramBaseCallbackQueryController will be called for all callback queries","     *","     * @param {TelegramBaseCallbackQueryController} controller","     */","    callbackQuery(controller) {","        this._callbackQueryController = controller","        return this","    }","","    /**","     * This child of TelegramBaseCallbackQueryController will be called for all inline queries","     *","     * @param {TelegramBaseInlineQueryController} controller","     * @returns {TelegramRouter}","     */","    inlineQuery(controller) {","        this._inlineQueryController = controller","        return this","    }","","    /**","     *","     * @returns {TelegramBaseCallbackQueryController|null}","     */","    get callbackQueryController() {","        return this._callbackQueryController","    }","","    /**","     *","     * @returns {TelegramBaseInlineQueryController|null}","     */","    get inlineQueryController() {","        return this._inlineQueryController","    }","","    /**","     * @param {Scope} scope","     * @returns { { controller: TelegramBaseController, handler: string }[] }","     */","    controllersForScope(scope) {","        let controllers = []","","        this._routes.forEach(route => {","            let command = route.test(scope)","","            if (command !== false) {","                let controllerRoutes = route.controller.routes","                let controllerHandler","","                if (controllerRoutes && controllerRoutes[command.handlerName]) {","                    controllerHandler = controllerRoutes[command.handlerName]","                }","                else {","                    controllerHandler = 'handle'","                }","","                controllers.push({","                    controller: route.controller,","                    handler: controllerHandler","                })","            }","        })","","        if (controllers.length === 0 && this._otherwiseController !== null) {","            controllers.push({ controller: this._otherwiseController, handler: 'handle'})","        }","","        return controllers","    }","}","","module.exports = TelegramRouter",""],"l":{"3":1,"4":1,"12":0,"18":0,"20":0,"21":0,"37":0,"39":0,"49":0,"51":0,"62":0,"64":0,"74":0,"75":0,"85":0,"86":0,"94":0,"102":0,"110":0,"112":0,"113":0,"115":0,"116":0,"117":0,"119":0,"120":0,"123":0,"126":0,"133":0,"134":0,"137":0,"141":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/routing/TelegramRoute.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/routing/TelegramRoute.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":15},"end":{"line":8,"column":38}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":16},"end":{"line":16,"column":19}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":18},"end":{"line":23,"column":21}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":16}}}},"statementMap":{"1":{"start":{"line":9,"column":8},"end":{"line":9,"column":72}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":37}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":29}},"4":{"start":{"line":24,"column":8},"end":{"line":24,"column":31}},"5":{"start":{"line":32,"column":8},"end":{"line":36,"column":9}},"6":{"start":{"line":33,"column":12},"end":{"line":35,"column":13}},"7":{"start":{"line":34,"column":16},"end":{"line":34,"column":30}},"8":{"start":{"line":38,"column":8},"end":{"line":38,"column":20}},"9":{"start":{"line":42,"column":0},"end":{"line":42,"column":30}}},"branchMap":{"1":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":51},"end":{"line":9,"column":59}},{"start":{"line":9,"column":62},"end":{"line":9,"column":72}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":12}},{"start":{"line":33,"column":12},"end":{"line":33,"column":12}}]}},"code":["'use strict'","","class TelegramRoute {","    /**","     * @param {BaseCommand|BaseCommand[]} commands","     * @param {TelegramBaseController} controller","     */","    constructor(commands, controller) {","        this._commands = Array.isArray(commands) ? commands : [commands]","        this._controller = controller","    }","","    /**","     * @returns {BaseCommand[]}","     */","    get commands() {","        return this._commands","    }","","    /**","     * @returns {TelegramBaseController}","     */","    get controller() {","        return this._controller","    }","","    /**","     * @param {Scope} scope","     * @returns {boolean|BaseCommand}","     */","    test(scope) {","        for (let command of this._commands) {","            if (command.test(scope) == true) {","                return command","            }","        }","","        return false","    }","}","","module.exports = TelegramRoute"],"l":{"9":0,"10":0,"17":0,"24":0,"32":0,"33":0,"34":0,"38":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/routing/commands/AnyCommand.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/routing/commands/AnyCommand.js","s":{"1":1,"2":0,"3":0,"4":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":16}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":19},"end":{"line":17,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":11,"column":8},"end":{"line":11,"column":19}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":27}}},"branchMap":{},"code":["'use strict'","","const BaseCommand = require('./BaseCommand')","","class AnyCommand {","    /**","     * @param {Scope} scope","     * @returns {boolean}","     */","    test(scope) {","        return true","    }","","    /**","     * @returns {string}","     */","    get handlerName() {","        return 'handle'","    }","}","","module.exports = AnyCommand"],"l":{"3":1,"11":0,"18":0,"22":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/routing/commands/BaseCommand.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/routing/commands/BaseCommand.js","s":{"1":0,"2":0,"3":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":16}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":19},"end":{"line":19,"column":22}}}},"statementMap":{"1":{"start":{"line":11,"column":8},"end":{"line":11,"column":31}},"2":{"start":{"line":19,"column":24},"end":{"line":19,"column":48}},"3":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}}},"branchMap":{},"code":["'use strict'","","class BaseCommand {","    /**","     * Tests message","     *","     * @param {Scope} scope","     * @returns {boolean}","     */","    test(scope) {","        throw 'Not implemented'","    }","","    /**","     * Returns handler method name in controller","     *","     * @returns {string}","     */","    get handlerName() { throw 'Not implemented' }","}","","","module.exports = BaseCommand"],"l":{"11":0,"19":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/logger/ConsoleLogger.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/logger/ConsoleLogger.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":7},"end":{"line":20,"column":14}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":8},"end":{"line":28,"column":15}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":9},"end":{"line":36,"column":16}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":15},"end":{"line":47,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":5,"column":0},"end":{"line":10,"column":1}},"3":{"start":{"line":21,"column":8},"end":{"line":21,"column":45}},"4":{"start":{"line":29,"column":8},"end":{"line":29,"column":48}},"5":{"start":{"line":37,"column":8},"end":{"line":37,"column":46}},"6":{"start":{"line":48,"column":8},"end":{"line":52,"column":10}},"7":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"8":{"start":{"line":50,"column":16},"end":{"line":50,"column":56}},"9":{"start":{"line":54,"column":8},"end":{"line":54,"column":78}},"10":{"start":{"line":55,"column":8},"end":{"line":55,"column":69}},"11":{"start":{"line":55,"column":41},"end":{"line":55,"column":68}},"12":{"start":{"line":56,"column":8},"end":{"line":56,"column":25}},"13":{"start":{"line":60,"column":0},"end":{"line":60,"column":30}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":12}},{"start":{"line":49,"column":12},"end":{"line":49,"column":12}}]},"2":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":28},"end":{"line":50,"column":43}},{"start":{"line":50,"column":47},"end":{"line":50,"column":56}}]}},"code":["'use strict'","","const BaseLogger = require('./BaseLogger')","","const COLOR_CODES = {","    red: '\\x1b[31m',","    cyan: '\\x1b[36m',","    yellow: '\\x1b[33m',","    reset: '\\x1b[0m'","}","","/**"," * Standard ConsoleLogger, will be used if no logger passed to Telegram"," */","class ConsoleLogger extends BaseLogger {","    /**","     *","     * @param {Object} data","     */","    log(data) {","        this._prepareLog('cyan', 'log', data)","    }","","    /**","     *","     * @param {Object} data","     */","    warn(data) {","        this._prepareLog('yellow', 'warn', data)","    }","","    /**","     *","     * @param {Object} data","     */","    error(data) {","        this._prepareLog('red', 'error', data)","    }","","    /**","     *","     * @param {string} color","     * @param {string} prefix","     * @param {Object} data","     * @private","     */","    _prepareLog(color, prefix, data) {","        Object.keys(data).forEach(key => {","            if (data[key] instanceof Error) {","                data[key] = data[key].stack || data[key]","            }","        })","","        console.log(`${COLOR_CODES[color]}[${prefix}]   ${COLOR_CODES.reset}`)","        Object.keys(data).forEach(key => console.log(key, data[key]))","        console.log('\\n')","    }","}","","module.exports = ConsoleLogger"],"l":{"3":1,"5":1,"21":0,"29":0,"37":0,"48":0,"49":0,"50":0,"54":0,"55":0,"56":0,"60":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/logger/BaseLogger.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/logger/BaseLogger.js","s":{"1":0,"2":0,"3":0,"4":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":7},"end":{"line":15,"column":14}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":8},"end":{"line":22,"column":15}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":9},"end":{"line":29,"column":16}}}},"statementMap":{"1":{"start":{"line":15,"column":16},"end":{"line":15,"column":40}},"2":{"start":{"line":22,"column":17},"end":{"line":22,"column":41}},"3":{"start":{"line":29,"column":18},"end":{"line":29,"column":42}},"4":{"start":{"line":32,"column":0},"end":{"line":32,"column":27}}},"branchMap":{},"code":["'use strict'","","/**"," * Represents any logger class "," * "," * if you want to create your own logger, you must extend BaseLogger "," * and override all methods"," */","class BaseLogger {","    /**","     * Any log","     * ","     * @param {Object} data","     */","    log(data) { throw 'Not implemented' }","","    /**","     * Warning log","     * ","     * @param {Object} data","     */","    warn(data) { throw 'Not implemented' }","","    /**","     * Error log","     * ","     * @param {Object} data","     */","    error(data) { throw 'Not implemented' }","}","","module.exports = BaseLogger"],"l":{"15":0,"22":0,"29":0,"32":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/TelegramDataSource.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/TelegramDataSource.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":15},"end":{"line":15,"column":72}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":11},"end":{"line":31,"column":14}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":14},"end":{"line":39,"column":17}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":14},"end":{"line":47,"column":17}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":23},"end":{"line":55,"column":26}}},"6":{"name":"(anonymous_6)","line":63,"loc":{"start":{"line":63,"column":22},"end":{"line":63,"column":25}}},"7":{"name":"(anonymous_7)","line":71,"loc":{"start":{"line":71,"column":20},"end":{"line":71,"column":23}}},"8":{"name":"(anonymous_8)","line":78,"loc":{"start":{"line":78,"column":11},"end":{"line":78,"column":14}}},"9":{"name":"(anonymous_9)","line":86,"loc":{"start":{"line":86,"column":21},"end":{"line":86,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":66}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":15}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":29}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":34}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":45}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":41}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":23}},"10":{"start":{"line":32,"column":8},"end":{"line":32,"column":24}},"11":{"start":{"line":40,"column":8},"end":{"line":40,"column":27}},"12":{"start":{"line":48,"column":8},"end":{"line":48,"column":27}},"13":{"start":{"line":56,"column":8},"end":{"line":56,"column":36}},"14":{"start":{"line":64,"column":8},"end":{"line":64,"column":35}},"15":{"start":{"line":72,"column":8},"end":{"line":72,"column":33}},"16":{"start":{"line":79,"column":8},"end":{"line":79,"column":24}},"17":{"start":{"line":87,"column":8},"end":{"line":91,"column":9}},"18":{"start":{"line":88,"column":12},"end":{"line":88,"column":57}},"19":{"start":{"line":90,"column":12},"end":{"line":90,"column":18}},"20":{"start":{"line":93,"column":8},"end":{"line":93,"column":45}},"21":{"start":{"line":97,"column":0},"end":{"line":97,"column":35}}},"branchMap":{"1":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":8}},{"start":{"line":87,"column":8},"end":{"line":87,"column":8}}]}},"code":["'use strict'","","const BaseTelegramDataSource = require('./BaseTelegramDataSource')","","class TelegramDataSource extends BaseTelegramDataSource {","    /**","     *","     * @param {TelegramApi} api","     * @param {TelegramRouter} router","     * @param {BaseLogger} logger","     * @param {TelegramSessionStorage} sessionStorage","     * @param {Ivan} localization","     * @param {TelegramIPC} ipc","     */","    constructor(api, router, logger, sessionStorage, localization, ipc) {","        super()","        ","        this._api = api","        this._router = router","        this._logger = logger","        this._scopeExtensions = []","        this._sessionStorage = sessionStorage","        this._localization = localization","        this._ipc = ipc","    }","","    /**","     *","     * @returns {TelegramApi}","     */","    get api() {","        return this._api","    }","","    /**","     *","     * @returns {TelegramRouter}","     */","    get router() {","        return this._router","    }","","    /**","     *","     * @returns {BaseLogger}","     */","    get logger() {","        return this._logger","    }","","    /**","     *","     * @returns {BaseScopeExtension[]}","     */","    get scopeExtensions() {","        return this._scopeExtensions","    }","","    /**","     *","     * @returns {TelegramSessionStorage}","     */","    get sessionStorage() {","        return this._sessionStorage","    }","","    /**","     *","     * @returns {Ivan}","     */","    get localization() {","        return this._localization","    }","","    /**","     * @returns {TelegramIPC}","     */","    get ipc() {","        return this._ipc","    }","","    /**","     *","     * @param {BaseScopeExtension|BaseScopeExtension[]} extension","     */","    addScopeExtension(extension) {","        if (Array.isArray(extension)) {","            extension.forEach(this._scopeExtensions.push)","","            return","        }","","        this._scopeExtensions.push(extension)","    }","}","","module.exports = TelegramDataSource"],"l":{"3":1,"16":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"32":0,"40":0,"48":0,"56":0,"64":0,"72":0,"79":0,"87":0,"88":0,"90":0,"93":0,"97":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/BaseTelegramDataSource.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/BaseTelegramDataSource.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":11},"end":{"line":7,"column":14}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":14},"end":{"line":12,"column":17}}},"3":{"name":"(anonymous_3)","line":17,"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":17}}},"4":{"name":"(anonymous_4)","line":22,"loc":{"start":{"line":22,"column":23},"end":{"line":22,"column":26}}},"5":{"name":"(anonymous_5)","line":27,"loc":{"start":{"line":27,"column":22},"end":{"line":27,"column":25}}},"6":{"name":"(anonymous_6)","line":32,"loc":{"start":{"line":32,"column":20},"end":{"line":32,"column":23}}},"7":{"name":"(anonymous_7)","line":37,"loc":{"start":{"line":37,"column":11},"end":{"line":37,"column":14}}}},"statementMap":{"1":{"start":{"line":7,"column":16},"end":{"line":7,"column":40}},"2":{"start":{"line":12,"column":19},"end":{"line":12,"column":43}},"3":{"start":{"line":17,"column":19},"end":{"line":17,"column":43}},"4":{"start":{"line":22,"column":28},"end":{"line":22,"column":52}},"5":{"start":{"line":27,"column":27},"end":{"line":27,"column":51}},"6":{"start":{"line":32,"column":25},"end":{"line":32,"column":49}},"7":{"start":{"line":37,"column":16},"end":{"line":37,"column":40}},"8":{"start":{"line":40,"column":0},"end":{"line":40,"column":39}}},"branchMap":{},"code":["'use strict'","","class BaseTelegramDataSource {","    /**","     * @returns {TelegramApi}","     */","    get api() { throw 'Not implemented' }","","    /**","     * @returns {TelegramRouter}","     */","    get router() { throw 'Not implemented' }","","    /**","     * @returns {BaseLogger}","     */","    get logger() { throw 'Not implemented' }","","    /**","     * @returns {BaseScopeExtension[]}","     */","    get scopeExtensions() { throw 'Not implemented' }","","    /**","     * @returns {TelegramSessionStorage}","     */","    get sessionStorage() { throw 'Not implemented' }","","    /**","     * @returns {Ivan}","     */","    get localization() { throw 'Not implemented' }","","    /**","     * @returns {TelegramIPC}","     */","    get ipc() { throw 'Not implemented' }","}","","module.exports = BaseTelegramDataSource"],"l":{"7":0,"12":0,"17":0,"22":0,"27":0,"32":0,"37":0,"40":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateProcessors/UpdateProcessorsManager.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateProcessors/UpdateProcessorsManager.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":15},"end":{"line":12,"column":26}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":11},"end":{"line":30,"column":20}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":12},"end":{"line":43,"column":21}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":23},"end":{"line":53,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":66}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":74}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":23}},"5":{"start":{"line":20,"column":8},"end":{"line":23,"column":9}},"6":{"start":{"line":31,"column":8},"end":{"line":31,"column":58}},"7":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"8":{"start":{"line":34,"column":12},"end":{"line":34,"column":37}},"9":{"start":{"line":44,"column":8},"end":{"line":44,"column":19}},"10":{"start":{"line":54,"column":8},"end":{"line":58,"column":9}},"11":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"12":{"start":{"line":56,"column":16},"end":{"line":56,"column":32}},"13":{"start":{"line":60,"column":8},"end":{"line":60,"column":83}},"14":{"start":{"line":64,"column":0},"end":{"line":64,"column":40}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":8}},{"start":{"line":33,"column":8},"end":{"line":33,"column":8}}]},"2":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":12}},{"start":{"line":55,"column":12},"end":{"line":55,"column":12}}]}},"code":["'use strict'","","const BaseUpdateProcessor = require('./BaseUpdateProcessor')","const MessageUpdateProcessor = require('./MessageUpdateProcessor')","const InlineQueryUpdateProcessor = require('./InlineQueryUpdateProcessor')","","class UpdateProcessorsManager extends BaseUpdateProcessor {","    /**","     *","     * @param {BaseTelegramDataSource} delegate","     */","    constructor(delegate) {","        super(delegate)","","        /**","         *","         * @type {BaseUpdateProcessor[]}","         * @private","         */","        this._processors = [","            new MessageUpdateProcessor(this._dataSource),","            new InlineQueryUpdateProcessor(this._dataSource)","        ]","    }","","    /**","     *","     * @param {Update} update","     */","    process(update) {","        const processor = this._processorForUpdate(update)","","        if (processor) {","            processor.process(update)","        }","    }","","    /**","     * ","     * @param update","     * @returns {boolean}","     */","    supports(update) {","        return true","    }","","    /**","     *","     * @param {Update} update","     * @returns {BaseUpdateProcessor}","     * @private","     */","    _processorForUpdate(update) {","        for (const processor of this._processors) {","            if (processor.supports(update)) {","                return processor","            }","        }","","        this._dataSource.logger.error({ 'No processor found for update:': update })","    }","}","","module.exports = UpdateProcessorsManager"],"l":{"3":1,"4":1,"5":1,"13":0,"20":0,"31":0,"33":0,"34":0,"44":0,"54":0,"55":0,"56":0,"60":0,"64":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateProcessors/BaseUpdateProcessor.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateProcessors/BaseUpdateProcessor.js","s":{"1":0,"2":0,"3":0,"4":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":15},"end":{"line":8,"column":28}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":11},"end":{"line":19,"column":20}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":21}}}},"statementMap":{"1":{"start":{"line":12,"column":8},"end":{"line":12,"column":37}},"2":{"start":{"line":19,"column":22},"end":{"line":19,"column":46}},"3":{"start":{"line":26,"column":23},"end":{"line":26,"column":47}},"4":{"start":{"line":29,"column":0},"end":{"line":29,"column":36}}},"branchMap":{},"code":["'use strict'","","class BaseUpdateProcessor {","    /**","     *","     * @param {BaseTelegramDataSource} delegate","     */","    constructor(dataSource) {","        /**","         * @var {BaseTelegramDataSource} this._dataSource","         */","        this._dataSource = dataSource","    }","","    /**","     *","     * @param {Update} update","     */","    process(update) { throw 'Not implemented' }","","    /**","     *","     * @param {Update} update","     * @returns {boolean}","     */","    supports(update) { throw 'Not implemented' }","}","","module.exports = BaseUpdateProcessor"],"l":{"12":0,"19":0,"26":0,"29":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateProcessors/MessageUpdateProcessor.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateProcessors/MessageUpdateProcessor.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":15},"end":{"line":12,"column":28}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":11},"end":{"line":23,"column":20}}},"3":{"name":"(anonymous_3)","line":109,"loc":{"start":{"line":109,"column":12},"end":{"line":109,"column":21}}},"4":{"name":"(anonymous_4)","line":117,"loc":{"start":{"line":117,"column":18},"end":{"line":117,"column":27}}},"5":{"name":"(anonymous_5)","line":125,"loc":{"start":{"line":125,"column":20},"end":{"line":125,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":69}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":25}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":34}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":41}},"7":{"start":{"line":24,"column":8},"end":{"line":77,"column":9}},"8":{"start":{"line":25,"column":12},"end":{"line":25,"column":64}},"9":{"start":{"line":27,"column":12},"end":{"line":37,"column":13}},"10":{"start":{"line":35,"column":26},"end":{"line":35,"column":53}},"11":{"start":{"line":36,"column":24},"end":{"line":36,"column":51}},"12":{"start":{"line":39,"column":12},"end":{"line":39,"column":42}},"13":{"start":{"line":41,"column":12},"end":{"line":49,"column":13}},"14":{"start":{"line":42,"column":16},"end":{"line":42,"column":62}},"15":{"start":{"line":43,"column":16},"end":{"line":43,"column":31}},"16":{"start":{"line":45,"column":16},"end":{"line":45,"column":99}},"17":{"start":{"line":45,"column":63},"end":{"line":45,"column":99}},"18":{"start":{"line":46,"column":16},"end":{"line":46,"column":28}},"19":{"start":{"line":48,"column":16},"end":{"line":48,"column":22}},"20":{"start":{"line":50,"column":12},"end":{"line":50,"column":82}},"21":{"start":{"line":52,"column":12},"end":{"line":66,"column":14}},"22":{"start":{"line":53,"column":16},"end":{"line":53,"column":64}},"23":{"start":{"line":54,"column":16},"end":{"line":54,"column":82}},"24":{"start":{"line":56,"column":16},"end":{"line":65,"column":17}},"25":{"start":{"line":57,"column":20},"end":{"line":57,"column":98}},"26":{"start":{"line":60,"column":20},"end":{"line":64,"column":22}},"27":{"start":{"line":68,"column":12},"end":{"line":72,"column":13}},"28":{"start":{"line":69,"column":16},"end":{"line":71,"column":18}},"29":{"start":{"line":74,"column":12},"end":{"line":74,"column":24}},"30":{"start":{"line":76,"column":12},"end":{"line":76,"column":18}},"31":{"start":{"line":79,"column":8},"end":{"line":100,"column":9}},"32":{"start":{"line":80,"column":12},"end":{"line":84,"column":13}},"33":{"start":{"line":81,"column":16},"end":{"line":81,"column":93}},"34":{"start":{"line":83,"column":16},"end":{"line":83,"column":22}},"35":{"start":{"line":86,"column":12},"end":{"line":97,"column":13}},"36":{"start":{"line":87,"column":16},"end":{"line":96,"column":17}},"37":{"start":{"line":88,"column":20},"end":{"line":88,"column":96}},"38":{"start":{"line":91,"column":20},"end":{"line":95,"column":22}},"39":{"start":{"line":99,"column":12},"end":{"line":99,"column":18}},"40":{"start":{"line":102,"column":8},"end":{"line":102,"column":74}},"41":{"start":{"line":110,"column":8},"end":{"line":110,"column":81}},"42":{"start":{"line":118,"column":8},"end":{"line":118,"column":53}},"43":{"start":{"line":126,"column":8},"end":{"line":126,"column":58}},"44":{"start":{"line":130,"column":0},"end":{"line":130,"column":39}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":26}},{"start":{"line":24,"column":30},"end":{"line":24,"column":50}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":26},"end":{"line":25,"column":40}},{"start":{"line":25,"column":44},"end":{"line":25,"column":64}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":12}},{"start":{"line":41,"column":12},"end":{"line":41,"column":12}}]},"5":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":45}},{"start":{"line":41,"column":49},"end":{"line":41,"column":87}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":16},"end":{"line":45,"column":16}},{"start":{"line":45,"column":16},"end":{"line":45,"column":16}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":12},"end":{"line":68,"column":12}},{"start":{"line":68,"column":12},"end":{"line":68,"column":12}}]},"8":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":8}},{"start":{"line":79,"column":8},"end":{"line":79,"column":8}}]},"9":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":12},"end":{"line":80,"column":12}},{"start":{"line":80,"column":12},"end":{"line":80,"column":12}}]},"10":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":12},"end":{"line":86,"column":12}},{"start":{"line":86,"column":12},"end":{"line":86,"column":12}}]},"11":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":18},"end":{"line":110,"column":32}},{"start":{"line":110,"column":36},"end":{"line":110,"column":56}},{"start":{"line":110,"column":60},"end":{"line":110,"column":80}}]}},"code":["'use strict'","","const BaseUpdateProcessor = require('./BaseUpdateProcessor')","const Scope = require('../mvc/Scope')","const TelegramSession = require('../storage/session/TelegramSession')","","class MessageUpdateProcessor extends BaseUpdateProcessor {","    /**","     *","     * @param {BaseTelegramDataSource} dataSource","     */","    constructor(dataSource) {","        super(dataSource)","","        this._waitingRequests = {}","        this._waitingCallbackQueries = {}","    }","","    /**","     *","     * @param {Update} update","     */","    process(update) {","        if (update.message || update.editedMessage) {","            let message = update.message || update.editedMessage","","            let scope = new Scope(","                update,","                this._dataSource.api,","                this._dataSource.scopeExtensions,","                this._waitingRequests,","                this._waitingCallbackQueries,","                this._dataSource.logger,","                this._dataSource.sessionStorage,","                chatId => this._waitForUpdate(chatId),","                data => this._waitForCallback(data)","            )","","            const chatId = message.chat.id","","            if (this._waitingRequests[chatId] && this._waitingRequests[chatId] !== null) {","                const callback = this._waitingRequests[chatId]","                callback(scope)","","                if (this._waitingRequests[chatId] == callback) this._waitingRequests[chatId] = null","                scope = null","","                return","            }","            const controllers = this._dataSource.router.controllersForScope(scope)","","            controllers.forEach(controller => {","                controller.controller.api = this._dataSource.api","                controller.controller.localization = this._dataSource.localization","","                try {","                    controller.controller[controller.handler](controller.controller.before(scope))","                }","                catch (e) {","                    this._dataSource.logger.error({","                        'error': e,","                        'in controller': controller,","                        'for update': update","                    })","                }","            })","","            if (controllers.length === 0) {","                this._dataSource.logger.warn({","                    'Cant find controller for update': update","                })","            }","","            scope = null","","            return","        }","","        if (update.callbackQuery) {","            if (this._waitingCallbackQueries[update.callbackQuery.data]) {","                this._waitingCallbackQueries[update.callbackQuery.data](update.callbackQuery)","","                return","            }","","            if (this._dataSource.router.callbackQueryController) {","                try {","                    this._dataSource.router.callbackQueryController.handle(update.callbackQuery)","                }","                catch (e) {","                    this._dataSource.logger.error({","                        'error': e,","                        'in controller': this._dataSource.router.callbackQueryController,","                        'for update': update","                    })","                }","            }","","            return","        }","","        this._dataSource.logger.warn({ 'Update was not handled': update })","    }","","    /**","     *","     * @param {Update} update","     */","    supports(update) {","        return !!(update.message || update.editedMessage || update.callbackQuery)","    }","","    /**","     * @param {number} chatId","     * @private","     */","    _waitForUpdate(chatId) {","        this._dataSource.ipc.askForNextUpdate(chatId)","    }","","    /**","     * @param {string} data","     * @private","     */","    _waitForCallback(data) {","        this._dataSource.ipc.askForNextCallbackQuery(data)","    }","}","","module.exports = MessageUpdateProcessor"],"l":{"3":1,"4":1,"5":1,"13":0,"15":0,"16":0,"24":0,"25":0,"27":0,"35":0,"36":0,"39":0,"41":0,"42":0,"43":0,"45":0,"46":0,"48":0,"50":0,"52":0,"53":0,"54":0,"56":0,"57":0,"60":0,"68":0,"69":0,"74":0,"76":0,"79":0,"80":0,"81":0,"83":0,"86":0,"87":0,"88":0,"91":0,"99":0,"102":0,"110":0,"118":0,"126":0,"130":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/mvc/Scope.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/mvc/Scope.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":15},"end":{"line":32,"column":6}}},"2":{"name":"(anonymous_2)","line":65,"loc":{"start":{"line":65,"column":22},"end":{"line":65,"column":25}}},"3":{"name":"(anonymous_3)","line":72,"loc":{"start":{"line":72,"column":15},"end":{"line":72,"column":18}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":14},"end":{"line":80,"column":17}}},"5":{"name":"(anonymous_5)","line":88,"loc":{"start":{"line":88,"column":15},"end":{"line":88,"column":18}}},"6":{"name":"(anonymous_6)","line":96,"loc":{"start":{"line":96,"column":14},"end":{"line":96,"column":17}}},"7":{"name":"(anonymous_7)","line":104,"loc":{"start":{"line":104,"column":14},"end":{"line":104,"column":17}}},"8":{"name":"(anonymous_8)","line":112,"loc":{"start":{"line":112,"column":23},"end":{"line":112,"column":26}}},"9":{"name":"(anonymous_9)","line":120,"loc":{"start":{"line":120,"column":11},"end":{"line":120,"column":14}}},"10":{"name":"(anonymous_10)","line":128,"loc":{"start":{"line":128,"column":18},"end":{"line":128,"column":24}}},"11":{"name":"(anonymous_11)","line":137,"loc":{"start":{"line":137,"column":18},"end":{"line":137,"column":31}}},"12":{"name":"(anonymous_12)","line":145,"loc":{"start":{"line":145,"column":18},"end":{"line":145,"column":24}}},"13":{"name":"(anonymous_13)","line":154,"loc":{"start":{"line":154,"column":18},"end":{"line":154,"column":31}}},"14":{"name":"(anonymous_14)","line":162,"loc":{"start":{"line":162,"column":14},"end":{"line":162,"column":17}}},"15":{"name":"(anonymous_15)","line":170,"loc":{"start":{"line":170,"column":23},"end":{"line":170,"column":26}}},"16":{"name":"(anonymous_16)","line":180,"loc":{"start":{"line":180,"column":22},"end":{"line":180,"column":25}}},"17":{"name":"(anonymous_17)","line":200,"loc":{"start":{"line":200,"column":24},"end":{"line":200,"column":41}}},"18":{"name":"(anonymous_18)","line":227,"loc":{"start":{"line":227,"column":11},"end":{"line":227,"column":22}}},"19":{"name":"(anonymous_19)","line":313,"loc":{"start":{"line":313,"column":11},"end":{"line":313,"column":32}}},"20":{"name":"(anonymous_20)","line":369,"loc":{"start":{"line":369,"column":17},"end":{"line":369,"column":41}}},"21":{"name":"(anonymous_21)","line":464,"loc":{"start":{"line":464,"column":15},"end":{"line":464,"column":31}}},"22":{"name":"(anonymous_22)","line":475,"loc":{"start":{"line":475,"column":18},"end":{"line":475,"column":51}}},"23":{"name":"(anonymous_23)","line":485,"loc":{"start":{"line":485,"column":13},"end":{"line":485,"column":30}}},"24":{"name":"(anonymous_24)","line":495,"loc":{"start":{"line":495,"column":13},"end":{"line":495,"column":30}}},"25":{"name":"(anonymous_25)","line":505,"loc":{"start":{"line":505,"column":16},"end":{"line":505,"column":36}}},"26":{"name":"(anonymous_26)","line":515,"loc":{"start":{"line":515,"column":15},"end":{"line":515,"column":34}}},"27":{"name":"(anonymous_27)","line":525,"loc":{"start":{"line":525,"column":13},"end":{"line":525,"column":30}}},"28":{"name":"(anonymous_28)","line":535,"loc":{"start":{"line":535,"column":13},"end":{"line":535,"column":30}}},"29":{"name":"(anonymous_29)","line":546,"loc":{"start":{"line":546,"column":16},"end":{"line":546,"column":47}}},"30":{"name":"(anonymous_30)","line":559,"loc":{"start":{"line":559,"column":13},"end":{"line":559,"column":60}}},"31":{"name":"(anonymous_31)","line":570,"loc":{"start":{"line":570,"column":15},"end":{"line":570,"column":49}}},"32":{"name":"(anonymous_32)","line":579,"loc":{"start":{"line":579,"column":18},"end":{"line":579,"column":27}}},"33":{"name":"(anonymous_33)","line":589,"loc":{"start":{"line":589,"column":24},"end":{"line":589,"column":40}}},"34":{"name":"(anonymous_34)","line":598,"loc":{"start":{"line":598,"column":18},"end":{"line":598,"column":27}}},"35":{"name":"(anonymous_35)","line":606,"loc":{"start":{"line":606,"column":13},"end":{"line":606,"column":16}}},"36":{"name":"(anonymous_36)","line":615,"loc":{"start":{"line":615,"column":19},"end":{"line":615,"column":28}}},"37":{"name":"(anonymous_37)","line":623,"loc":{"start":{"line":623,"column":11},"end":{"line":623,"column":14}}},"38":{"name":"(anonymous_38)","line":631,"loc":{"start":{"line":631,"column":25},"end":{"line":631,"column":28}}},"39":{"name":"(anonymous_39)","line":639,"loc":{"start":{"line":639,"column":23},"end":{"line":639,"column":26}}},"40":{"name":"(anonymous_40)","line":648,"loc":{"start":{"line":648,"column":17},"end":{"line":648,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":70}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":70}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":68}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"5":{"start":{"line":33,"column":8},"end":{"line":33,"column":23}},"6":{"start":{"line":34,"column":8},"end":{"line":34,"column":29}},"7":{"start":{"line":40,"column":8},"end":{"line":40,"column":37}},"8":{"start":{"line":41,"column":8},"end":{"line":41,"column":47}},"9":{"start":{"line":42,"column":8},"end":{"line":42,"column":61}},"10":{"start":{"line":44,"column":8},"end":{"line":44,"column":67}},"11":{"start":{"line":46,"column":8},"end":{"line":46,"column":62}},"12":{"start":{"line":47,"column":8},"end":{"line":47,"column":44}},"13":{"start":{"line":48,"column":8},"end":{"line":48,"column":44}},"14":{"start":{"line":49,"column":8},"end":{"line":49,"column":62}},"15":{"start":{"line":51,"column":8},"end":{"line":51,"column":29}},"16":{"start":{"line":52,"column":8},"end":{"line":52,"column":45}},"17":{"start":{"line":53,"column":8},"end":{"line":53,"column":43}},"18":{"start":{"line":54,"column":8},"end":{"line":54,"column":47}},"19":{"start":{"line":56,"column":8},"end":{"line":59,"column":10}},"20":{"start":{"line":57,"column":12},"end":{"line":57,"column":57}},"21":{"start":{"line":58,"column":12},"end":{"line":58,"column":68}},"22":{"start":{"line":66,"column":8},"end":{"line":66,"column":35}},"23":{"start":{"line":73,"column":8},"end":{"line":73,"column":35}},"24":{"start":{"line":81,"column":8},"end":{"line":81,"column":27}},"25":{"start":{"line":89,"column":8},"end":{"line":89,"column":28}},"26":{"start":{"line":97,"column":8},"end":{"line":97,"column":27}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":27}},"28":{"start":{"line":113,"column":8},"end":{"line":113,"column":34}},"29":{"start":{"line":121,"column":8},"end":{"line":121,"column":24}},"30":{"start":{"line":129,"column":8},"end":{"line":129,"column":68}},"31":{"start":{"line":138,"column":8},"end":{"line":138,"column":75}},"32":{"start":{"line":146,"column":8},"end":{"line":146,"column":68}},"33":{"start":{"line":155,"column":8},"end":{"line":155,"column":75}},"34":{"start":{"line":163,"column":8},"end":{"line":163,"column":27}},"35":{"start":{"line":171,"column":8},"end":{"line":171,"column":36}},"36":{"start":{"line":181,"column":8},"end":{"line":184,"column":10}},"37":{"start":{"line":182,"column":12},"end":{"line":182,"column":56}},"38":{"start":{"line":183,"column":12},"end":{"line":183,"column":44}},"39":{"start":{"line":201,"column":8},"end":{"line":204,"column":9}},"40":{"start":{"line":202,"column":12},"end":{"line":202,"column":39}},"41":{"start":{"line":203,"column":12},"end":{"line":203,"column":57}},"42":{"start":{"line":206,"column":8},"end":{"line":211,"column":9}},"43":{"start":{"line":207,"column":12},"end":{"line":210,"column":14}},"44":{"start":{"line":208,"column":16},"end":{"line":208,"column":43}},"45":{"start":{"line":209,"column":16},"end":{"line":209,"column":61}},"46":{"start":{"line":213,"column":8},"end":{"line":220,"column":9}},"47":{"start":{"line":214,"column":12},"end":{"line":219,"column":14}},"48":{"start":{"line":215,"column":16},"end":{"line":218,"column":18}},"49":{"start":{"line":216,"column":20},"end":{"line":216,"column":59}},"50":{"start":{"line":217,"column":20},"end":{"line":217,"column":77}},"51":{"start":{"line":228,"column":8},"end":{"line":228,"column":45}},"52":{"start":{"line":230,"column":8},"end":{"line":237,"column":9}},"53":{"start":{"line":239,"column":8},"end":{"line":239,"column":42}},"54":{"start":{"line":240,"column":8},"end":{"line":240,"column":25}},"55":{"start":{"line":242,"column":8},"end":{"line":270,"column":9}},"56":{"start":{"line":243,"column":12},"end":{"line":243,"column":29}},"57":{"start":{"line":245,"column":12},"end":{"line":263,"column":14}},"58":{"start":{"line":246,"column":16},"end":{"line":262,"column":17}},"59":{"start":{"line":247,"column":20},"end":{"line":248,"column":48}},"60":{"start":{"line":248,"column":24},"end":{"line":248,"column":48}},"61":{"start":{"line":250,"column":20},"end":{"line":250,"column":69}},"62":{"start":{"line":252,"column":20},"end":{"line":260,"column":21}},"63":{"start":{"line":253,"column":24},"end":{"line":255,"column":25}},"64":{"start":{"line":254,"column":28},"end":{"line":254,"column":39}},"65":{"start":{"line":257,"column":24},"end":{"line":259,"column":25}},"66":{"start":{"line":258,"column":28},"end":{"line":258,"column":39}},"67":{"start":{"line":265,"column":12},"end":{"line":269,"column":14}},"68":{"start":{"line":266,"column":16},"end":{"line":268,"column":17}},"69":{"start":{"line":267,"column":20},"end":{"line":267,"column":60}},"70":{"start":{"line":272,"column":8},"end":{"line":272,"column":92}},"71":{"start":{"line":273,"column":8},"end":{"line":273,"column":95}},"72":{"start":{"line":275,"column":8},"end":{"line":275,"column":92}},"73":{"start":{"line":277,"column":8},"end":{"line":279,"column":9}},"74":{"start":{"line":281,"column":8},"end":{"line":281,"column":80}},"75":{"start":{"line":281,"column":30},"end":{"line":281,"column":80}},"76":{"start":{"line":283,"column":8},"end":{"line":283,"column":47}},"77":{"start":{"line":285,"column":8},"end":{"line":299,"column":14}},"78":{"start":{"line":287,"column":16},"end":{"line":298,"column":17}},"79":{"start":{"line":289,"column":20},"end":{"line":293,"column":21}},"80":{"start":{"line":290,"column":24},"end":{"line":290,"column":59}},"81":{"start":{"line":292,"column":24},"end":{"line":292,"column":51}},"82":{"start":{"line":294,"column":23},"end":{"line":298,"column":17}},"83":{"start":{"line":295,"column":20},"end":{"line":295,"column":40}},"84":{"start":{"line":297,"column":20},"end":{"line":297,"column":39}},"85":{"start":{"line":314,"column":8},"end":{"line":314,"column":17}},"86":{"start":{"line":316,"column":8},"end":{"line":357,"column":9}},"87":{"start":{"line":317,"column":12},"end":{"line":317,"column":31}},"88":{"start":{"line":319,"column":12},"end":{"line":326,"column":14}},"89":{"start":{"line":328,"column":12},"end":{"line":356,"column":18}},"90":{"start":{"line":330,"column":20},"end":{"line":355,"column":22}},"91":{"start":{"line":331,"column":24},"end":{"line":354,"column":25}},"92":{"start":{"line":332,"column":28},"end":{"line":332,"column":47}},"93":{"start":{"line":333,"column":28},"end":{"line":333,"column":31}},"94":{"start":{"line":335,"column":28},"end":{"line":344,"column":29}},"95":{"start":{"line":336,"column":32},"end":{"line":341,"column":33}},"96":{"start":{"line":337,"column":36},"end":{"line":337,"column":52}},"97":{"start":{"line":340,"column":36},"end":{"line":340,"column":87}},"98":{"start":{"line":343,"column":32},"end":{"line":343,"column":38}},"99":{"start":{"line":346,"column":28},"end":{"line":346,"column":33}},"100":{"start":{"line":348,"column":28},"end":{"line":353,"column":34}},"101":{"start":{"line":352,"column":36},"end":{"line":352,"column":41}},"102":{"start":{"line":359,"column":8},"end":{"line":359,"column":23}},"103":{"start":{"line":360,"column":8},"end":{"line":360,"column":42}},"104":{"start":{"line":362,"column":8},"end":{"line":362,"column":13}},"105":{"start":{"line":370,"column":8},"end":{"line":370,"column":38}},"106":{"start":{"line":371,"column":8},"end":{"line":371,"column":44}},"107":{"start":{"line":372,"column":8},"end":{"line":372,"column":38}},"108":{"start":{"line":373,"column":8},"end":{"line":373,"column":34}},"109":{"start":{"line":375,"column":8},"end":{"line":375,"column":25}},"110":{"start":{"line":377,"column":8},"end":{"line":377,"column":29}},"111":{"start":{"line":379,"column":8},"end":{"line":409,"column":9}},"112":{"start":{"line":380,"column":12},"end":{"line":388,"column":14}},"113":{"start":{"line":381,"column":16},"end":{"line":381,"column":74}},"114":{"start":{"line":383,"column":16},"end":{"line":387,"column":18}},"115":{"start":{"line":391,"column":12},"end":{"line":391,"column":24}},"116":{"start":{"line":392,"column":12},"end":{"line":408,"column":14}},"117":{"start":{"line":393,"column":16},"end":{"line":393,"column":56}},"118":{"start":{"line":393,"column":37},"end":{"line":393,"column":56}},"119":{"start":{"line":395,"column":16},"end":{"line":395,"column":74}},"120":{"start":{"line":397,"column":16},"end":{"line":401,"column":18}},"121":{"start":{"line":403,"column":16},"end":{"line":404,"column":83}},"122":{"start":{"line":406,"column":16},"end":{"line":407,"column":26}},"123":{"start":{"line":407,"column":20},"end":{"line":407,"column":26}},"124":{"start":{"line":411,"column":8},"end":{"line":420,"column":9}},"125":{"start":{"line":412,"column":12},"end":{"line":414,"column":14}},"126":{"start":{"line":417,"column":12},"end":{"line":419,"column":14}},"127":{"start":{"line":422,"column":8},"end":{"line":437,"column":9}},"128":{"start":{"line":423,"column":12},"end":{"line":436,"column":14}},"129":{"start":{"line":424,"column":16},"end":{"line":435,"column":18}},"130":{"start":{"line":425,"column":20},"end":{"line":434,"column":21}},"131":{"start":{"line":426,"column":24},"end":{"line":431,"column":25}},"132":{"start":{"line":427,"column":28},"end":{"line":427,"column":65}},"133":{"start":{"line":430,"column":28},"end":{"line":430,"column":79}},"134":{"start":{"line":433,"column":24},"end":{"line":433,"column":65}},"135":{"start":{"line":439,"column":8},"end":{"line":453,"column":9}},"136":{"start":{"line":440,"column":12},"end":{"line":443,"column":18}},"137":{"start":{"line":442,"column":20},"end":{"line":442,"column":45}},"138":{"start":{"line":446,"column":12},"end":{"line":446,"column":51}},"139":{"start":{"line":447,"column":12},"end":{"line":447,"column":56}},"140":{"start":{"line":449,"column":12},"end":{"line":452,"column":18}},"141":{"start":{"line":451,"column":20},"end":{"line":451,"column":45}},"142":{"start":{"line":465,"column":8},"end":{"line":465,"column":64}},"143":{"start":{"line":476,"column":8},"end":{"line":476,"column":84}},"144":{"start":{"line":486,"column":8},"end":{"line":486,"column":63}},"145":{"start":{"line":496,"column":8},"end":{"line":496,"column":63}},"146":{"start":{"line":506,"column":8},"end":{"line":506,"column":69}},"147":{"start":{"line":516,"column":8},"end":{"line":516,"column":67}},"148":{"start":{"line":526,"column":8},"end":{"line":526,"column":63}},"149":{"start":{"line":536,"column":8},"end":{"line":536,"column":63}},"150":{"start":{"line":547,"column":8},"end":{"line":547,"column":80}},"151":{"start":{"line":560,"column":8},"end":{"line":560,"column":93}},"152":{"start":{"line":571,"column":8},"end":{"line":571,"column":82}},"153":{"start":{"line":580,"column":8},"end":{"line":580,"column":60}},"154":{"start":{"line":590,"column":8},"end":{"line":590,"column":68}},"155":{"start":{"line":599,"column":8},"end":{"line":599,"column":60}},"156":{"start":{"line":607,"column":8},"end":{"line":607,"column":47}},"157":{"start":{"line":616,"column":8},"end":{"line":616,"column":61}},"158":{"start":{"line":624,"column":8},"end":{"line":624,"column":45}},"159":{"start":{"line":632,"column":8},"end":{"line":632,"column":59}},"160":{"start":{"line":640,"column":8},"end":{"line":640,"column":57}},"161":{"start":{"line":649,"column":8},"end":{"line":649,"column":59}},"162":{"start":{"line":653,"column":0},"end":{"line":653,"column":22}}},"branchMap":{"1":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":55},"end":{"line":44,"column":59}},{"start":{"line":44,"column":62},"end":{"line":44,"column":67}}]},"2":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":24},"end":{"line":46,"column":38}},{"start":{"line":46,"column":42},"end":{"line":46,"column":62}}]},"3":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":201,"column":8}},{"start":{"line":201,"column":8},"end":{"line":201,"column":8}}]},"4":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":206,"column":8}},{"start":{"line":206,"column":8},"end":{"line":206,"column":8}}]},"5":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":213,"column":8}},{"start":{"line":213,"column":8},"end":{"line":213,"column":8}}]},"6":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":8},"end":{"line":242,"column":8}},{"start":{"line":242,"column":8},"end":{"line":242,"column":8}}]},"7":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":16},"end":{"line":246,"column":16}},{"start":{"line":246,"column":16},"end":{"line":246,"column":16}}]},"8":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":20},"end":{"line":247,"column":20}},{"start":{"line":247,"column":20},"end":{"line":247,"column":20}}]},"9":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":20},"end":{"line":252,"column":20}},{"start":{"line":252,"column":20},"end":{"line":252,"column":20}}]},"10":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":24},"end":{"line":253,"column":24}},{"start":{"line":253,"column":24},"end":{"line":253,"column":24}}]},"11":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":24},"end":{"line":257,"column":24}},{"start":{"line":257,"column":24},"end":{"line":257,"column":24}}]},"12":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":16},"end":{"line":266,"column":16}},{"start":{"line":266,"column":16},"end":{"line":266,"column":16}}]},"13":{"line":272,"type":"binary-expr","locations":[{"start":{"line":272,"column":32},"end":{"line":272,"column":55}},{"start":{"line":272,"column":59},"end":{"line":272,"column":91}}]},"14":{"line":273,"type":"binary-expr","locations":[{"start":{"line":273,"column":33},"end":{"line":273,"column":57}},{"start":{"line":273,"column":61},"end":{"line":273,"column":94}}]},"15":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":8},"end":{"line":281,"column":8}},{"start":{"line":281,"column":8},"end":{"line":281,"column":8}}]},"16":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":16},"end":{"line":287,"column":16}},{"start":{"line":287,"column":16},"end":{"line":287,"column":16}}]},"17":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":20},"end":{"line":287,"column":53}},{"start":{"line":288,"column":20},"end":{"line":288,"column":62}}]},"18":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":20},"end":{"line":289,"column":20}},{"start":{"line":289,"column":20},"end":{"line":289,"column":20}}]},"19":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":23},"end":{"line":294,"column":23}},{"start":{"line":294,"column":23},"end":{"line":294,"column":23}}]},"20":{"line":321,"type":"cond-expr","locations":[{"start":{"line":321,"column":55},"end":{"line":325,"column":18}},{"start":{"line":325,"column":21},"end":{"line":325,"column":23}}]},"21":{"line":323,"type":"binary-expr","locations":[{"start":{"line":323,"column":37},"end":{"line":323,"column":66}},{"start":{"line":323,"column":70},"end":{"line":323,"column":75}}]},"22":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":24},"end":{"line":331,"column":24}},{"start":{"line":331,"column":24},"end":{"line":331,"column":24}}]},"23":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":28},"end":{"line":335,"column":28}},{"start":{"line":335,"column":28},"end":{"line":335,"column":28}}]},"24":{"line":371,"type":"binary-expr","locations":[{"start":{"line":371,"column":23},"end":{"line":371,"column":38}},{"start":{"line":371,"column":42},"end":{"line":371,"column":44}}]},"25":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":8},"end":{"line":379,"column":8}},{"start":{"line":379,"column":8},"end":{"line":379,"column":8}}]},"26":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":16},"end":{"line":393,"column":16}},{"start":{"line":393,"column":16},"end":{"line":393,"column":16}}]},"27":{"line":403,"type":"cond-expr","locations":[{"start":{"line":403,"column":59},"end":{"line":404,"column":48}},{"start":{"line":404,"column":51},"end":{"line":404,"column":83}}]},"28":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":16},"end":{"line":406,"column":16}},{"start":{"line":406,"column":16},"end":{"line":406,"column":16}}]},"29":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":8},"end":{"line":411,"column":8}},{"start":{"line":411,"column":8},"end":{"line":411,"column":8}}]},"30":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":20},"end":{"line":425,"column":20}},{"start":{"line":425,"column":20},"end":{"line":425,"column":20}}]},"31":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":8},"end":{"line":439,"column":8}},{"start":{"line":439,"column":8},"end":{"line":439,"column":8}}]}},"code":["'use strict'","","const InlineKeyboardButton = require('../models/InlineKeyboardButton')","const InlineKeyboardMarkup = require('../models/InlineKeyboardMarkup')","const ReplyKeyboardMarkup = require('../models/ReplyKeyboardMarkup')","const KeyboardButton = require('../models/KeyboardButton')","","class Scope {","    /**","     *","     * @param {Update} update","     * @param {TelegramApi} api","     * @param {BaseScopeExtension[]} extensions","     * @param {Function[]} waitingRequests","     * @param {Object} waitingCallbackQueries","     * @param {BaseLogger} logger","     * @param {Function} processUpdate","     * @param {TelegramSessionStorage} sessionStorage","     * @param {Function} waitForUpdate","     * @param {Function} waitForCallback","     */","    constructor(","        update,","        api,","        extensions,","        waitingRequests,","        waitingCallbackQueries,","        logger,","        sessionStorage,","        waitForUpdate,","        waitForCallback","    ) {","        this._api = api","        this._update = update","        /**","         * ","         * @type {BaseScopeExtension[]}","         * @private","         */","        this._extensions = extensions","        this._waitingRequests = waitingRequests","        this._waitingCallbackQueries = waitingCallbackQueries","","        this._isEditedMessage = update.editedMessage ? true : false","","        this._message = update.message || update.editedMessage","        this._chatId = this._message.chat.id","        this._userId = this._message.from.id","        this._fromGroupChat = !(this._userId === this._chatId)","","        this._logger = logger","        this._sessionStorage = sessionStorage","        this._waitForUpdate = waitForUpdate","        this._waitForCallback = waitForCallback","","        this._extensions.forEach(extension => {","            const extensionInstance = new extension(this)","            this[extensionInstance.name] = extensionInstance.process","        })","    }","","    /**","     * @returns {TelegramSessionStorage}","     */","    get sessionStorage() {","        return this._sessionStorage","    }","","    /**","     * @returns {BaseStorage}","     */","    get storage() {","        return this._sessionStorage","    }","","    /**","     *","     * @returns {Update}","     */","    get update() {","        return this._update","    }","","    /**","     *","     * @returns {Message}","     */","    get message() {","        return this._message","    }","","    /**","     *","     * @returns {number}","     */","    get chatId() {","        return this._chatId","    }","","    /**","     *","     * @returns {number}","     */","    get userId() {","        return this._userId","    }","","    /**","     *","     * @returns {boolean}","     */","    get idFromGroupChat() {","        return this._fromGroupChat","    }","","    /**","     *","     * @returns {TelegramApi}","     */","    get api() {","        return this._api","    }","","    /**","     * @param {string} key","     * @returns {Promise.<*>}","     */","    getUserSession(key) {","        return this._sessionStorage.getUserSession(this.userId, key)","    }","","    /**","     * @param {string} key","     * @param {*} value","     * @returns {Promise}","     */","    setUserSession(key, value) {","        return this._sessionStorage.setUserSession(this.userId, key, value)","    }","","    /**","     * @param {string} key","     * @returns {Promise.<*>}","     */","    getChatSession(key) {","        return this._sessionStorage.getChatSession(this.chatId, key)","    }","","    /**","     * @param {string} key","     * @param {*} value","     * @returns {Promise}","     */","    setChatSession(key, value) {","        return this._sessionStorage.setChatSession(this.chatId, key, value)","    }","","    /**","     *","     * @returns {BaseLogger}","     */","    get logger() {","        return this._logger","    }","","    /**","     *","     * @returns {boolean}","     */","    get isEditedMessage() {","        return this._isEditedMessage","    }","","    /**","     * After calling this the next update","     * from current user will be passed to promise","     *","     * @returns {Promise<Scope>}","     */","    get waitForRequest() {","        return new Promise(resolve => {","            this._waitingRequests[this.chatId] = resolve","            this._waitForUpdate(this.chatId)","        })","    }","","    /**","     * @callback waitForCallbackQueryCallback","     * @param {CallbackQuery} query","     */","","    /**","     * If you send some inline keyboard after that you can call this method,","     * pass to it string callback data or array of string or your InlineKeyboardMarkup","     * and then when user press button CallbackQuery will be passed to callback","     *","     * @param {string|string[]|InlineKeyboardMarkup} data","     * @param {waitForCallbackQueryCallback} callback","     */","    waitForCallbackQuery(data, callback) {","        if (typeof data === 'string') {","            this._waitForCallback(data)","            this._waitingCallbackQueries[data] = callback","        }","","        if (Array.isArray(data)) {","            data.forEach(item => {","                this._waitForCallback(item)","                this._waitingCallbackQueries[item] = callback","            })","        }","","        if (data instanceof InlineKeyboardMarkup) {","            data.inlineKeyboard.forEach(line => {","                line.forEach(key => {","                    this._waitForCallback(key.callbackData)","                    this._waitingCallbackQueries[key.callbackData] = callback","                })","            })","        }","    }","","    /**","     *","     * @param {Object} menuData","     */","    runMenu(menuData) {","        const startMessage = menuData.message","","        const ignoredKeys = [","            'message',","            'layout',","            'options',","            'resizeKeyboard',","            'oneTimeKeyboard',","            'anyMatch'","        ]","","        const keys = Object.keys(menuData)","        let keyboard = []","","        if (menuData.layout) {","            let lineIndex = 0","","            keys.forEach(key => {","                if (ignoredKeys.indexOf(key) === -1) {","                    if (!keyboard[lineIndex])","                        keyboard[lineIndex] = []","","                    keyboard[lineIndex].push(new KeyboardButton(key))","","                    if (typeof menuData.layout === 'number') {","                        if (keyboard[lineIndex].length === menuData.layout) {","                            lineIndex++","                        }","                    } else {","                        if (keyboard[lineIndex].length === menuData.layout[lineIndex]) {","                            lineIndex++","                        }","                    }","","                }","            })","        } else {","            keys.forEach(key => {","                if (ignoredKeys.indexOf(key) === -1) {","                    keyboard.push([new KeyboardButton(key)])","                }","            })","        }","","        const resizeKeyboard = (menuData.resizeKeyboard && menuData.resizeKeyboard === true)","        const oneTimeKeyboard = (menuData.oneTimeKeyboard && menuData.oneTimeKeyboard === true)","","        let replyMarkup = new ReplyKeyboardMarkup(keyboard, resizeKeyboard, oneTimeKeyboard)","","        let options = {","            reply_markup: JSON.stringify(replyMarkup)","        }","","        if (menuData.options) options = Object.assign(options, menuData.options)","","        this.sendMessage(startMessage, options)","","        this.waitForRequest","            .then($ => {","                if (keys.indexOf($.message.text) > -1 &&","                    ignoredKeys.indexOf($.message.text) === -1) {","                    if (typeof menuData[$.message.text] === 'object') {","                        $.runMenu(menuData[$.message.text])","                    } else {","                        menuData[$.message.text]($)","                    }","                } else if (menuData.anyMatch) {","                    menuData.anyMatch($)","                } else {","                    $.runMenu(menuData)","                }","            })","    }","","    /**","     *","     * @callback runFormCallback","     * @param {Object} response","     */","","    /**","     *","     * @param {Object} formData","     * @param {runFormCallback} callback","     */","    runForm(formData, callback) {","        let i = 0","","        const run = () => {","            const key = keys[i]","","            this.sendMessage(formData[key].q, {","                disable_web_page_preview: true,","                reply_markup: formData[key].keyboard ? JSON.stringify({","                    one_time_keyboard: true,","                    resize_keyboard: formData[key].resize_keyboard || false,","                    keyboard: formData[key].keyboard","                }) : ''","            })","","            this.waitForRequest","                .then($ => {","                    formData[key].validator($.message, (valid, value) => {","                        if (valid === true) {","                            result[key] = value","                            i++","","                            if (i === Object.keys(formData).length) {","                                try {","                                    callback(result)","                                }","                                catch (e) {","                                    this.logger.error({ 'error in user callback:': e })","                                }","","                                return","                            }","","                            run()","                        } else {","                            this.sendMessage(formData[key].error, {","                                disable_web_page_preview: true","                            })","                                .then(() => {","                                    run()","                                })","                        }","                    })","                })","        }","","        let result = {}","        const keys = Object.keys(formData)","","        run()","    }","","    /**","     *","     * @param {Object} menuData","     */","    runInlineMenu(menuData, prevMessage) {","        const method = menuData.method","        const params = menuData.params || []","        const layout = menuData.layout","        const menu = menuData.menu","","        let keyboard = []","","        let callbackData = []","","        if (!layout) {","            keyboard = menu.map(item => {","                callbackData.push(Math.random().toString(36).substring(7))","","                return [new InlineKeyboardButton(","                    item.text,","                    item.url,","                    callbackData[callbackData.length - 1]","                )]","            })","        }","        else {","            let line = 0","            menu.forEach(item => {","                if (!keyboard[line]) keyboard[line] = []","","                callbackData.push(Math.random().toString(36).substring(7))","","                keyboard[line].push(new InlineKeyboardButton(","                    item.text,","                    item.url,","                    callbackData[callbackData.length - 1]","                ))","","                let goToNextLine = Array.isArray(layout) ? keyboard[line].length ===","                                    layout[line] : keyboard[line].length === layout","","                if (goToNextLine)","                    line++","            })","        }","","        if (typeof params[params.length - 1] === 'object') {","            params[params.length - 1] = Object.assign(params[params.length - 1], {","                reply_markup: JSON.stringify(new InlineKeyboardMarkup(keyboard))","            })","        }","        else {","            params.push({","                reply_markup: JSON.stringify(new InlineKeyboardMarkup(keyboard))","            })","        }","","        var prepareCallback = (response) => {","            callbackData.forEach((data, index) => {","                this.waitForCallbackQuery(data, (query) => {","                    if (menu[index].callback)","                        try {","                            menu[index].callback(query, response)","                        }","                        catch (e) {","                            this.logger.error({ 'error in user callback:': e })","                        }","                    else {","                        this.runInlineMenu(menu[index], response)","                    }","                })","            })","        }","","        if (!prevMessage) {","            this[method].apply(this, params)","                .then(response => {","                    prepareCallback(response)","                })","        }","        else {","            params[0].chat_id = prevMessage.chat.id","            params[0].message_id = prevMessage.messageId","","            this.api.editMessageText(menuData.message, params[0])","                .then(response => {","                    prepareCallback(response)","                })","        }","    }","","    //api methods starts here","","    /**","     *","     * @param {string} text","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendMessage(text, options) {","        return this._api.sendMessage(this.chatId, text, options)","    }","","    /**","     *","     * @param {number} fromChatId","     * @param {number} messageId","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    forwardMessage(fromChatId, messageId, options) {","        return this._api.forwardMessage(this.chatId, fromChatId, messageId, options)","    }","","    /**","     *","     * @param {InputFile|Object} photo","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendPhoto(photo, options) {","        return this._api.sendPhoto(this.chatId, photo, options)","    }","","    /**","     *","     * @param {InputFile|Object} audio","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendAudio(audio, options) {","        return this._api.sendAudio(this.chatId, audio, options)","    }","","    /**","     *","     * @param {InputFile|Object} document","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendDocument(document, options) {","        return this._api.sendDocument(this.chatId, document, options)","    }","","    /**","     *","     * @param {InputFile|Object} sticker","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendSticker(sticker, options) {","        return this._api.sendSticker(this.chatId, sticker, options)","    }","","    /**","     *","     * @param {InputFile|Object} video","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendVideo(video, options) {","        return this._api.sendVideo(this.chatId, video, options)","    }","","    /**","     *","     * @param {InputFile|Object} voice","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendVoice(voice, options) {","        return this._api.sendVoice(this.chatId, voice, options)","    }","","    /**","     *","     * @param {number} latitude","     * @param {number} longitude","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendLocation(latitude, longitude, options) {","        return this._api.sendLocation(this.chatId, latitude, longitude, options)","    }","","    /**","     *","     * @param {number} latitude","     * @param {number} longitude","     * @param {string} title","     * @param {string}address","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendVenue(latitude, longitude, title, address, options) {","        return this._api.sendVenue(this.chatId, latitude, longitude, title, address, options)","    }","","    /**","     *","     * @param {string} phoneNumber","     * @param {string} firstName","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendContact(phoneNumber, firstName, options) {","        return this._api.sendContact(this.chatId, phoneNumber, firstName, options)","    }","","    /**","     *","     * @param {string} action","     * @returns {Promise<Object>}","     */","    sendChatAction(action) {","        return this._api.sendChatAction(this.chatId, action)","    }","","    /**","     *","     * @param {number} offset","     * @param {number} limit","     * @returns {Promise<UserProfilePhotos>}","     */","    getUserProfilePhotos(offset, limit) {","        return this._api.getUserProfilePhotos(userId, offset, limit)","    }","","    /**","     *","     * @param {number} userId","     * @returns {Promise.<boolean>}","     */","    kickChatMember(userId) {","        return this._api.kickChatMember(this.chatId, userId)","    }","","    /**","     *","     * @returns {Promise.<boolean>}","     */","    leaveChat() {","        return this._api.leaveChat(this.chatId)","    }","","    /**","     *","     * @param {number} userId","     * @returns {Promise.<boolean>}","     */","    unbanChatMember(userId) {","        return this._api.unbanChatMember(this.chatId, userId)","    }","","    /**","     *","     * @returns {Promise<Chat>}","     */","    getChat() {","        return this._api.getChat(this.chatId)","    }","","    /**","     *","     * @returns {Promise<ChatMember[]>}","     */","    getChatAdministrators() {","        return this._api.getChatAdministrators(this.chatId)","    }","","    /**","     *","     * @returns {Promise<number>}","     */","    getChatMembersCount() {","        return this._api.getChatMembersCount(this.chatId)","    }","","    /**","     *","     * @param {number} userId","     * @returns {Promise.<ChatMember>}","     */","    getChatMember(userId) {","        return this._api.getChatMember(this.chatId, userId)","    }","}","","module.exports = Scope",""],"l":{"3":1,"4":1,"5":1,"6":1,"33":0,"34":0,"40":0,"41":0,"42":0,"44":0,"46":0,"47":0,"48":0,"49":0,"51":0,"52":0,"53":0,"54":0,"56":0,"57":0,"58":0,"66":0,"73":0,"81":0,"89":0,"97":0,"105":0,"113":0,"121":0,"129":0,"138":0,"146":0,"155":0,"163":0,"171":0,"181":0,"182":0,"183":0,"201":0,"202":0,"203":0,"206":0,"207":0,"208":0,"209":0,"213":0,"214":0,"215":0,"216":0,"217":0,"228":0,"230":0,"239":0,"240":0,"242":0,"243":0,"245":0,"246":0,"247":0,"248":0,"250":0,"252":0,"253":0,"254":0,"257":0,"258":0,"265":0,"266":0,"267":0,"272":0,"273":0,"275":0,"277":0,"281":0,"283":0,"285":0,"287":0,"289":0,"290":0,"292":0,"294":0,"295":0,"297":0,"314":0,"316":0,"317":0,"319":0,"328":0,"330":0,"331":0,"332":0,"333":0,"335":0,"336":0,"337":0,"340":0,"343":0,"346":0,"348":0,"352":0,"359":0,"360":0,"362":0,"370":0,"371":0,"372":0,"373":0,"375":0,"377":0,"379":0,"380":0,"381":0,"383":0,"391":0,"392":0,"393":0,"395":0,"397":0,"403":0,"406":0,"407":0,"411":0,"412":0,"417":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"430":0,"433":0,"439":0,"440":0,"442":0,"446":0,"447":0,"449":0,"451":0,"465":0,"476":0,"486":0,"496":0,"506":0,"516":0,"526":0,"536":0,"547":0,"560":0,"571":0,"580":0,"590":0,"599":0,"607":0,"616":0,"624":0,"632":0,"640":0,"649":0,"653":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/session/TelegramSession.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/session/TelegramSession.js","s":{"1":0,"2":0,"3":0,"4":0,"5":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":15},"end":{"line":8,"column":42}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":19},"end":{"line":16,"column":22}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":19},"end":{"line":23,"column":22}}}},"statementMap":{"1":{"start":{"line":9,"column":8},"end":{"line":9,"column":39}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":39}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":32}},"4":{"start":{"line":24,"column":8},"end":{"line":24,"column":32}},"5":{"start":{"line":28,"column":0},"end":{"line":28,"column":32}}},"branchMap":{},"code":["'use strict'","","class TelegramSession {","    /**","     * @param {Object} userSession","     * @param {Object} chatSession","     */","    constructor(userSession, chatSession) {","        this._userSession = userSession","        this._chatSession = chatSession","    }","","    /**","     * @returns {Object}","     */","    get userSession() {","        return this._userSession","    }","","    /**","     * @returns {Object}","     */","    get chatSession() {","        return this._chatSession","    }","}","","module.exports = TelegramSession"],"l":{"9":0,"10":0,"17":0,"24":0,"28":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateProcessors/InlineQueryUpdateProcessor.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateProcessors/InlineQueryUpdateProcessor.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":15},"end":{"line":11,"column":28}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":20}}},"3":{"name":"(anonymous_3)","line":91,"loc":{"start":{"line":91,"column":12},"end":{"line":91,"column":21}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":49}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":25}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":33}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":39}},"6":{"start":{"line":23,"column":8},"end":{"line":23,"column":66}},"7":{"start":{"line":23,"column":60},"end":{"line":23,"column":66}},"8":{"start":{"line":25,"column":8},"end":{"line":57,"column":9}},"9":{"start":{"line":26,"column":12},"end":{"line":31,"column":13}},"10":{"start":{"line":33,"column":12},"end":{"line":33,"column":52}},"11":{"start":{"line":34,"column":12},"end":{"line":34,"column":51}},"12":{"start":{"line":36,"column":12},"end":{"line":45,"column":13}},"13":{"start":{"line":38,"column":16},"end":{"line":38,"column":79}},"14":{"start":{"line":39,"column":16},"end":{"line":39,"column":31}},"15":{"start":{"line":41,"column":16},"end":{"line":42,"column":73}},"16":{"start":{"line":42,"column":20},"end":{"line":42,"column":73}},"17":{"start":{"line":44,"column":16},"end":{"line":44,"column":22}},"18":{"start":{"line":47,"column":12},"end":{"line":56,"column":13}},"19":{"start":{"line":48,"column":16},"end":{"line":48,"column":75}},"20":{"start":{"line":51,"column":16},"end":{"line":55,"column":18}},"21":{"start":{"line":59,"column":8},"end":{"line":83,"column":9}},"22":{"start":{"line":60,"column":12},"end":{"line":60,"column":61}},"23":{"start":{"line":62,"column":12},"end":{"line":71,"column":13}},"24":{"start":{"line":63,"column":16},"end":{"line":63,"column":69}},"25":{"start":{"line":65,"column":16},"end":{"line":65,"column":51}},"26":{"start":{"line":67,"column":16},"end":{"line":68,"column":63}},"27":{"start":{"line":68,"column":20},"end":{"line":68,"column":63}},"28":{"start":{"line":70,"column":16},"end":{"line":70,"column":22}},"29":{"start":{"line":73,"column":12},"end":{"line":82,"column":13}},"30":{"start":{"line":74,"column":16},"end":{"line":74,"column":101}},"31":{"start":{"line":77,"column":16},"end":{"line":81,"column":18}},"32":{"start":{"line":92,"column":8},"end":{"line":92,"column":66}},"33":{"start":{"line":96,"column":0},"end":{"line":96,"column":43}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":8}},{"start":{"line":23,"column":8},"end":{"line":23,"column":8}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":8}},{"start":{"line":25,"column":8},"end":{"line":25,"column":8}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":12}},{"start":{"line":36,"column":12},"end":{"line":36,"column":12}}]},"4":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":16},"end":{"line":36,"column":62}},{"start":{"line":37,"column":16},"end":{"line":37,"column":71}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":16}},{"start":{"line":41,"column":16},"end":{"line":41,"column":16}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":8}},{"start":{"line":59,"column":8},"end":{"line":59,"column":8}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":12}},{"start":{"line":62,"column":12},"end":{"line":62,"column":12}}]},"8":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":16},"end":{"line":62,"column":52}},{"start":{"line":62,"column":56},"end":{"line":62,"column":101}}]},"9":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":16},"end":{"line":67,"column":16}},{"start":{"line":67,"column":16},"end":{"line":67,"column":16}}]},"10":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":36}},{"start":{"line":92,"column":40},"end":{"line":92,"column":65}}]}},"code":["'use strict'","","const BaseUpdateProcessor = require('./BaseUpdateProcessor')","const InlineScope = require('../mvc/InlineScope')","","class InlineQueryUpdateProcessor extends BaseUpdateProcessor {","    /**","     *","     * @param {BaseTelegramDataSource} dataSource","     */","    constructor(dataSource) {","        super(dataSource)","","        this._waitingQueries = {}","        this._waitingChosenResults = {}","    }","","    /**","     *","     * @param {Update} update","     */","    process(update) {","        if (!this._dataSource.router.inlineQueryController) return","","        if (update.inlineQuery) {","            let scope = new InlineScope(","                update,","                this._dataSource.api,","                this._waitingChosenResults,","                this._waitingQueries","            )","","            let queryText = update.inlineQuery.query","            let userId = update.inlineQuery.from.id","","            if (this._waitingQueries[queryText + ':' + userId] &&","                this._waitingQueries[queryText + ':' + userId] !== null) {","                const callback = this._waitingQueries[queryText + ':' + userId]","                callback(scope)","","                if (this._waitingQueries[queryText + ':' + userId] == callback)","                    this._waitingQueries[queryText + ':' + userId] = null","","                return","            }","","            try {","                this._dataSource.router.inlineQueryController.handle(scope)","            }","            catch (e) {","                this._dataSource.logger.error({","                    'error': e,","                    'in controller': this._dataSource.router.inlineQueryController,","                    'for update': update","                })","            }","        }","","        if (update.chosenInlineResult) {","            let resultId = update.chosenInlineResult.resultId","            ","            if (this._waitingChosenResults[resultId] && this._waitingChosenResults[resultId] !== null) {","                const callback = this._waitingChosenResults[resultId]","","                callback(update.chosenInlineResult)","","                if (this._waitingChosenResults[resultId] == callback) ","                    this._waitingChosenResults[resultId] = null","","                return","            }","","            try {","                this._dataSource.router.inlineQueryController.chosenResult(update.chosenInlineResult)","            }","            catch (e) {","                this._dataSource.logger.error({","                    'error': e,","                    'in controller': this._dataSource.router.inlineQueryController,","                    'for update': update","                })","            } ","        }","    }","","    /**","     *","     * @param {Update} update","     * @returns {boolean}","     */","    supports(update) {","        return !!(update.inlineQuery || update.chosenInlineResult)","    }","}","","module.exports = InlineQueryUpdateProcessor"],"l":{"3":1,"4":1,"12":0,"14":0,"15":0,"23":0,"25":0,"26":0,"33":0,"34":0,"36":0,"38":0,"39":0,"41":0,"42":0,"44":0,"47":0,"48":0,"51":0,"59":0,"60":0,"62":0,"63":0,"65":0,"67":0,"68":0,"70":0,"73":0,"74":0,"77":0,"92":0,"96":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/mvc/InlineScope.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/mvc/InlineScope.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":67}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":14},"end":{"line":22,"column":17}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":11},"end":{"line":30,"column":14}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":19},"end":{"line":38,"column":22}}},"5":{"name":"(anonymous_5)","line":46,"loc":{"start":{"line":46,"column":14},"end":{"line":46,"column":17}}},"6":{"name":"(anonymous_6)","line":63,"loc":{"start":{"line":63,"column":10},"end":{"line":63,"column":39}}},"7":{"name":"(anonymous_7)","line":87,"loc":{"start":{"line":87,"column":19},"end":{"line":87,"column":55}}},"8":{"name":"(anonymous_8)","line":105,"loc":{"start":{"line":105,"column":15},"end":{"line":105,"column":31}}},"9":{"name":"(anonymous_9)","line":116,"loc":{"start":{"line":116,"column":18},"end":{"line":116,"column":51}}},"10":{"name":"(anonymous_10)","line":126,"loc":{"start":{"line":126,"column":13},"end":{"line":126,"column":30}}},"11":{"name":"(anonymous_11)","line":136,"loc":{"start":{"line":136,"column":13},"end":{"line":136,"column":30}}},"12":{"name":"(anonymous_12)","line":146,"loc":{"start":{"line":146,"column":16},"end":{"line":146,"column":36}}},"13":{"name":"(anonymous_13)","line":156,"loc":{"start":{"line":156,"column":15},"end":{"line":156,"column":34}}},"14":{"name":"(anonymous_14)","line":166,"loc":{"start":{"line":166,"column":13},"end":{"line":166,"column":30}}},"15":{"name":"(anonymous_15)","line":176,"loc":{"start":{"line":176,"column":13},"end":{"line":176,"column":30}}},"16":{"name":"(anonymous_16)","line":187,"loc":{"start":{"line":187,"column":16},"end":{"line":187,"column":47}}},"17":{"name":"(anonymous_17)","line":200,"loc":{"start":{"line":200,"column":13},"end":{"line":200,"column":60}}},"18":{"name":"(anonymous_18)","line":211,"loc":{"start":{"line":211,"column":15},"end":{"line":211,"column":49}}},"19":{"name":"(anonymous_19)","line":220,"loc":{"start":{"line":220,"column":18},"end":{"line":220,"column":27}}},"20":{"name":"(anonymous_20)","line":230,"loc":{"start":{"line":230,"column":24},"end":{"line":230,"column":40}}},"21":{"name":"(anonymous_21)","line":239,"loc":{"start":{"line":239,"column":18},"end":{"line":239,"column":27}}},"22":{"name":"(anonymous_22)","line":247,"loc":{"start":{"line":247,"column":13},"end":{"line":247,"column":16}}},"23":{"name":"(anonymous_23)","line":256,"loc":{"start":{"line":256,"column":19},"end":{"line":256,"column":28}}},"24":{"name":"(anonymous_24)","line":264,"loc":{"start":{"line":264,"column":11},"end":{"line":264,"column":14}}},"25":{"name":"(anonymous_25)","line":272,"loc":{"start":{"line":272,"column":25},"end":{"line":272,"column":28}}},"26":{"name":"(anonymous_26)","line":280,"loc":{"start":{"line":280,"column":23},"end":{"line":280,"column":26}}},"27":{"name":"(anonymous_27)","line":289,"loc":{"start":{"line":289,"column":17},"end":{"line":289,"column":26}}}},"statementMap":{"1":{"start":{"line":10,"column":8},"end":{"line":10,"column":29}},"2":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":57}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":45}},"5":{"start":{"line":14,"column":8},"end":{"line":14,"column":46}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":49}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":27}},"8":{"start":{"line":31,"column":8},"end":{"line":31,"column":24}},"9":{"start":{"line":39,"column":8},"end":{"line":39,"column":32}},"10":{"start":{"line":47,"column":8},"end":{"line":47,"column":27}},"11":{"start":{"line":64,"column":8},"end":{"line":69,"column":10}},"12":{"start":{"line":65,"column":12},"end":{"line":66,"column":68}},"13":{"start":{"line":66,"column":16},"end":{"line":66,"column":68}},"14":{"start":{"line":68,"column":12},"end":{"line":68,"column":25}},"15":{"start":{"line":71,"column":8},"end":{"line":78,"column":14}},"16":{"start":{"line":73,"column":16},"end":{"line":77,"column":18}},"17":{"start":{"line":74,"column":20},"end":{"line":76,"column":21}},"18":{"start":{"line":75,"column":24},"end":{"line":75,"column":40}},"19":{"start":{"line":88,"column":8},"end":{"line":88,"column":57}},"20":{"start":{"line":90,"column":8},"end":{"line":90,"column":85}},"21":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"22":{"start":{"line":93,"column":12},"end":{"line":93,"column":86}},"23":{"start":{"line":106,"column":8},"end":{"line":106,"column":64}},"24":{"start":{"line":117,"column":8},"end":{"line":117,"column":84}},"25":{"start":{"line":127,"column":8},"end":{"line":127,"column":63}},"26":{"start":{"line":137,"column":8},"end":{"line":137,"column":63}},"27":{"start":{"line":147,"column":8},"end":{"line":147,"column":69}},"28":{"start":{"line":157,"column":8},"end":{"line":157,"column":67}},"29":{"start":{"line":167,"column":8},"end":{"line":167,"column":63}},"30":{"start":{"line":177,"column":8},"end":{"line":177,"column":63}},"31":{"start":{"line":188,"column":8},"end":{"line":188,"column":80}},"32":{"start":{"line":201,"column":8},"end":{"line":201,"column":93}},"33":{"start":{"line":212,"column":8},"end":{"line":212,"column":82}},"34":{"start":{"line":221,"column":8},"end":{"line":221,"column":60}},"35":{"start":{"line":231,"column":8},"end":{"line":231,"column":68}},"36":{"start":{"line":240,"column":8},"end":{"line":240,"column":60}},"37":{"start":{"line":248,"column":8},"end":{"line":248,"column":47}},"38":{"start":{"line":257,"column":8},"end":{"line":257,"column":61}},"39":{"start":{"line":265,"column":8},"end":{"line":265,"column":45}},"40":{"start":{"line":273,"column":8},"end":{"line":273,"column":59}},"41":{"start":{"line":281,"column":8},"end":{"line":281,"column":57}},"42":{"start":{"line":290,"column":8},"end":{"line":290,"column":59}},"43":{"start":{"line":294,"column":0},"end":{"line":294,"column":28}}},"branchMap":{"1":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":12}},{"start":{"line":65,"column":12},"end":{"line":65,"column":12}}]}},"code":["'use strict' ","","class InlineScope {","    /**","     * ","     * @param {Update} update","     * @param {TelegramApi} api","     */","    constructor(update, api, waitingChosenResults, waitingQueries) {","        this._update = update","        this._api = api","        this._waitingChosenResults = waitingChosenResults","        this._waitingQueries = waitingQueries","        this._inlineQuery = update.inlineQuery","        this._userId = update.inlineQuery.from.id","    }","","    /**","     *","     * @returns {Update}","     */","    get update() {","        return this._update","    }","","    /**","     * ","     * @returns {TelegramApi}","     */","    get api() {","        return this._api","    }","","    /**","     * ","     * @returns {InlineQuery}","     */","    get inlineQuery() {","        return this._inlineQuery","    }","","    /**","     * ","     * @returns {number}","     */","    get userId() {","        return this._userId","    }","","    /**","     *","     * @callback answerCallback","     * @param {InlineQueryResult} chosenResult","     */","","    /**","     *","     * @param {InlineQueryResult[]} results","     * @param {Object} [options]","     * @param {answerCallback} [callback]","     * @returns Promise<boolean>","     */","    answer(results, options, callback) {","        results = results.map(result => {","            if (!result.id)","                result._id = Math.random().toString(36).substring(7)","","            return result","        })","","        this._api.answerInlineQuery(this._inlineQuery.id, results, options)","            .then(() => {","                results.forEach(result => {","                    this._waitingChosenResults[result.id] = () => {","                        callback(result)","                    }","                })","            })","    }","","    /**","     *","     * @param {InlineQueryResult[]} results","     * @param {number} answersPerPage","     * @param {answerCallback} callback","     */","    answerPaginated(results, answersPerPage, callback) {","        let slicedData = results.slice(0, answersPerPage)","","        this.answer(slicedData, { next_offset: results.length.toString() }, callback)","","        this._waitingQueries[this._inlineQuery.query + ':' + this._inlineQuery.from.id] = ($) => {","            $.answerPaginated(results.slice(answersPerPage), answersPerPage, callback)","        }","    }","","    //api methods starts here","","    /**","     *","     * @param {string} text","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendMessage(text, options) {","        return this._api.sendMessage(this.userId, text, options)","    }","","    /**","     *","     * @param {number} fromChatId","     * @param {number} messageId","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    forwardMessage(fromChatId, messageId, options) {","        return this._api.forwardMessage(this.userId, fromChatId, messageId, options)","    }","","    /**","     *","     * @param {InputFile|Object} photo","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendPhoto(photo, options) {","        return this._api.sendPhoto(this.userId, photo, options)","    }","","    /**","     *","     * @param {InputFile|Object} audio","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendAudio(audio, options) {","        return this._api.sendAudio(this.userId, audio, options)","    }","","    /**","     *","     * @param {InputFile|Object} document","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendDocument(document, options) {","        return this._api.sendDocument(this.userId, document, options)","    }","","    /**","     *","     * @param {InputFile|Object} sticker","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendSticker(sticker, options) {","        return this._api.sendSticker(this.userId, sticker, options)","    }","","    /**","     *","     * @param {InputFile|Object} video","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendVideo(video, options) {","        return this._api.sendVideo(this.userId, video, options)","    }","","    /**","     *","     * @param {InputFile|Object} voice","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendVoice(voice, options) {","        return this._api.sendVoice(this.userId, voice, options)","    }","","    /**","     *","     * @param {number} latitude","     * @param {number} longitude","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendLocation(latitude, longitude, options) {","        return this._api.sendLocation(this.userId, latitude, longitude, options)","    }","","    /**","     *","     * @param {number} latitude","     * @param {number} longitude","     * @param {string} title","     * @param {string}address","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendVenue(latitude, longitude, title, address, options) {","        return this._api.sendVenue(this.userId, latitude, longitude, title, address, options)","    }","","    /**","     *","     * @param {string} phoneNumber","     * @param {string} firstName","     * @param {Object} [options]","     * @returns {Promise<Message>}","     */","    sendContact(phoneNumber, firstName, options) {","        return this._api.sendContact(this.userId, phoneNumber, firstName, options)","    }","","    /**","     *","     * @param {string} action","     * @returns {Promise<Object>}","     */","    sendChatAction(action) {","        return this._api.sendChatAction(this.userId, action)","    }","","    /**","     *","     * @param {number} offset","     * @param {number} limit","     * @returns {Promise<UserProfilePhotos>}","     */","    getUserProfilePhotos(offset, limit) {","        return this._api.getUserProfilePhotos(userId, offset, limit)","    }","","    /**","     *","     * @param {number} userId","     * @returns {Promise<boolean>}","     */","    kickChatMember(userId) {","        return this._api.kickChatMember(this.userId, userId)","    }","","    /**","     *","     * @returns {Promise<boolean>}","     */","    leaveChat() {","        return this._api.leaveChat(this.userId)","    }","","    /**","     *","     * @param {number} userId","     * @returns {Promise<boolean>}","     */","    unbanChatMember(userId) {","        return this._api.unbanChatMember(this.userId, userId)","    }","","    /**","     *","     * @returns {Promise<Chat>}","     */","    getChat() {","        return this._api.getChat(this.userId)","    }","","    /**","     *","     * @returns {Promise<ChatMember[]>}","     */","    getChatAdministrators() {","        return this._api.getChatAdministrators(this.userId)","    }","","    /**","     *","     * @returns {Promise<number>}","     */","    getChatMembersCount() {","        return this._api.getChatMembersCount(this.userId)","    }","","    /**","     *","     * @param {number} userId","     * @returns {Promise.<ChatMember>}","     */","    getChatMember(userId) {","        return this._api.getChatMember(this.userId, userId)","    }","}","","module.exports = InlineScope"],"l":{"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"23":0,"31":0,"39":0,"47":0,"64":0,"65":0,"66":0,"68":0,"71":0,"73":0,"74":0,"75":0,"88":0,"90":0,"92":0,"93":0,"106":0,"117":0,"127":0,"137":0,"147":0,"157":0,"167":0,"177":0,"188":0,"201":0,"212":0,"221":0,"231":0,"240":0,"248":0,"257":0,"265":0,"273":0,"281":0,"290":0,"294":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/session/InMemoryStorage.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/session/InMemoryStorage.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":18}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":7},"end":{"line":20,"column":22}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":7},"end":{"line":33,"column":28}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":10},"end":{"line":47,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":15}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":26}},"4":{"start":{"line":21,"column":8},"end":{"line":25,"column":10}},"5":{"start":{"line":22,"column":12},"end":{"line":22,"column":68}},"6":{"start":{"line":22,"column":41},"end":{"line":22,"column":68}},"7":{"start":{"line":24,"column":12},"end":{"line":24,"column":54}},"8":{"start":{"line":34,"column":8},"end":{"line":40,"column":10}},"9":{"start":{"line":35,"column":12},"end":{"line":35,"column":68}},"10":{"start":{"line":35,"column":41},"end":{"line":35,"column":68}},"11":{"start":{"line":37,"column":12},"end":{"line":37,"column":46}},"12":{"start":{"line":39,"column":12},"end":{"line":39,"column":21}},"13":{"start":{"line":48,"column":8},"end":{"line":54,"column":10}},"14":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"15":{"start":{"line":50,"column":16},"end":{"line":50,"column":50}},"16":{"start":{"line":53,"column":12},"end":{"line":53,"column":21}},"17":{"start":{"line":58,"column":0},"end":{"line":58,"column":32}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":12}},{"start":{"line":22,"column":12},"end":{"line":22,"column":12}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":20},"end":{"line":24,"column":47}},{"start":{"line":24,"column":51},"end":{"line":24,"column":53}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":12}},{"start":{"line":35,"column":12},"end":{"line":35,"column":12}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":12}},{"start":{"line":49,"column":12},"end":{"line":49,"column":12}}]},"5":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":16},"end":{"line":49,"column":38}},{"start":{"line":49,"column":42},"end":{"line":49,"column":69}}]}},"code":["'use strict'","","const BaseStorage = require('../BaseStorage')","","/**"," * Standard in memory storage, will be used if there is no custom storage passed Telegram"," */","class InMemoryStorage extends BaseStorage {","    constructor() {","        super()","","        this._storage = {}","    }","","    /**","     * @param {string} storage","     * @param {string} key","     * @returns {Promise<Object>}","     */","    get(storage, key) {","        return new Promise(resolve => {","            if (!this._storage[storage]) this._storage[storage] = {}","","            resolve(this._storage[storage][key] || {})","        })","    }","","    /**","     * @param {string} storage","     * @param {key} key","     * @param {Object} data","     */","    set(storage, key, data) {","        return new Promise(resolve => {","            if (!this._storage[storage]) this._storage[storage] = {}","","            this._storage[storage][key] = data","","            resolve()","        })","    }","","    /**","     * @param {string} storage","     * @param {string} key","     */","    remove(storage, key) {","        return new Promise(resolve => {","            if (this._storage[storage] && this._storage[storage][key]) {","                this._storage[storage][key] = null","            }","","            resolve()","        })","    }","}","","module.exports = InMemoryStorage"],"l":{"3":1,"10":0,"12":0,"21":0,"22":0,"24":0,"34":0,"35":0,"37":0,"39":0,"48":0,"49":0,"50":0,"53":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/BaseStorage.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/BaseStorage.js","s":{"1":0,"2":0,"3":0,"4":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":7},"end":{"line":13,"column":22}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":7},"end":{"line":21,"column":28}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":10},"end":{"line":28,"column":25}}}},"statementMap":{"1":{"start":{"line":13,"column":24},"end":{"line":13,"column":48}},"2":{"start":{"line":21,"column":30},"end":{"line":21,"column":54}},"3":{"start":{"line":28,"column":27},"end":{"line":28,"column":51}},"4":{"start":{"line":31,"column":0},"end":{"line":31,"column":28}}},"branchMap":{},"code":["'use strict'","","/**"," * Represents some abstract storage"," * you must extend BaseStorage and override all methods to create your own storage"," */","class BaseStorage {","    /**","     * @param {string} storage","     * @param {string} key","     * @returns {Promise<Object>}","     */","    get(storage, key) { throw 'Not implemented' }","","    /**","     * @param {string} storage","     * @param {string} key","     * @param {Object} data","     * @returns {Promise<>}","     */","    set(storage, key, data) { throw 'Not implemented' }","","    /**","     * @param {string} storage","     * @param {string} key","     * @returns {Promise<>}","     */","    remove(storage, key) { throw 'Not implemented' }","}","","module.exports = BaseStorage"],"l":{"13":0,"21":0,"28":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/session/TelegramSessionStorage.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/session/TelegramSessionStorage.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":15},"end":{"line":11,"column":25}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":32}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":18},"end":{"line":34,"column":39}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":18},"end":{"line":47,"column":32}}},"5":{"name":"(anonymous_5)","line":60,"loc":{"start":{"line":60,"column":18},"end":{"line":60,"column":39}}},"6":{"name":"(anonymous_6)","line":74,"loc":{"start":{"line":74,"column":30},"end":{"line":74,"column":44}}},"7":{"name":"(anonymous_7)","line":84,"loc":{"start":{"line":84,"column":30},"end":{"line":84,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":31}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":24}},"5":{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},"6":{"start":{"line":35,"column":8},"end":{"line":39,"column":9}},"7":{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},"8":{"start":{"line":61,"column":8},"end":{"line":65,"column":9}},"9":{"start":{"line":75,"column":8},"end":{"line":75,"column":38}},"10":{"start":{"line":85,"column":8},"end":{"line":85,"column":38}},"11":{"start":{"line":89,"column":0},"end":{"line":89,"column":39}}},"branchMap":{},"code":["'use strict'","","const CHAT_STORAGE = 'chatStorage'","const USER_STORAGE = 'userStorage'","","class TelegramSessionStorage {","    /**","     *","     * @param {BaseStorage} storage","     */","    constructor(storage) {","        this._storage = storage","        this._cache = {}","    }","","    /**","     * @param {number} userId","     * @param {string} key","     * @returns {Promise<*>}","     */","    getUserSession(userId, key) {","        return this._storage.get(","            USER_STORAGE,","            this._generateKeyForUserSession(userId, key)","        )","    }","","    /**","     * @param {number} userId","     * @param {string} key","     * @param {*} value","     * @returns {Promise}","     */","    setUserSession(userId, key, value) {","        return this._storage.set(","            USER_STORAGE,","            this._generateKeyForUserSession(userId, key),","            value","        )","    }","","    /**","     * @param {number} chatId","     * @param {string} key","     * @returns {Promise<*>}","     */","    getChatSession(chatId, key) {","        return this._storage.get(","            CHAT_STORAGE,","            this._generateKeyForUserSession(chatId, key)","        )","    }","","    /**","     * @param {number} chatId","     * @param {string} key","     * @param {*} value","     * @returns {Promise}","     */","    setChatSession(chatId, key, value) {","        return this._storage.set(","            CHAT_STORAGE,","            this._generateKeyForUserSession(chatId, key),","            value","        )","    }","","    /**","     * @param {number} userId","     * @param {string} key","     * @returns {string}","     * @private","     */","    _generateKeyForUserSession(userId, key) {","        return `USER_${userId}_${key}`","    }","","    /**","     * @param {number} chatId","     * @param {string} key","     * @returns {string}","     * @private","     */","    _generateKeyForChatSession(chatId, key) {","        return `CHAT_${chatId}_${key}`","    }","}","","module.exports = TelegramSessionStorage",""],"l":{"3":1,"4":1,"12":0,"13":0,"22":0,"35":0,"48":0,"61":0,"75":0,"85":0,"89":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/mvc/TelegramBaseController.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/mvc/TelegramBaseController.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":18}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":10},"end":{"line":19,"column":18}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":14},"end":{"line":29,"column":17}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":10},"end":{"line":39,"column":18}}},"5":{"name":"(anonymous_5)","line":45,"loc":{"start":{"line":45,"column":11},"end":{"line":45,"column":17}}},"6":{"name":"(anonymous_6)","line":53,"loc":{"start":{"line":53,"column":20},"end":{"line":53,"column":35}}}},"statementMap":{"1":{"start":{"line":10,"column":8},"end":{"line":10,"column":24}},"2":{"start":{"line":11,"column":8},"end":{"line":11,"column":33}},"3":{"start":{"line":19,"column":20},"end":{"line":19,"column":44}},"4":{"start":{"line":29,"column":19},"end":{"line":29,"column":29}},"5":{"start":{"line":39,"column":20},"end":{"line":39,"column":33}},"6":{"start":{"line":46,"column":8},"end":{"line":46,"column":23}},"7":{"start":{"line":54,"column":8},"end":{"line":54,"column":41}},"8":{"start":{"line":58,"column":0},"end":{"line":58,"column":39}}},"branchMap":{},"code":["'use strict'","","/**"," * Represents any TelegramController"," * you must extend TelegramBaseController "," * and override at least the handle method to create controller"," */","class TelegramBaseController {","    constructor() {","        this._api = null","        this._localization = null","    }","","    /**","     * This method of your controller will be called to handle command.","     *","     * @param {Scope} scope","     */","    handle(scope) { throw 'Not implemented' }","","    /**","     * If you want a specific methods of your controller be called for specific commands,","     * you should return here an plain object where key is a route and value is name of your method.","     * In that case handle method will not be called and scope will be passed to your method.","     * Return example: { '/start': 'startMethod' }","     *","     * @returns {Object}","     */","    get routes() { return {} }","","    /**","     * This method will be called before any command handler or handle method.","     * You can modify incoming scope and must return it.","     * Your modified scope will be passed to controller.","     *","     * @param {Scope} scope","     * @returns {Scope}","     */","    before(scope) { return scope }","","    /**","     * ","     * @param {TelegramApi} api","     */","    set api(api) {","        this._api = api","    }","","    /**","     *","     * @param {Ivan} localization","     */","    set localization(localization) {","        this._localization = localization","    }","}","","module.exports = TelegramBaseController"],"l":{"10":0,"11":0,"19":0,"29":0,"39":0,"46":0,"54":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/mvc/TelegramBaseCallbackQueryController.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/mvc/TelegramBaseCallbackQueryController.js","s":{"1":0,"2":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":10},"end":{"line":14,"column":18}}}},"statementMap":{"1":{"start":{"line":14,"column":20},"end":{"line":14,"column":44}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":52}}},"branchMap":{},"code":["'use strict'","","/**"," * Base Callback Query Controller"," * you must extend TelegramBaseCallbackQueryController "," * to create callback query controller."," */","class TelegramBaseCallbackQueryController {","    /**","     * This method of your controller will be called to handle callbackQuery.","     *","     * @param {CallbackQuery} query","     */","    handle(query) { throw 'Not implemented' }","}","","module.exports = TelegramBaseCallbackQueryController"],"l":{"14":0,"17":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/mvc/TelegramBaseInlineQueryController.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/mvc/TelegramBaseInlineQueryController.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":18}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":10},"end":{"line":19,"column":18}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":16},"end":{"line":25,"column":25}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":11},"end":{"line":31,"column":17}}},"5":{"name":"(anonymous_5)","line":39,"loc":{"start":{"line":39,"column":20},"end":{"line":39,"column":35}}}},"statementMap":{"1":{"start":{"line":10,"column":8},"end":{"line":10,"column":24}},"2":{"start":{"line":11,"column":8},"end":{"line":11,"column":33}},"3":{"start":{"line":19,"column":20},"end":{"line":19,"column":44}},"4":{"start":{"line":32,"column":8},"end":{"line":32,"column":23}},"5":{"start":{"line":40,"column":8},"end":{"line":40,"column":41}},"6":{"start":{"line":44,"column":0},"end":{"line":44,"column":50}}},"branchMap":{},"code":["'use strict'","","/**"," * Base inline query controller"," * you must extend TelegramBaseInlineQueryController"," * and override at least the handle method to create controller"," */","class TelegramBaseInlineQueryController {","    constructor() {","        this._api = null","        this._localization = null","    }","    ","    /**","     * This method of your controller will be called to handle inline query.","     *","     * @param {InlineScope} scope","     */","    handle(scope) { throw 'Not implemented' }","","    /**","     *","     * @param {ChosenInlineResult} result","     */","    chosenResult(result) { }","    ","    /**","     *","     * @param {TelegramApi} api","     */","    set api(api) {","        this._api = api","    }","","    /**","     *","     * @param {Ivan} localization","     */","    set localization(localization) {","        this._localization = localization","    }","}","","module.exports = TelegramBaseInlineQueryController"],"l":{"10":0,"11":0,"19":0,"32":0,"40":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/localization/Ivan.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/localization/Ivan.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":15},"end":{"line":16,"column":40}}},"2":{"name":"(anonymous_2)","line":51,"loc":{"start":{"line":51,"column":13},"end":{"line":51,"column":39}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":11},"end":{"line":61,"column":20}}},"4":{"name":"(anonymous_4)","line":74,"loc":{"start":{"line":74,"column":22},"end":{"line":74,"column":37}}},"5":{"name":"(anonymous_5)","line":84,"loc":{"start":{"line":84,"column":22},"end":{"line":84,"column":31}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":27},"end":{"line":102,"column":34}}},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":20},"end":{"line":113,"column":34}}},"8":{"name":"(anonymous_8)","line":131,"loc":{"start":{"line":131,"column":16},"end":{"line":131,"column":30}}},"9":{"name":"(anonymous_9)","line":149,"loc":{"start":{"line":149,"column":22},"end":{"line":149,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":50}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":31}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":32}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":22}},"6":{"start":{"line":21,"column":8},"end":{"line":34,"column":9}},"7":{"start":{"line":23,"column":16},"end":{"line":23,"column":55}},"8":{"start":{"line":26,"column":16},"end":{"line":26,"column":59}},"9":{"start":{"line":27,"column":16},"end":{"line":32,"column":17}},"10":{"start":{"line":28,"column":20},"end":{"line":28,"column":60}},"11":{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},"12":{"start":{"line":35,"column":8},"end":{"line":39,"column":10}},"13":{"start":{"line":36,"column":12},"end":{"line":36,"column":99}},"14":{"start":{"line":36,"column":56},"end":{"line":36,"column":99}},"15":{"start":{"line":38,"column":12},"end":{"line":38,"column":76}},"16":{"start":{"line":41,"column":8},"end":{"line":41,"column":42}},"17":{"start":{"line":52,"column":8},"end":{"line":52,"column":67}},"18":{"start":{"line":62,"column":8},"end":{"line":65,"column":14}},"19":{"start":{"line":64,"column":16},"end":{"line":64,"column":57}},"20":{"start":{"line":75,"column":8},"end":{"line":75,"column":71}},"21":{"start":{"line":85,"column":8},"end":{"line":93,"column":14}},"22":{"start":{"line":87,"column":16},"end":{"line":92,"column":17}},"23":{"start":{"line":88,"column":20},"end":{"line":88,"column":36}},"24":{"start":{"line":91,"column":20},"end":{"line":91,"column":49}},"25":{"start":{"line":103,"column":8},"end":{"line":103,"column":86}},"26":{"start":{"line":103,"column":59},"end":{"line":103,"column":85}},"27":{"start":{"line":104,"column":8},"end":{"line":104,"column":39}},"28":{"start":{"line":114,"column":8},"end":{"line":120,"column":9}},"29":{"start":{"line":115,"column":12},"end":{"line":119,"column":13}},"30":{"start":{"line":116,"column":16},"end":{"line":118,"column":17}},"31":{"start":{"line":117,"column":20},"end":{"line":117,"column":35}},"32":{"start":{"line":122,"column":8},"end":{"line":122,"column":19}},"33":{"start":{"line":132,"column":8},"end":{"line":138,"column":9}},"34":{"start":{"line":133,"column":12},"end":{"line":137,"column":13}},"35":{"start":{"line":134,"column":16},"end":{"line":136,"column":17}},"36":{"start":{"line":135,"column":20},"end":{"line":135,"column":33}},"37":{"start":{"line":140,"column":8},"end":{"line":140,"column":19}},"38":{"start":{"line":150,"column":8},"end":{"line":150,"column":62}},"39":{"start":{"line":154,"column":0},"end":{"line":154,"column":21}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":16}},{"start":{"line":27,"column":16},"end":{"line":27,"column":16}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":12}},{"start":{"line":36,"column":12},"end":{"line":36,"column":12}}]},"3":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":16},"end":{"line":87,"column":16}},{"start":{"line":87,"column":16},"end":{"line":87,"column":16}}]},"4":{"line":104,"type":"cond-expr","locations":[{"start":{"line":104,"column":21},"end":{"line":104,"column":32}},{"start":{"line":104,"column":35},"end":{"line":104,"column":39}}]},"5":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":16},"end":{"line":116,"column":16}},{"start":{"line":116,"column":16},"end":{"line":116,"column":16}}]},"6":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":16},"end":{"line":134,"column":16}},{"start":{"line":134,"column":16},"end":{"line":134,"column":16}}]},"7":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":15},"end":{"line":150,"column":35}},{"start":{"line":150,"column":39},"end":{"line":150,"column":62}}]}},"code":["'use strict'","","const Localization = require('./Localization')","","const LOCALIZATION_STORAGE = 'localizationStorage'","","/**"," * Localization class"," */","class Ivan {","    /**","     *","     * @param {BaseStorage} storage","     * @param {Object[]} localizations","     */","    constructor(storage, localizations) {","        this._storage = storage","        this._localizations = []","        this._loc = {}","","        const locHandler = {","            set: () => {","                throw 'Cant set value for localization'","            },","            get: (target, key, receiver) => {","                let loc = this.localizationForLanguage(key)","                if (loc) {","                    return this.localizationForLanguage(key)","                }","                else {","                    return Reflect.get(target, key, receiver)","                }","            }","        }","        localizations.forEach(localization => {","            if (!this._checkLocalization(localization)) throw `Wrong localization: ${localization}`","","            this._localizations.push(Localization.deserialize(localization))","        })","","        return new Proxy(this, locHandler)","    }","","    /**","     * Translates localized string to other language","     *","     * @param {string} localizedString","     * @param {string} toLang","     * @returns {string}","     */","    translate(localizedString, toLang) {","        return this.loc[toLang][this.getPhraseKey(localizedString)]","    }","","    /**","     * Returns phrases for user by userId","     *","     * @param {number} userId","     * @returns {Promise<Object>}","     */","    forUser(userId) {","        return this.getLanguageForUser(userId)","            .then(lang => {","                return this.localizationForLanguage(lang)","            })","    }","","    /**","     * Sets language for user by userId","     *","     * @param {number} userId","     * @param {string} lang","     */","    setLanguageForUser(userId, lang) {","        this._storage.set(LOCALIZATION_STORAGE, userId, { lang: lang })","    }","","    /**","     * Returns stored language for user by userId","     *","     * @param {number} userId","     * @returns {Promise<string>}","     */","    getLanguageForUser(userId) {","        return this._storage.get(LOCALIZATION_STORAGE, userId)","            .then(user => {","                if (user.lang) {","                    return user.lang","                }","                else {","                    throw 'No data for that user'","                }","            })","    }","","    /**","     * Returns phrases for language","     *","     * @param {string} lang","     * @returns {Object|null}","     */","    localizationForLanguage(lang) {","        let loc = this._localizations.find(localization => localization.lang === lang)","        return loc ? loc.phrases : null","    }","","    /**","     * Returns language by phrase","     * ","     * @param inputPhrase","     * @returns {string|null}","     */","    languageByPhrase(inputPhrase) {","        for (const loc of this._localizations) {","            for (const phrase in loc.phrases) {","                if (loc.phrases[phrase] === inputPhrase) {","                    return loc.lang","                }","            }","        }","        ","        return null","    }","","    /**","     * Returns the key name of phrase","     * ","     * @param {string} inputPhrase","     * @returns {string|null}","     */","    getPhraseKey(inputPhrase) {","        for (const loc of this._localizations) {","            for (const phrase in loc.phrases) {","                if (loc.phrases[phrase] === inputPhrase) {","                    return phrase","                }","            }","        }","","        return null","    }","","    /**","     *","     * @param {Object} rawLocalization","     * @returns {Boolean}","     * @private","     */","    _checkLocalization(rawLocalization) {","        return rawLocalization.lang && rawLocalization.phrases","    }","}","","module.exports = Ivan"],"l":{"3":1,"5":1,"17":0,"18":0,"19":0,"21":0,"23":0,"26":0,"27":0,"28":0,"31":0,"35":0,"36":0,"38":0,"41":0,"52":0,"62":0,"64":0,"75":0,"85":0,"87":0,"88":0,"91":0,"103":0,"104":0,"114":0,"115":0,"116":0,"117":0,"122":0,"132":0,"133":0,"134":0,"135":0,"140":0,"150":0,"154":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/localization/Localization.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/localization/Localization.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":15},"end":{"line":12,"column":31}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":15}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":15},"end":{"line":29,"column":18}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":22},"end":{"line":38,"column":28}}}},"statementMap":{"1":{"start":{"line":13,"column":8},"end":{"line":13,"column":25}},"2":{"start":{"line":14,"column":8},"end":{"line":14,"column":31}},"3":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"4":{"start":{"line":30,"column":8},"end":{"line":30,"column":28}},"5":{"start":{"line":39,"column":8},"end":{"line":39,"column":54}},"6":{"start":{"line":43,"column":0},"end":{"line":43,"column":29}}},"branchMap":{},"code":["'use strict'","","/**"," * Represents Localization file"," */","class Localization {","    /**","     *","     * @param {String} lang","     * @param {Object} phrases","     */","    constructor(lang, phrases) {","        this._lang = lang","        this._phrases = phrases","    }","","    /**","     * ","     * @returns {String}","     */","    get lang() {","        return this._lang","    }","","    /**","     *","     * @returns {Object}","     */","    get phrases() {","        return this._phrases","    }","","    /**","     *","     * @param {Object} raw","     * @returns {Localization}","     */","    static deserialize(raw) {","        return new Localization(raw.lang, raw.phrases)","    }","}","","module.exports = Localization"],"l":{"13":0,"14":0,"22":0,"30":0,"39":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/mvc/BaseScopeExtension.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/mvc/BaseScopeExtension.js","s":{"1":0,"2":0,"3":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":15},"end":{"line":15,"column":23}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":11},"end":{"line":21,"column":14}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":15}}}},"statementMap":{"1":{"start":{"line":21,"column":16},"end":{"line":21,"column":40}},"2":{"start":{"line":27,"column":17},"end":{"line":27,"column":41}},"3":{"start":{"line":30,"column":0},"end":{"line":30,"column":35}}},"branchMap":{},"code":["'use strict'","","/**"," * Represents any scope extension"," * "," * if you want to create your own scope extension, "," * you must extend BaseScopeExtension "," * and override all methods"," */","class BaseScopeExtension {","    /**","     * ","     * @param {Scope} scope","     */","    constructor(scope) { }","","    /**","     * This method will be called by your extension user ( $.yourExtension(args...) )","     * @param {...*}","     */","    process() { throw 'Not implemented' }","","    /**","     * You should return your extension name here. That name will be in scope. ( $.yourExtensionName )","     * @returns {string}","     */","    get name() { throw 'Not implemented' }","}","","module.exports = BaseScopeExtension"],"l":{"21":0,"27":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateFetchers/BaseUpdateFetcher.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateFetchers/BaseUpdateFetcher.js","s":{"1":0,"2":0,"3":0,"4":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":15},"end":{"line":8,"column":29}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":9},"end":{"line":21,"column":20}}}},"statementMap":{"1":{"start":{"line":9,"column":8},"end":{"line":9,"column":23}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":29}},"3":{"start":{"line":21,"column":22},"end":{"line":21,"column":46}},"4":{"start":{"line":24,"column":0},"end":{"line":24,"column":34}}},"branchMap":{},"code":["'use strict'","","class BaseUpdateFetcher {","    /**","     * @param {TelegramApi} api","     * @param {BaseLogger} logger","     */","    constructor(api, logger) {","        this._api = api","        this._logger = logger","    }","","    /**","     * @callback fetchUpdatesCallback","     * @param {Update[]} updates","     */","","    /**","     * @param {fetchUpdatesCallback} callback","     */","    fetch(callback) { throw 'Not implemented' }","}","","module.exports = BaseUpdateFetcher"],"l":{"9":0,"10":0,"21":0,"24":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/sharedStorage/SharedStorage.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/sharedStorage/SharedStorage.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":15},"end":{"line":17,"column":25}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":28},"end":{"line":28,"column":42}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":27},"end":{"line":56,"column":33}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":7},"end":{"line":70,"column":22}}},"5":{"name":"(anonymous_5)","line":87,"loc":{"start":{"line":87,"column":7},"end":{"line":87,"column":28}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":10},"end":{"line":102,"column":25}}},"7":{"name":"(anonymous_7)","line":116,"loc":{"start":{"line":116,"column":10},"end":{"line":116,"column":13}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":49}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":59}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":15}},"8":{"start":{"line":20,"column":8},"end":{"line":20,"column":31}},"9":{"start":{"line":21,"column":8},"end":{"line":21,"column":28}},"10":{"start":{"line":29,"column":8},"end":{"line":29,"column":38}},"11":{"start":{"line":31,"column":8},"end":{"line":36,"column":9}},"12":{"start":{"line":32,"column":12},"end":{"line":35,"column":18}},"13":{"start":{"line":34,"column":20},"end":{"line":34,"column":75}},"14":{"start":{"line":38,"column":8},"end":{"line":43,"column":9}},"15":{"start":{"line":39,"column":12},"end":{"line":42,"column":18}},"16":{"start":{"line":41,"column":20},"end":{"line":41,"column":75}},"17":{"start":{"line":45,"column":8},"end":{"line":50,"column":9}},"18":{"start":{"line":46,"column":12},"end":{"line":49,"column":18}},"19":{"start":{"line":48,"column":20},"end":{"line":48,"column":75}},"20":{"start":{"line":57,"column":8},"end":{"line":57,"column":38}},"21":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"22":{"start":{"line":60,"column":12},"end":{"line":60,"column":45}},"23":{"start":{"line":71,"column":8},"end":{"line":77,"column":10}},"24":{"start":{"line":72,"column":12},"end":{"line":72,"column":34}},"25":{"start":{"line":74,"column":12},"end":{"line":74,"column":41}},"26":{"start":{"line":76,"column":12},"end":{"line":76,"column":67}},"27":{"start":{"line":88,"column":8},"end":{"line":94,"column":10}},"28":{"start":{"line":89,"column":12},"end":{"line":89,"column":34}},"29":{"start":{"line":91,"column":12},"end":{"line":91,"column":41}},"30":{"start":{"line":93,"column":12},"end":{"line":93,"column":73}},"31":{"start":{"line":103,"column":8},"end":{"line":109,"column":10}},"32":{"start":{"line":104,"column":12},"end":{"line":104,"column":34}},"33":{"start":{"line":106,"column":12},"end":{"line":106,"column":41}},"34":{"start":{"line":108,"column":12},"end":{"line":108,"column":70}},"35":{"start":{"line":117,"column":8},"end":{"line":117,"column":54}},"36":{"start":{"line":121,"column":0},"end":{"line":121,"column":30}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":8}},{"start":{"line":31,"column":8},"end":{"line":31,"column":8}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":8}},{"start":{"line":59,"column":8},"end":{"line":59,"column":8}}]}},"code":["'use strict'","","const BaseStorage = require('../BaseStorage')","const Message = require('./models/Message')","const GetMessage = require('./models/GetMessage')","const SetMessage = require('./models/SetMessage')","const RemoveMessage = require('./models/RemoveMessage')","const ResponseMessage = require('./models/ResponseMessage')","","/**"," * SharedStorage used to sync data between workers"," */","class SharedStorage extends BaseStorage {","    /**","     * @param {BaseStorage} storage","     */","    constructor(storage) {","        super()","","        this._storage = storage","        this._callbacks = {}","    }","","    /**","     * @param {object} msg","     * @param {Worker} worker","     */","    handleMessageFromWorkers(msg, worker) {","        msg = Message.deserialize(msg)","","        if (msg instanceof GetMessage) {","            this._storage.get(msg.storage, msg.key)","                .then(data => {","                    worker.send(Message.response(data, msg.id).serialize())","                })","        }","","        if (msg instanceof SetMessage) {","            this._storage.set(msg.storage, msg.key, msg.value)","                .then(() => {","                    worker.send(Message.response(null, msg.id).serialize())","                })","        }","","        if (msg instanceof RemoveMessage) {","            this._storage.remove(msg.storage, msg.key)","                .then(() => {","                    worker.send(Message.response(null, msg.id).serialize())","                })","        }","    }","","    /**","     * @param {object} msg","     */","    handleMessageFromMaster(msg) {","        msg = Message.deserialize(msg)","","        if (msg instanceof ResponseMessage) {","            this._callbacks[msg.id](msg.data)","        }","    }","","    /**","     *","     * @param {string} storage","     * @param {string} key","     * @returns {Promise<Object>}","     */","    get(storage, key) {","        return new Promise(resolve => {","            let id = this._genId()","","            this._callbacks[id] = resolve","","            process.send(Message.get(storage, key, id).serialize())","        })","    }","","    /**","     *","     * @param {string} storage","     * @param {key} key","     * @param {Object} data","     * @returns {Promise<>}","     */","    set(storage, key, data) {","        return new Promise(resolve => {","            let id = this._genId()","","            this._callbacks[id] = resolve","","            process.send(Message.set(storage, key, data, id).serialize())","        })","    }","","    /**","     *","     * @param {string} storage","     * @param {string} key","     */","    remove(storage, key) {","        return new Promise(resolve => {","            let id = this._genId()","","            this._callbacks[id] = resolve","","            process.send(Message.remove(storage, key, id).serialize())","        })","    }","","    /**","     * @returns {string}","     * @private","     */","    _genId() {","        return Math.random().toString(36).substring(7)","    }","}","","module.exports = SharedStorage"],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"18":0,"20":0,"21":0,"29":0,"31":0,"32":0,"34":0,"38":0,"39":0,"41":0,"45":0,"46":0,"48":0,"57":0,"59":0,"60":0,"71":0,"72":0,"74":0,"76":0,"88":0,"89":0,"91":0,"93":0,"103":0,"104":0,"106":0,"108":0,"117":0,"121":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/sharedStorage/models/Message.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/sharedStorage/models/Message.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":31}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":14},"end":{"line":19,"column":33}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":14},"end":{"line":29,"column":40}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":17},"end":{"line":38,"column":36}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":19},"end":{"line":47,"column":30}}},"6":{"name":"(anonymous_6)","line":54,"loc":{"start":{"line":54,"column":13},"end":{"line":54,"column":16}}},"7":{"name":"(anonymous_7)","line":61,"loc":{"start":{"line":61,"column":22},"end":{"line":61,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":25}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":31}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":67}},"8":{"start":{"line":30,"column":8},"end":{"line":30,"column":74}},"9":{"start":{"line":39,"column":8},"end":{"line":39,"column":73}},"10":{"start":{"line":48,"column":8},"end":{"line":48,"column":69}},"11":{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},"12":{"start":{"line":62,"column":8},"end":{"line":82,"column":9}},"13":{"start":{"line":64,"column":16},"end":{"line":64,"column":58}},"14":{"start":{"line":65,"column":16},"end":{"line":65,"column":21}},"15":{"start":{"line":68,"column":16},"end":{"line":68,"column":58}},"16":{"start":{"line":69,"column":16},"end":{"line":69,"column":21}},"17":{"start":{"line":72,"column":16},"end":{"line":72,"column":61}},"18":{"start":{"line":73,"column":16},"end":{"line":73,"column":21}},"19":{"start":{"line":76,"column":16},"end":{"line":76,"column":63}},"20":{"start":{"line":77,"column":16},"end":{"line":77,"column":21}},"21":{"start":{"line":80,"column":16},"end":{"line":80,"column":27}},"22":{"start":{"line":81,"column":16},"end":{"line":81,"column":21}},"23":{"start":{"line":86,"column":0},"end":{"line":86,"column":24}}},"branchMap":{"1":{"line":62,"type":"switch","locations":[{"start":{"line":63,"column":12},"end":{"line":65,"column":21}},{"start":{"line":67,"column":12},"end":{"line":69,"column":21}},{"start":{"line":71,"column":12},"end":{"line":73,"column":21}},{"start":{"line":75,"column":12},"end":{"line":77,"column":21}},{"start":{"line":79,"column":12},"end":{"line":81,"column":21}}]}},"code":["'use strict'","","const GetMessage = require('./GetMessage')","const SetMessage = require('./SetMessage')","const RemoveMessage = require('./RemoveMessage')","const ResponseMessage = require('./ResponseMessage')","","class Message {","    constructor(type, payload) {","        this._type = type","        this._payload = payload","    }","","    /**","     * @param {string} storage","     * @param {string} key","     * @param {string} id","     */","    static get(storage, key, id) {","        return new Message('get', new GetMessage(storage, key, id))","    }","","    /**","     * @param {string} storage","     * @param {string} key","     * @param {object} value","     * @param {string} id","     */","    static set(storage, key, value, id) {","        return new Message('set', new SetMessage(storage, key, value, id))","    }","","    /**","     * @param {string} storage","     * @param {string} key","     * @param {string} id","     */","    static remove(storage, key, id) {","        return new Message('remove', new RemoveMessage(storage, key, id))","    }","","    /**","     * @param {object} data","     * @param {string} id","     * @returns {Message}","     */","    static response(data, id) {","        return new Message('response', new ResponseMessage(data, id))","    }","","    /**","     * @returns {object}","     */","    serialize() {","        return {","            type: this._type,","            payload: this._payload.serialize()","        }","    }","","    static deserialize(raw) {","        switch (raw.type) {","            case 'get':","                return GetMessage.deserialize(raw.payload)","                break","","            case 'set':","                return SetMessage.deserialize(raw.payload)","                break","","            case 'remove':","                return RemoveMessage.deserialize(raw.payload)","                break","","            case 'response':","                return ResponseMessage.deserialize(raw.payload)","                break","","            default:","                return null","                break","        }","    }","}","","module.exports = Message"],"l":{"3":1,"4":1,"5":1,"6":1,"10":0,"11":0,"20":0,"30":0,"39":0,"48":0,"55":0,"62":0,"64":0,"65":0,"68":0,"69":0,"72":0,"73":0,"76":0,"77":0,"80":0,"81":0,"86":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/sharedStorage/models/GetMessage.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/sharedStorage/models/GetMessage.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":34}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":15},"end":{"line":18,"column":18}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":11},"end":{"line":25,"column":14}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":10},"end":{"line":32,"column":13}}},"5":{"name":"(anonymous_5)","line":39,"loc":{"start":{"line":39,"column":13},"end":{"line":39,"column":16}}},"6":{"name":"(anonymous_6)","line":51,"loc":{"start":{"line":51,"column":22},"end":{"line":51,"column":28}}}},"statementMap":{"1":{"start":{"line":10,"column":8},"end":{"line":10,"column":31}},"2":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":21}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":28}},"5":{"start":{"line":26,"column":8},"end":{"line":26,"column":24}},"6":{"start":{"line":33,"column":8},"end":{"line":33,"column":23}},"7":{"start":{"line":40,"column":8},"end":{"line":44,"column":9}},"8":{"start":{"line":52,"column":8},"end":{"line":56,"column":9}},"9":{"start":{"line":60,"column":0},"end":{"line":60,"column":27}}},"branchMap":{},"code":["'use strict'","","class GetMessage {","    /**","     * @param {string} storage","     * @param {string} key","     * @param {string} id","     */","    constructor(storage, key, id) {","        this._storage = storage","        this._key = key","        this._id = id","    }","","    /**","     * @returns {string}","     */","    get storage() {","        return this._storage","    }","","    /**","     * @returns {string}","     */","    get key() {","        return this._key","    }","","    /**","     * @returns {string}","     */","    get id() {","        return this._id","    }","","    /**","     * @returns {object}","     */","    serialize() {","        return {","            storage: this._storage,","            key: this._key,","            id: this._id","        }","    }","","    /**","     * @param {object} raw","     * @returns {GetMessage}","     */","    static deserialize(raw) {","        return new GetMessage(","            raw.storage,","            raw.key,","            raw.id","        )","    }","}","","module.exports = GetMessage"],"l":{"10":0,"11":0,"12":0,"19":0,"26":0,"33":0,"40":0,"52":0,"60":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/sharedStorage/models/SetMessage.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/sharedStorage/models/SetMessage.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":15},"end":{"line":10,"column":41}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":15},"end":{"line":20,"column":18}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":11},"end":{"line":27,"column":14}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":13},"end":{"line":34,"column":16}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":10},"end":{"line":41,"column":13}}},"6":{"name":"(anonymous_6)","line":48,"loc":{"start":{"line":48,"column":13},"end":{"line":48,"column":16}}},"7":{"name":"(anonymous_7)","line":61,"loc":{"start":{"line":61,"column":22},"end":{"line":61,"column":28}}}},"statementMap":{"1":{"start":{"line":11,"column":8},"end":{"line":11,"column":31}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":23}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":27}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":21}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":28}},"6":{"start":{"line":28,"column":8},"end":{"line":28,"column":24}},"7":{"start":{"line":35,"column":8},"end":{"line":35,"column":26}},"8":{"start":{"line":42,"column":8},"end":{"line":42,"column":23}},"9":{"start":{"line":49,"column":8},"end":{"line":54,"column":9}},"10":{"start":{"line":62,"column":8},"end":{"line":67,"column":9}},"11":{"start":{"line":71,"column":0},"end":{"line":71,"column":27}}},"branchMap":{},"code":["'use strict'","","class SetMessage {","    /**","     * @param {string} storage","     * @param {string} key","     * @param {object} value","     * @param {string} id","     */","    constructor(storage, key, value, id) {","        this._storage = storage","        this._key = key","        this._value = value","        this._id = id","    }","","    /**","     * @returns {string}","     */","    get storage() {","        return this._storage","    }","","    /**","     * @returns {string}","     */","    get key() {","        return this._key","    }","","    /**","     * @returns {object}","     */","    get value() {","        return this._value","    }","","    /**","     * @returns {string}","     */","    get id() {","        return this._id","    }","","    /**","     * @returns {object}","     */","    serialize() {","        return {","            storage: this._storage,","            key: this._key,","            value: this._value,","            id: this._id","        }","    }","","    /**","     * @param {object} raw","     * @returns {SetMessage}","     */","    static deserialize(raw) {","        return new SetMessage(","            raw.storage,","            raw.key,","            raw.value,","            raw.id","        )","    }","}","","module.exports = SetMessage"],"l":{"11":0,"12":0,"13":0,"14":0,"21":0,"28":0,"35":0,"42":0,"49":0,"62":0,"71":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/sharedStorage/models/RemoveMessage.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/sharedStorage/models/RemoveMessage.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":34}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":15},"end":{"line":18,"column":18}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":11},"end":{"line":25,"column":14}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":10},"end":{"line":32,"column":13}}},"5":{"name":"(anonymous_5)","line":39,"loc":{"start":{"line":39,"column":13},"end":{"line":39,"column":16}}},"6":{"name":"(anonymous_6)","line":51,"loc":{"start":{"line":51,"column":22},"end":{"line":51,"column":28}}}},"statementMap":{"1":{"start":{"line":10,"column":8},"end":{"line":10,"column":31}},"2":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":21}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":28}},"5":{"start":{"line":26,"column":8},"end":{"line":26,"column":24}},"6":{"start":{"line":33,"column":8},"end":{"line":33,"column":23}},"7":{"start":{"line":40,"column":8},"end":{"line":44,"column":9}},"8":{"start":{"line":52,"column":8},"end":{"line":56,"column":9}},"9":{"start":{"line":60,"column":0},"end":{"line":60,"column":30}}},"branchMap":{},"code":["'use strict'","","class RemoveMessage {","    /**","     * @param {string} storage","     * @param {string} key","     * @param {string} id","     */","    constructor(storage, key, id) {","        this._storage = storage","        this._key = key","        this._id = id","    }","","    /**","     * @returns {string}","     */","    get storage() {","        return this._storage","    }","","    /**","     * @returns {string}","     */","    get key() {","        return this._key","    }","","    /**","     * @returns {string}","     */","    get id() {","        return this._id","    }","","    /**","     * @returns {object}","     */","    serialize() {","        return {","            storage: this._storage,","            key: this._key,","            id: this._id","        }","    }","","    /**","     * @param {object} raw","     * @returns {RemoveMessage}","     */","    static deserialize(raw) {","        return new RemoveMessage(","            raw.storage,","            raw.key,","            raw.id","        )","    }","}","","module.exports = RemoveMessage"],"l":{"10":0,"11":0,"12":0,"19":0,"26":0,"33":0,"40":0,"52":0,"60":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/sharedStorage/models/ResponseMessage.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/storage/sharedStorage/models/ResponseMessage.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":15},"end":{"line":8,"column":26}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":15}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":10},"end":{"line":23,"column":13}}},"4":{"name":"(anonymous_4)","line":30,"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":16}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":22},"end":{"line":41,"column":28}}}},"statementMap":{"1":{"start":{"line":9,"column":8},"end":{"line":9,"column":25}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":21}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"4":{"start":{"line":24,"column":8},"end":{"line":24,"column":23}},"5":{"start":{"line":31,"column":8},"end":{"line":34,"column":9}},"6":{"start":{"line":42,"column":8},"end":{"line":45,"column":9}},"7":{"start":{"line":49,"column":0},"end":{"line":49,"column":32}}},"branchMap":{},"code":["'use strict'","","class ResponseMessage {","    /**","     * @param {object} data","     * @param {string} id","     */","    constructor(data, id) {","        this._data = data","        this._id = id","    }","","    /**","     * @returns {object}","     */","    get data() {","        return this._data","    }","","    /**","     * @returns {string}","     */","    get id() {","        return this._id","    }","","    /**","     * @returns {object}","     */","    serialize() {","        return {","            data: this._data,","            id: this._id","        }","    }","","    /**","     * @param {object} raw","     * @returns {ResponseMessage}","     */","    static deserialize(raw) {","        return new ResponseMessage(","            raw.data,","            raw.id","        )","    }","}","","module.exports = ResponseMessage"],"l":{"9":0,"10":0,"17":0,"24":0,"31":0,"42":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/ipc/TelegramIPC.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/ipc/TelegramIPC.js","s":{"1":0,"2":0,"3":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":20},"end":{"line":9,"column":29}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":27},"end":{"line":18,"column":34}}}},"statementMap":{"1":{"start":{"line":10,"column":8},"end":{"line":10,"column":63}},"2":{"start":{"line":19,"column":8},"end":{"line":19,"column":66}},"3":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}}},"branchMap":{},"code":["'use strict'","","class TelegramIPC {","    /**","     * Worker can ask master to send him next update from specific chat","     *","     * @param {number} chatId","     */","    askForNextUpdate(chatId) {","        process.send({ type: 'waitForUpdate', chatId: chatId })","    }","","    /**","     * Worker can ask master to send him next callback query for specific callback data","     *","     * @param {string} chatId","     */","    askForNextCallbackQuery(data) {","        process.send({ type: 'waitForCallbackQuery', data: data })","    }","}","","module.exports = TelegramIPC"],"l":{"10":0,"19":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/webAdmin/server/WebAdmin.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/webAdmin/server/WebAdmin.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"b":{"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":15},"end":{"line":15,"column":52}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":18},"end":{"line":34,"column":38}}},"3":{"name":"(anonymous_3)","line":78,"loc":{"start":{"line":78,"column":13},"end":{"line":78,"column":40}}},"4":{"name":"(anonymous_4)","line":95,"loc":{"start":{"line":95,"column":16},"end":{"line":95,"column":28}}},"5":{"name":"(anonymous_5)","line":114,"loc":{"start":{"line":114,"column":17},"end":{"line":114,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":24}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"5":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":25}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"8":{"start":{"line":20,"column":8},"end":{"line":20,"column":33}},"9":{"start":{"line":22,"column":8},"end":{"line":24,"column":41}},"10":{"start":{"line":23,"column":12},"end":{"line":23,"column":50}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":70}},"12":{"start":{"line":35,"column":8},"end":{"line":35,"column":94}},"13":{"start":{"line":37,"column":8},"end":{"line":60,"column":9}},"14":{"start":{"line":39,"column":16},"end":{"line":39,"column":55}},"15":{"start":{"line":40,"column":16},"end":{"line":40,"column":21}},"16":{"start":{"line":42,"column":16},"end":{"line":42,"column":47}},"17":{"start":{"line":43,"column":16},"end":{"line":43,"column":34}},"18":{"start":{"line":44,"column":16},"end":{"line":44,"column":21}},"19":{"start":{"line":46,"column":16},"end":{"line":49,"column":18}},"20":{"start":{"line":50,"column":16},"end":{"line":50,"column":55}},"21":{"start":{"line":51,"column":16},"end":{"line":51,"column":21}},"22":{"start":{"line":53,"column":16},"end":{"line":58,"column":19}},"23":{"start":{"line":62,"column":8},"end":{"line":69,"column":10}},"24":{"start":{"line":63,"column":12},"end":{"line":68,"column":13}},"25":{"start":{"line":64,"column":16},"end":{"line":64,"column":61}},"26":{"start":{"line":67,"column":16},"end":{"line":67,"column":44}},"27":{"start":{"line":79,"column":8},"end":{"line":79,"column":56}},"28":{"start":{"line":80,"column":8},"end":{"line":80,"column":44}},"29":{"start":{"line":82,"column":8},"end":{"line":85,"column":10}},"30":{"start":{"line":87,"column":8},"end":{"line":87,"column":33}},"31":{"start":{"line":96,"column":8},"end":{"line":107,"column":9}},"32":{"start":{"line":98,"column":16},"end":{"line":98,"column":34}},"33":{"start":{"line":100,"column":16},"end":{"line":100,"column":47}},"34":{"start":{"line":102,"column":16},"end":{"line":102,"column":33}},"35":{"start":{"line":104,"column":16},"end":{"line":104,"column":38}},"36":{"start":{"line":106,"column":16},"end":{"line":106,"column":35}},"37":{"start":{"line":115,"column":8},"end":{"line":115,"column":31}},"38":{"start":{"line":116,"column":8},"end":{"line":116,"column":37}},"39":{"start":{"line":120,"column":0},"end":{"line":120,"column":25}}},"branchMap":{"1":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":66},"end":{"line":35,"column":79}},{"start":{"line":35,"column":82},"end":{"line":35,"column":93}}]},"2":{"line":37,"type":"switch","locations":[{"start":{"line":38,"column":12},"end":{"line":40,"column":21}},{"start":{"line":41,"column":12},"end":{"line":44,"column":21}},{"start":{"line":45,"column":12},"end":{"line":51,"column":21}},{"start":{"line":52,"column":12},"end":{"line":58,"column":19}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":63,"column":12}},{"start":{"line":63,"column":12},"end":{"line":63,"column":12}}]},"4":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":16},"end":{"line":63,"column":21}},{"start":{"line":63,"column":25},"end":{"line":63,"column":39}}]},"5":{"line":96,"type":"switch","locations":[{"start":{"line":97,"column":12},"end":{"line":98,"column":34}},{"start":{"line":99,"column":12},"end":{"line":100,"column":47}},{"start":{"line":101,"column":12},"end":{"line":102,"column":33}},{"start":{"line":103,"column":12},"end":{"line":104,"column":38}},{"start":{"line":105,"column":12},"end":{"line":106,"column":35}}]}},"code":["'use strict'","","const http = require('http')","const path = require('path')","const fs = require('fs')","","class WebAdmin {","    /**","     * @param {string} host","     * @param {number} port","     * @param {string} path","     * @param {WebAdminLogger} logger","     * @param {Telegram} telegram","     */","    constructor(host, port, path, logger, telegram) {","        this._host = host","        this._port = port","        this._path = path","        this._logger = logger","        this._telegram = telegram","","        this._server = http.createServer((request, response) => {","            this._handleRequest(request, response)","        }).listen(this._port, this._host)","","        this._logger.log({ 'WebAdmin ': `started at ${host}:${port}`})","    }","","    /**","     * @param request","     * @param response","     * @private","     */","    _handleRequest(request, response) {","        let reqPath =  path.join(this._path, request.url == '/' ? '/index.html' : request.url)","","        switch (request.url) {","            case '/logs':","                response.end(this._logger.getAllLogs())","                break","            case '/restartWorkers':","                this._telegram.restartWorkers()","                response.end('ok')","                break","            case '/downloadLogs':","                response.writeHead(200, {","                    'Content-Type': 'text/plain',","                    'Content-Disposition': 'attachment; filename=logs.txt'","                })","                response.end(this._logger.getAllLogs())","                break","            case '/statistics':","                response.end(JSON.stringify({","                    totalRequests: this._telegram.statistics.getTotalRequestsCount(),","                    requestsForWorkers: this._telegram.statistics.getWorkersRequests(),","                    uptime: this._telegram.statistics.getUptime(),","                    workersStatus: this._telegram.statistics.getWorkersStatus()","                }))","","        }","        ","        fs.lstat(reqPath, (err, stats) => {","            if (stats && stats.isFile()) {","                this._sendFile(response, reqPath, stats.size)","            }","            else {","                this._sendNotFound(response)","            }","        })","    }","","    /**","     * @param response","     * @param {string} filePath","     * @param {number} size","     * @private","     */","    _sendFile(response, filePath, size) {","        const fileStream = fs.createReadStream(filePath)","        const ext = path.parse(filePath).ext","","        response.writeHead(200, {","            'Content-Type': this._getMimeType(ext),","            'Content-Length': size","        })","","        fileStream.pipe(response)","    }","","    /**","     * @param extension","     * @returns {*}","     * @private","     */","    _getMimeType(extension) {","        switch (extension) {","            case '.html':","                return 'text/html'","            case '.js':","                return 'application/javascript'","            case '.css':","                return 'text/css'","            case '.svg':","                return 'image/svg+xml'","            default:","                return 'text/plain'","        }","    }","","    /**","     * @param response","     * @private","     */","    _sendNotFound(response) {","        response.writeHead(404)","        response.end('404 Not found')","    }","}","","module.exports = WebAdmin"],"l":{"3":1,"4":1,"5":1,"16":0,"17":0,"18":0,"19":0,"20":0,"22":0,"23":0,"26":0,"35":0,"37":0,"39":0,"40":0,"42":0,"43":0,"44":0,"46":0,"50":0,"51":0,"53":0,"62":0,"63":0,"64":0,"67":0,"79":0,"80":0,"82":0,"87":0,"96":0,"98":0,"100":0,"102":0,"104":0,"106":0,"115":0,"116":0,"120":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateFetchers/WebhookUpdateFetcher.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateFetchers/WebhookUpdateFetcher.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":15},"end":{"line":16,"column":56}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":9},"end":{"line":30,"column":20}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":15},"end":{"line":38,"column":18}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":18},"end":{"line":52,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":56}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":26}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":23}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":25}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":33}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":85}},"10":{"start":{"line":24,"column":55},"end":{"line":24,"column":84}},"11":{"start":{"line":31,"column":8},"end":{"line":31,"column":33}},"12":{"start":{"line":32,"column":8},"end":{"line":32,"column":26}},"13":{"start":{"line":39,"column":8},"end":{"line":44,"column":14}},"14":{"start":{"line":41,"column":16},"end":{"line":43,"column":18}},"15":{"start":{"line":42,"column":20},"end":{"line":42,"column":111}},"16":{"start":{"line":53,"column":8},"end":{"line":53,"column":57}},"17":{"start":{"line":55,"column":8},"end":{"line":93,"column":9}},"18":{"start":{"line":56,"column":12},"end":{"line":56,"column":83}},"19":{"start":{"line":57,"column":12},"end":{"line":57,"column":32}},"20":{"start":{"line":58,"column":12},"end":{"line":58,"column":21}},"21":{"start":{"line":59,"column":15},"end":{"line":93,"column":9}},"22":{"start":{"line":60,"column":12},"end":{"line":60,"column":27}},"23":{"start":{"line":62,"column":12},"end":{"line":64,"column":14}},"24":{"start":{"line":63,"column":16},"end":{"line":63,"column":34}},"25":{"start":{"line":66,"column":12},"end":{"line":87,"column":14}},"26":{"start":{"line":67,"column":16},"end":{"line":67,"column":29}},"27":{"start":{"line":69,"column":16},"end":{"line":69,"column":68}},"28":{"start":{"line":70,"column":16},"end":{"line":70,"column":32}},"29":{"start":{"line":72,"column":16},"end":{"line":77,"column":17}},"30":{"start":{"line":73,"column":20},"end":{"line":73,"column":51}},"31":{"start":{"line":76,"column":20},"end":{"line":76,"column":87}},"32":{"start":{"line":79,"column":16},"end":{"line":80,"column":26}},"33":{"start":{"line":80,"column":20},"end":{"line":80,"column":26}},"34":{"start":{"line":82,"column":16},"end":{"line":82,"column":75}},"35":{"start":{"line":84,"column":16},"end":{"line":84,"column":63}},"36":{"start":{"line":86,"column":16},"end":{"line":86,"column":40}},"37":{"start":{"line":89,"column":12},"end":{"line":89,"column":94}},"38":{"start":{"line":91,"column":12},"end":{"line":91,"column":32}},"39":{"start":{"line":92,"column":12},"end":{"line":92,"column":21}},"40":{"start":{"line":97,"column":0},"end":{"line":97,"column":37}}},"branchMap":{"1":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"2":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":15},"end":{"line":59,"column":15}},{"start":{"line":59,"column":15},"end":{"line":59,"column":15}}]},"3":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":16},"end":{"line":79,"column":16}},{"start":{"line":79,"column":16},"end":{"line":79,"column":16}}]}},"code":["'use strict'","","const BaseUpdateFetcher = require('./BaseUpdateFetcher')","const http = require('http')","const Update = require('../models/Update')","","class WebhookUpdateFetcher extends BaseUpdateFetcher {","    /**","     * @param {TelegramApi} api","     * @param {BaseLogger} logger","     * @param {string} url","     * @param {string} host","     * @param {number} port","     * @param {string} apiToken","     */","    constructor(api, logger, url, host, port, apiToken) {","        super(api, logger)","","        this._url = url","        this._host = host","        this._port = port","        this._apiToken = apiToken","","        this._server = http.createServer((req, res) => this._handleRequest(req, res))","    }","","    /**","     * @param {fetchUpdatesCallback} callback","     */","    fetch(callback) {","        this._callback = callback","        this._getUpdates()","    }","","    /**","     * @private","     */","    _getUpdates() {","        this._api.setWebhook({ url: this._url })","            .then(() => {","                this._server.listen(this._port, this._host, () => {","                    this._logger.log({ WebhookUpdateFetcher: `Server started at ${this._host}:${this._port}` })","                })","            })","    }","","    /**","     * @param req","     * @param res","     * @private","     */","    _handleRequest(req, res) {","        const validateRegExp = new RegExp(this._apiToken)","","        if (!validateRegExp.test(req.url)) {","            this._logger.error({ webhook: 'Not authorized request from Telegram' })","            res.statusCode = 401","            res.end()","        } else if (req.method === 'POST') {","            let chunks = []","","            req.on('data', chunk => {","                chunks.push(chunk)","            })","","            req.on('end', () => {","                res.end('OK')","","                const data = Buffer.concat(chunks).toString('utf-8')","                let parsedUpdate","","                try {","                    parsedUpdate = JSON.parse(data)","                }","                catch (e) {","                    this._logger.error({ 'Error parsing webhook update from json': e })","                }","","                if(!parsedUpdate)","                    return","","                this._logger.log({ webhook: 'Got ', update: parsedUpdate })","","                const update = Update.deserialize(parsedUpdate)","","                this._callback([update])","            })","        } else {","            this._logger.error({ webhook: 'Authorized request from Telegram but not a POST' })","","            res.statusCode = 400","            res.end()","        }","    }","}","","module.exports = WebhookUpdateFetcher"],"l":{"3":1,"4":1,"5":1,"17":0,"19":0,"20":0,"21":0,"22":0,"24":0,"31":0,"32":0,"39":0,"41":0,"42":0,"53":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"66":0,"67":0,"69":0,"70":0,"72":0,"73":0,"76":0,"79":0,"80":0,"82":0,"84":0,"86":0,"89":0,"91":0,"92":0,"97":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateFetchers/LongPoolingUpdateFetcher.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/updateFetchers/LongPoolingUpdateFetcher.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":15},"end":{"line":10,"column":29}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":9},"end":{"line":24,"column":20}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":15},"end":{"line":34,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":56}},"2":{"start":{"line":11,"column":8},"end":{"line":11,"column":26}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":29}},"4":{"start":{"line":25,"column":8},"end":{"line":25,"column":33}},"5":{"start":{"line":26,"column":8},"end":{"line":26,"column":41}},"6":{"start":{"line":27,"column":8},"end":{"line":27,"column":26}},"7":{"start":{"line":35,"column":8},"end":{"line":35,"column":28}},"8":{"start":{"line":37,"column":8},"end":{"line":49,"column":14}},"9":{"start":{"line":39,"column":16},"end":{"line":40,"column":43}},"10":{"start":{"line":40,"column":20},"end":{"line":40,"column":43}},"11":{"start":{"line":42,"column":16},"end":{"line":42,"column":105}},"12":{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},"13":{"start":{"line":47,"column":16},"end":{"line":47,"column":58}},"14":{"start":{"line":48,"column":16},"end":{"line":48,"column":34}},"15":{"start":{"line":53,"column":0},"end":{"line":53,"column":41}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":17},"end":{"line":35,"column":23}},{"start":{"line":35,"column":27},"end":{"line":35,"column":28}}]},"2":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":16},"end":{"line":39,"column":16}},{"start":{"line":39,"column":16},"end":{"line":39,"column":16}}]},"3":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":56},"end":{"line":42,"column":96}},{"start":{"line":42,"column":99},"end":{"line":42,"column":105}}]}},"code":["'use strict'","","const BaseUpdateFetcher = require('./BaseUpdateFetcher')","","class LongPoolingUpdateFetcher extends BaseUpdateFetcher {","    /**","     * @param {TelegramApi} api","     * @param {BaseLogger} logger","     */","    constructor(api, logger) {","        super(api, logger)","","        this._callback = null","    }","","    /**","     * @callback fetchUpdatesCallback","     * @param {Update[]} updates","     */","","    /**","     * @param {fetchUpdatesCallback} callback","     */","    fetch(callback) {","        this._callback = callback","        this._api.setWebhook({ url: '' })","        this._getUpdates()","    }","","    /**","     * @param {number} [offset]","     * @private","     */","    _getUpdates(offset) {","        offset = offset || 0","","        this._api.getUpdates({ timeout: 50, offset })","            .then(updates => {","                if (updates.length > 0)","                    this._callback(updates)","","                const nextOffset = updates.length > 0 ? updates[updates.length - 1].updateId + 1 : offset","","                this._getUpdates(nextOffset)","            })","            .catch(error => {","                this._logger.error({ fetchUpdate: error })","                this._getUpdates()","            })","    }","}","","module.exports = LongPoolingUpdateFetcher"],"l":{"3":1,"11":0,"13":0,"25":0,"26":0,"27":0,"35":0,"37":0,"39":0,"40":0,"42":0,"44":0,"47":0,"48":0,"53":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/logger/WebAdminLogger.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/logger/WebAdminLogger.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":15},"end":{"line":6,"column":18}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":17}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":15},"end":{"line":26,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"2":{"start":{"line":7,"column":8},"end":{"line":7,"column":15}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":23}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"5":{"start":{"line":27,"column":8},"end":{"line":27,"column":46}},"6":{"start":{"line":29,"column":8},"end":{"line":33,"column":10}},"7":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"8":{"start":{"line":31,"column":16},"end":{"line":31,"column":56}},"9":{"start":{"line":35,"column":8},"end":{"line":35,"column":77}},"10":{"start":{"line":37,"column":8},"end":{"line":42,"column":10}},"11":{"start":{"line":38,"column":12},"end":{"line":41,"column":51}},"12":{"start":{"line":39,"column":16},"end":{"line":39,"column":76}},"13":{"start":{"line":41,"column":16},"end":{"line":41,"column":51}},"14":{"start":{"line":43,"column":8},"end":{"line":43,"column":26}},"15":{"start":{"line":47,"column":0},"end":{"line":47,"column":31}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":12}},{"start":{"line":30,"column":12},"end":{"line":30,"column":12}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":28},"end":{"line":31,"column":43}},{"start":{"line":31,"column":47},"end":{"line":31,"column":56}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":12},"end":{"line":38,"column":12}},{"start":{"line":38,"column":12},"end":{"line":38,"column":12}}]}},"code":["'use strict'","","const ConsoleLogger = require('./ConsoleLogger')","","class WebAdminLogger extends ConsoleLogger {","    constructor() {","        super()","","        this._logs = ''","    }","","    /**","     * @returns {string}","     */","    getAllLogs() {","        return this._logs","    }","","    /**","     *","     * @param {string} color","     * @param {string} prefix","     * @param {Object} data","     * @private","     */","    _prepareLog(color, prefix, data) {","        super._prepareLog(color, prefix, data)","","        Object.keys(data).forEach(key => {","            if (data[key] instanceof Error) {","                data[key] = data[key].stack || data[key]","            }","        })","","        this._logs += `${new Date().toString().split(' ')[4]} [${prefix}] - `","","        Object.keys(data).forEach(key => {","            if (typeof data[key] == 'object')","                this._logs += `${key} ${JSON.stringify(data[key], null, 2)}`","            else","                this._logs += `${key} ${data[key]}`","        })","        this._logs += '\\n'","    }","}","","module.exports = WebAdminLogger"],"l":{"3":1,"7":0,"9":0,"16":0,"27":0,"29":0,"30":0,"31":0,"35":0,"37":0,"38":0,"39":0,"41":0,"43":0,"47":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/statistics/Statistics.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/statistics/Statistics.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":18}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":21},"end":{"line":13,"column":33}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":28}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":22},"end":{"line":32,"column":25}}},"5":{"name":"(anonymous_5)","line":39,"loc":{"start":{"line":39,"column":13},"end":{"line":39,"column":16}}},"6":{"name":"(anonymous_6)","line":46,"loc":{"start":{"line":46,"column":20},"end":{"line":46,"column":23}}},"7":{"name":"(anonymous_7)","line":53,"loc":{"start":{"line":53,"column":13},"end":{"line":53,"column":25}}},"8":{"name":"(anonymous_8)","line":62,"loc":{"start":{"line":62,"column":14},"end":{"line":62,"column":26}}},"9":{"name":"(anonymous_9)","line":68,"loc":{"start":{"line":68,"column":17},"end":{"line":68,"column":21}}}},"statementMap":{"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":31}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":34}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":26}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":29}},"5":{"start":{"line":16,"column":8},"end":{"line":19,"column":49}},"6":{"start":{"line":17,"column":12},"end":{"line":17,"column":48}},"7":{"start":{"line":19,"column":12},"end":{"line":19,"column":49}},"8":{"start":{"line":26,"column":8},"end":{"line":26,"column":34}},"9":{"start":{"line":33,"column":8},"end":{"line":33,"column":36}},"10":{"start":{"line":40,"column":8},"end":{"line":40,"column":51}},"11":{"start":{"line":47,"column":8},"end":{"line":47,"column":28}},"12":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"13":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"14":{"start":{"line":69,"column":8},"end":{"line":69,"column":21}},"15":{"start":{"line":70,"column":8},"end":{"line":70,"column":36}},"16":{"start":{"line":71,"column":8},"end":{"line":71,"column":41}},"17":{"start":{"line":72,"column":8},"end":{"line":72,"column":41}},"18":{"start":{"line":73,"column":8},"end":{"line":73,"column":97}},"19":{"start":{"line":77,"column":0},"end":{"line":77,"column":27}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":8}},{"start":{"line":16,"column":8},"end":{"line":16,"column":8}}]},"2":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":25},"end":{"line":73,"column":54}},{"start":{"line":73,"column":57},"end":{"line":73,"column":59}}]},"3":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":45},"end":{"line":73,"column":48}},{"start":{"line":73,"column":51},"end":{"line":73,"column":53}}]},"4":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":83},"end":{"line":73,"column":86}},{"start":{"line":73,"column":89},"end":{"line":73,"column":91}}]}},"code":["'use strict'","","class Statistics {","    constructor() {","        this._requestsCount = 0","        this._workersRequests = {}","        this._workers = {}","    }","","    /**","     * @param {number} workerPid","     */","    registrateRequest(workerPid) {","        this._requestsCount++","","        if (!this._workersRequests[workerPid])","            this._workersRequests[workerPid] = 1","        else","            this._workersRequests[workerPid] += 1","    }","","    /**","     * @returns {number}","     */","    getTotalRequestsCount() {","        return this._requestsCount","    }","","    /**","     * @returns {{}}","     */","    getWorkersRequests() {","        return this._workersRequests","    }","","    /**","     * @returns {string}","     */","    getUptime() {","        return this._secondsToHms(process.uptime())","    }","","    /**","     * @returns {{}}","     */","    getWorkersStatus() {","        return this._workers    ","    }","","    /**","     * @param {number} workerPid","     */","    addWorker(workerPid) {","        this._workers[workerPid] = {","            status: 'live'","        }","    }","","    /**","     * @param {number} workerPid","     */","    workerDied(workerPid) {","        this._workers[workerPid] = {","            status: 'died'","        }","    }","","    _secondsToHms(d) {","        d = Number(d)","        var h = Math.floor(d / 3600)","        var m = Math.floor(d % 3600 / 60)","        var s = Math.floor(d % 3600 % 60)","        return ((h > 0 ? h + \":\" + (m < 10 ? \"0\" : \"\") : \"\") + m + \":\" + (s < 10 ? \"0\" : \"\") + s)","    }","}","","module.exports = Statistics"],"l":{"5":0,"6":0,"7":0,"14":0,"16":0,"17":0,"19":0,"26":0,"33":0,"40":0,"47":0,"54":0,"63":0,"69":0,"70":0,"71":0,"72":0,"73":0,"77":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/routing/commands/TextCommand.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/routing/commands/TextCommand.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":15},"end":{"line":10,"column":38}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":8},"end":{"line":20,"column":16}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":19},"end":{"line":28,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":11,"column":8},"end":{"line":11,"column":15}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":39}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":31}},"5":{"start":{"line":21,"column":8},"end":{"line":22,"column":62}},"6":{"start":{"line":29,"column":8},"end":{"line":29,"column":28}},"7":{"start":{"line":33,"column":0},"end":{"line":33,"column":28}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":15},"end":{"line":21,"column":33}},{"start":{"line":22,"column":12},"end":{"line":22,"column":62}}]}},"code":["'use strict'","","const BaseCommand = require('./BaseCommand')","","class TextCommand extends BaseCommand {","    /**","     * @param {string} textPattern","     * @param {string} [handler]","     */","    constructor(textPattern, handler) {","        super()","        this._textPattern = textPattern","        this._handler = handler","    }","","    /**","     * @param {Scope} scope","     * @returns {boolean}","     */","    test(scope) {","        return scope.message.text &&","            scope.message.text.indexOf(this._textPattern) > -1","    }","","    /**","     * @returns {string}","     */","    get handlerName() {","        return this._handler","    }","}","","module.exports = TextCommand"],"l":{"3":1,"11":0,"12":0,"13":0,"21":0,"29":0,"33":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/routing/commands/RegexpCommand.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/lib/routing/commands/RegexpCommand.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":15},"end":{"line":10,"column":33}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":8},"end":{"line":20,"column":16}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":19},"end":{"line":27,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":11,"column":8},"end":{"line":11,"column":15}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":31}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":74}},"6":{"start":{"line":28,"column":8},"end":{"line":28,"column":28}},"7":{"start":{"line":32,"column":0},"end":{"line":32,"column":30}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":15},"end":{"line":21,"column":33}},{"start":{"line":21,"column":37},"end":{"line":21,"column":74}}]}},"code":["'use strict'","","const BaseCommand = require('./BaseCommand')","","class RegexpCommand extends BaseCommand {","    /**","     * @param {RegExp} regexp","     * @param {string} [handler]","     */","    constructor(regexp, handler) {","        super()","        this._regexp = regexp","        this._handler = handler","    }","","    /**","     * @param {Scope} scope","     * @returns {boolean}","     */","    test(scope) {","        return scope.message.text && this._regexp.test(scope.message.text)","    }","","    /**","     * @returns {string}","     */","    get handlerName() {","        return this._handler","    }","}","","module.exports = RegexpCommand"],"l":{"3":1,"11":0,"12":0,"13":0,"21":0,"28":0,"32":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/api-scheme/GenerateTGModels.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/api-scheme/GenerateTGModels.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"generateAllModelsExport","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":59}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":24}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":7,"column":0},"end":{"line":30,"column":2}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":47}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":45}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":55}},"8":{"start":{"line":14,"column":4},"end":{"line":21,"column":6}},"9":{"start":{"line":15,"column":8},"end":{"line":20,"column":10}},"10":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"11":{"start":{"line":17,"column":16},"end":{"line":17,"column":80}},"12":{"start":{"line":19,"column":12},"end":{"line":19,"column":54}},"13":{"start":{"line":23,"column":4},"end":{"line":28,"column":6}},"14":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"15":{"start":{"line":25,"column":12},"end":{"line":25,"column":75}},"16":{"start":{"line":27,"column":8},"end":{"line":27,"column":48}},"17":{"start":{"line":32,"column":0},"end":{"line":43,"column":1}},"18":{"start":{"line":33,"column":4},"end":{"line":33,"column":17}},"19":{"start":{"line":34,"column":4},"end":{"line":34,"column":34}},"20":{"start":{"line":36,"column":4},"end":{"line":36,"column":86}},"21":{"start":{"line":36,"column":28},"end":{"line":36,"column":85}},"22":{"start":{"line":37,"column":4},"end":{"line":37,"column":73}},"23":{"start":{"line":38,"column":4},"end":{"line":38,"column":69}},"24":{"start":{"line":40,"column":4},"end":{"line":40,"column":15}},"25":{"start":{"line":42,"column":4},"end":{"line":42,"column":15}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":12}},{"start":{"line":16,"column":12},"end":{"line":16,"column":12}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]}},"code":["'use strict'","","const ModelsGenerator = require('./models/ModelsGenerator')","const fs = require('fs')","const net = require('tiny_request')","","net.get('https://core.telegram.org/bots/api', data => {","    const generator = new ModelsGenerator(data)","","    const models = generator.generateModels()","","    console.info(`${models.length} models generated\\n`)","","    models.forEach(model => {","        fs.writeFile(`./lib/models/${model.name}.js`, model.modelCode, err => {","            if(err) {","                return console.error(`Failed to save model: ${model.name}`, err)","            }","            console.info(`Saved model: ${model.name}`)","        })","    })","","    fs.writeFile(`./lib/models/Models.js`, generateAllModelsExport(models), err => {","        if(err) {","            return console.error(`Failed to save models export file:`, err)","        }","        console.info(`Saved models export file`)","    })","","})","","function generateAllModelsExport(models) {","    let code = ``","    code += `module.exports = {\\n`","","    models.forEach(model => code += `   ${model.name}: require('./${model.name}'),\\n`)","    code += `   InputMessageContent: require('./InputMessageContent'),\\n`","    code += `   InlineQueryResult: require('./InlineQueryResult'),\\n`","","    code += '}'","","    return code","}"],"l":{"3":2,"4":0,"5":0,"7":0,"8":0,"10":0,"12":0,"14":0,"15":0,"16":0,"17":0,"19":0,"23":0,"24":0,"25":0,"27":0,"32":1,"33":0,"34":0,"36":0,"37":0,"38":0,"40":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/api-scheme/models/ModelsGenerator.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/api-scheme/models/ModelsGenerator.js","s":{"1":2,"2":2,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":15},"end":{"line":22,"column":29}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":18},"end":{"line":30,"column":21}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":18},"end":{"line":52,"column":24}}},"4":{"name":"(anonymous_4)","line":73,"loc":{"start":{"line":73,"column":16},"end":{"line":73,"column":23}}},"5":{"name":"(anonymous_5)","line":83,"loc":{"start":{"line":83,"column":15},"end":{"line":83,"column":22}}},"6":{"name":"(anonymous_6)","line":94,"loc":{"start":{"line":94,"column":19},"end":{"line":94,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":54}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"4":{"start":{"line":7,"column":0},"end":{"line":15,"column":1}},"5":{"start":{"line":23,"column":8},"end":{"line":23,"column":39}},"6":{"start":{"line":31,"column":8},"end":{"line":31,"column":23}},"7":{"start":{"line":33,"column":8},"end":{"line":33,"column":43}},"8":{"start":{"line":35,"column":8},"end":{"line":41,"column":10}},"9":{"start":{"line":36,"column":12},"end":{"line":40,"column":14}},"10":{"start":{"line":43,"column":8},"end":{"line":43,"column":21}},"11":{"start":{"line":53,"column":8},"end":{"line":53,"column":23}},"12":{"start":{"line":57,"column":8},"end":{"line":68,"column":10}},"13":{"start":{"line":58,"column":12},"end":{"line":58,"column":51}},"14":{"start":{"line":60,"column":12},"end":{"line":67,"column":14}},"15":{"start":{"line":70,"column":8},"end":{"line":70,"column":21}},"16":{"start":{"line":74,"column":8},"end":{"line":74,"column":78}},"17":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"18":{"start":{"line":77,"column":12},"end":{"line":77,"column":33}},"19":{"start":{"line":80,"column":8},"end":{"line":80,"column":19}},"20":{"start":{"line":84,"column":8},"end":{"line":84,"column":78}},"21":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"22":{"start":{"line":87,"column":12},"end":{"line":87,"column":23}},"23":{"start":{"line":90,"column":8},"end":{"line":90,"column":20}},"24":{"start":{"line":95,"column":8},"end":{"line":95,"column":47}},"25":{"start":{"line":97,"column":8},"end":{"line":97,"column":28}},"26":{"start":{"line":99,"column":8},"end":{"line":153,"column":10}},"27":{"start":{"line":100,"column":12},"end":{"line":100,"column":56}},"28":{"start":{"line":101,"column":12},"end":{"line":101,"column":67}},"29":{"start":{"line":102,"column":12},"end":{"line":102,"column":78}},"30":{"start":{"line":104,"column":12},"end":{"line":152,"column":13}},"31":{"start":{"line":109,"column":16},"end":{"line":109,"column":34}},"32":{"start":{"line":110,"column":16},"end":{"line":110,"column":30}},"33":{"start":{"line":112,"column":16},"end":{"line":112,"column":41}},"34":{"start":{"line":113,"column":16},"end":{"line":113,"column":48}},"35":{"start":{"line":114,"column":16},"end":{"line":114,"column":33}},"36":{"start":{"line":116,"column":16},"end":{"line":116,"column":98}},"37":{"start":{"line":116,"column":44},"end":{"line":116,"column":98}},"38":{"start":{"line":117,"column":16},"end":{"line":117,"column":110}},"39":{"start":{"line":117,"column":49},"end":{"line":117,"column":110}},"40":{"start":{"line":120,"column":16},"end":{"line":149,"column":18}},"41":{"start":{"line":121,"column":20},"end":{"line":121,"column":37}},"42":{"start":{"line":123,"column":20},"end":{"line":123,"column":87}},"43":{"start":{"line":123,"column":57},"end":{"line":123,"column":86}},"44":{"start":{"line":125,"column":20},"end":{"line":128,"column":21}},"45":{"start":{"line":126,"column":24},"end":{"line":126,"column":56}},"46":{"start":{"line":127,"column":24},"end":{"line":127,"column":30}},"47":{"start":{"line":130,"column":20},"end":{"line":130,"column":34}},"48":{"start":{"line":131,"column":20},"end":{"line":131,"column":45}},"49":{"start":{"line":132,"column":20},"end":{"line":132,"column":45}},"50":{"start":{"line":134,"column":20},"end":{"line":143,"column":21}},"51":{"start":{"line":135,"column":24},"end":{"line":135,"column":84}},"52":{"start":{"line":137,"column":24},"end":{"line":142,"column":25}},"53":{"start":{"line":138,"column":28},"end":{"line":138,"column":59}},"54":{"start":{"line":140,"column":28},"end":{"line":140,"column":53}},"55":{"start":{"line":141,"column":28},"end":{"line":141,"column":46}},"56":{"start":{"line":145,"column":20},"end":{"line":145,"column":56}},"57":{"start":{"line":146,"column":20},"end":{"line":146,"column":44}},"58":{"start":{"line":148,"column":20},"end":{"line":148,"column":44}},"59":{"start":{"line":151,"column":16},"end":{"line":151,"column":50}},"60":{"start":{"line":151,"column":29},"end":{"line":151,"column":50}},"61":{"start":{"line":155,"column":8},"end":{"line":155,"column":24}},"62":{"start":{"line":159,"column":0},"end":{"line":159,"column":32}}},"branchMap":{"1":{"line":63,"type":"cond-expr","locations":[{"start":{"line":63,"column":62},"end":{"line":63,"column":72}},{"start":{"line":63,"column":76},"end":{"line":63,"column":125}}]},"2":{"line":63,"type":"cond-expr","locations":[{"start":{"line":63,"column":113},"end":{"line":63,"column":120}},{"start":{"line":63,"column":123},"end":{"line":63,"column":125}}]},"3":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"4":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"5":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":12}},{"start":{"line":104,"column":12},"end":{"line":104,"column":12}}]},"6":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":16},"end":{"line":105,"column":30}},{"start":{"line":106,"column":18},"end":{"line":106,"column":40}},{"start":{"line":107,"column":19},"end":{"line":107,"column":46}},{"start":{"line":107,"column":50},"end":{"line":107,"column":76}}]},"7":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":16},"end":{"line":116,"column":16}},{"start":{"line":116,"column":16},"end":{"line":116,"column":16}}]},"8":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":16},"end":{"line":117,"column":16}},{"start":{"line":117,"column":16},"end":{"line":117,"column":16}}]},"9":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":20},"end":{"line":125,"column":20}},{"start":{"line":125,"column":20},"end":{"line":125,"column":20}}]},"10":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":20},"end":{"line":134,"column":20}},{"start":{"line":134,"column":20},"end":{"line":134,"column":20}}]},"11":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":24},"end":{"line":137,"column":24}},{"start":{"line":137,"column":24},"end":{"line":137,"column":24}}]},"12":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":16},"end":{"line":151,"column":16}},{"start":{"line":151,"column":16},"end":{"line":151,"column":16}}]}},"code":["'use strict'","","const SchemeClassField = require('./SchemeClassField')","const SchemeClass = require('./SchemeClass')","const cheerio = require('cheerio')","","const JS_TYPES = {","    Integer: 'number',","    String: 'string',","    Float: 'number',","    'Float number': 'number',","    Boolean: 'boolean',","    True: 'boolean',","    False: 'boolean'","}","","class ModelsGenerator {","    /**","     *","     * @param {string} docPageData","     */","    constructor(docPageData) {","        this._docPageData = docPageData","    }","","    /**","     *","     * @returns {SchemeClass[]}","     */","    generateModels() {","        let models = []","","        let scheme = this._generateScheme()","","        scheme.forEach(model => {","            models.push(new SchemeClass(","                model.name,","                this._prepareFields(model.fields),","                model.desc","            ))","        })","","        return models","    }","","    /**","     *","     * @param {string} table","     * @returns {SchemeClassField[]}","     * @private","     */","    _prepareFields(raw) {","        let fields = []","","","","        raw.forEach(item => {","            let type = this._prepareType(item.type)","","            fields.push(new SchemeClassField(","                item.field,","                type,","                item.type.indexOf('Array of Array of') > -1 ? '2d array' : (item.type.indexOf('Array of') > -1 ? 'array' : ''),","                this._isStandart(item.type),","                !item.required,","                item.desc","            ))","        })","","        return fields","    }","","    _prepareType(type) {","        type = type.replace('Array of Array of ', '').replace('Array of ', '')","","        if (JS_TYPES[type]) {","            return JS_TYPES[type]","        }","","        return type","    }","","    _isStandart(type) {","        type = type.replace('Array of Array of ', '').replace('Array of ', '')","","        if (JS_TYPES[type]) {","            return true","        }","","        return false","    }","","","    _generateScheme() {","        let $ = cheerio.load(this._docPageData)","","        const apiScheme = []","","        $(\"h4\").each((index, el) => {","            const nextTag = $(el).next().prop(\"tagName\")","            const nextNextTag = $(el).next().next().prop(\"tagName\")","            const nextNextNextTag = $(el).next().next().next().prop(\"tagName\")","","            if (","                nextTag == 'P' &&","                ( nextNextTag == 'TABLE'","                || nextNextTag == 'BLOCKQUOTE' && nextNextNextTag == 'TABLE')","            ) {","                let isModel = true","                var model = {}","","                model.name = $(el).text()","                model.desc = $(el).next().text()","                model.fields = []","","                if (nextNextTag == 'TABLE') var table =  $(el).next().next().children().children()","                if (nextNextTag == 'BLOCKQUOTE') var table =  $(el).next().next().next().children().children()","","","                table.each((i, item) => {","                    let fieldRaw = []","","                    $(item).children().each((i, line) => fieldRaw.push($(line).text()))","","                    if (i === 0) {","                        isModel = fieldRaw[0] == \"Field\"","                        return","                    }","","                    let field = {}","                    field.field = fieldRaw[0]","                    field.type  = fieldRaw[1]","","                    if (isModel) {","                        const optionalRegexp = fieldRaw[2].match(/^Optional. (.*)$/)","","                        if (optionalRegexp != null) {","                            fieldRaw[3] = optionalRegexp[1]","                        } else {","                            fieldRaw[3] = fieldRaw[2]","                            fieldRaw[2] = true","                        }","                    }","","                    field.required = fieldRaw[2] == true","                    field.desc = fieldRaw[3]","","                    model.fields.push(field)","                })","","                if (isModel) apiScheme.push(model)","            }","        })","","        return apiScheme","    }","}","","module.exports = ModelsGenerator"],"l":{"3":2,"4":2,"5":2,"7":0,"23":0,"31":0,"33":0,"35":0,"36":0,"43":0,"53":0,"57":0,"58":0,"60":0,"70":0,"74":0,"76":0,"77":0,"80":0,"84":0,"86":0,"87":0,"90":0,"95":0,"97":0,"99":0,"100":0,"101":0,"102":0,"104":0,"109":0,"110":0,"112":0,"113":0,"114":0,"116":0,"117":0,"120":0,"121":0,"123":0,"125":0,"126":0,"127":0,"130":0,"131":0,"132":0,"134":0,"135":0,"137":0,"138":0,"140":0,"141":0,"145":0,"146":0,"148":0,"151":0,"155":0,"159":0}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/api-scheme/models/SchemeClassField.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/api-scheme/models/SchemeClassField.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":15},"end":{"line":13,"column":79}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":15}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":21},"end":{"line":36,"column":24}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":12},"end":{"line":44,"column":15}}},"5":{"name":"(anonymous_5)","line":52,"loc":{"start":{"line":52,"column":16},"end":{"line":52,"column":19}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":18},"end":{"line":60,"column":21}}},"7":{"name":"(anonymous_7)","line":68,"loc":{"start":{"line":68,"column":22},"end":{"line":68,"column":25}}},"8":{"name":"(anonymous_8)","line":76,"loc":{"start":{"line":76,"column":20},"end":{"line":76,"column":23}}},"9":{"name":"(anonymous_9)","line":84,"loc":{"start":{"line":84,"column":19},"end":{"line":84,"column":22}}},"10":{"name":"(anonymous_10)","line":94,"loc":{"start":{"line":94,"column":16},"end":{"line":94,"column":22}}},"11":{"name":"(anonymous_11)","line":113,"loc":{"start":{"line":113,"column":15},"end":{"line":113,"column":32}}}},"statementMap":{"1":{"start":{"line":14,"column":8},"end":{"line":14,"column":25}},"2":{"start":{"line":15,"column":8},"end":{"line":15,"column":33}},"3":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":45}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":37}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":58}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":61}},"8":{"start":{"line":21,"column":8},"end":{"line":21,"column":39}},"9":{"start":{"line":29,"column":8},"end":{"line":29,"column":25}},"10":{"start":{"line":37,"column":8},"end":{"line":37,"column":34}},"11":{"start":{"line":45,"column":8},"end":{"line":45,"column":25}},"12":{"start":{"line":53,"column":8},"end":{"line":53,"column":29}},"13":{"start":{"line":61,"column":8},"end":{"line":61,"column":31}},"14":{"start":{"line":69,"column":8},"end":{"line":69,"column":35}},"15":{"start":{"line":77,"column":8},"end":{"line":77,"column":33}},"16":{"start":{"line":85,"column":8},"end":{"line":85,"column":32}},"17":{"start":{"line":95,"column":8},"end":{"line":95,"column":36}},"18":{"start":{"line":97,"column":8},"end":{"line":97,"column":37}},"19":{"start":{"line":97,"column":27},"end":{"line":97,"column":37}},"20":{"start":{"line":99,"column":8},"end":{"line":99,"column":94}},"21":{"start":{"line":99,"column":55},"end":{"line":99,"column":93}},"22":{"start":{"line":101,"column":8},"end":{"line":101,"column":38}},"23":{"start":{"line":103,"column":8},"end":{"line":103,"column":35}},"24":{"start":{"line":114,"column":8},"end":{"line":124,"column":9}},"25":{"start":{"line":115,"column":12},"end":{"line":123,"column":13}},"26":{"start":{"line":117,"column":20},"end":{"line":117,"column":42}},"27":{"start":{"line":118,"column":16},"end":{"line":118,"column":21}},"28":{"start":{"line":121,"column":20},"end":{"line":121,"column":44}},"29":{"start":{"line":122,"column":16},"end":{"line":122,"column":21}},"30":{"start":{"line":126,"column":8},"end":{"line":126,"column":23}},"31":{"start":{"line":130,"column":0},"end":{"line":130,"column":33}}},"branchMap":{"1":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":8}},{"start":{"line":97,"column":8},"end":{"line":97,"column":8}}]},"2":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":8}},{"start":{"line":114,"column":8},"end":{"line":114,"column":8}}]},"3":{"line":115,"type":"switch","locations":[{"start":{"line":116,"column":16},"end":{"line":118,"column":21}},{"start":{"line":120,"column":16},"end":{"line":122,"column":21}}]}},"code":["'use strict'","","class SchemeClassField {","    /**","     *","     * @param {string} name","     * @param {string} typeName","     * @param {string} type","     * @param {boolean} isStandartType","     * @param {boolean} isOptional","     * @param {string} description","     */","    constructor(name, typeName, type, isStandartType, isOptional, description) {","        this._name = name","        this._typeName = typeName","        this._type = type","        this._isStandartType = isStandartType","        this._isOptional = isOptional","        this._nameCamelCase = this._toCamelCase(this.name)","        this._renderedType = this._renderType(typeName, type)","        this._description = description","    }","","    /**","     *","     * @returns {string}","     */","    get name() {","        return this._name","    }","","    /**","     *","     * @returns {string}","     */","    get nameCamelCase() {","        return this._nameCamelCase","    }","","    /**","     * ","     * @returns {string}","     */","    get type() {","        return this._type","    }","","    /**","     *","     * @returns {string}","     */","    get typeName() {","        return this._typeName","    }","","    /**","     *","     * @returns {boolean}","     */","    get isOptional() {","        return this._isOptional","    }","","    /**","     * ","     * @returns {boolean}","     */","    get isStandartType() {","        return this._isStandartType","    }","","    /**","     *","     * @returns {string}","     */","    get renderedType() {","        return this._renderedType","    }","","    /**","     *","     * @returns {string}","     */","    get description() {","        return this._description","    }","","    /**","     *","     * @param {string} str","     * @returns {string}","     * @private","     */","    _toCamelCase(str) {","        const parts = str.split('_')","","        if (!parts.length) return str","","        const capitalized = parts.slice(1).map(part => part[0].toUpperCase() + part.substr(1))","","        capitalized.unshift(parts[0]);","","        return capitalized.join('')","    }","","    /**","     *","     * @param {string} typeName","     * @param {string} type","     * @returns {string}","     * @private","     */","    _renderType(typeName, type) {","        if (type !== '') {","            switch (type) {","                case 'array':","                    return `${typeName}[]`","                break","","                case '2d array':","                    return `${typeName}[][]`","                break","            }","        }","","        return typeName","    }","}","","module.exports = SchemeClassField"],"l":{"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"29":0,"37":0,"45":0,"53":0,"61":0,"69":0,"77":0,"85":0,"95":0,"97":0,"99":0,"101":0,"103":0,"114":0,"115":0,"117":0,"118":0,"121":0,"122":0,"126":0,"130":1}},"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/api-scheme/models/SchemeClass.js":{"path":"/home/travis/build/npmtest/node-npmtest-telegram-node-bot/node_modules/telegram-node-bot/api-scheme/models/SchemeClass.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":15},"end":{"line":10,"column":43}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":15}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":14},"end":{"line":28,"column":17}}},"4":{"name":"(anonymous_4)","line":36,"loc":{"start":{"line":36,"column":19},"end":{"line":36,"column":22}}},"5":{"name":"(anonymous_5)","line":44,"loc":{"start":{"line":44,"column":17},"end":{"line":44,"column":20}}},"6":{"name":"(anonymous_6)","line":86,"loc":{"start":{"line":86,"column":24},"end":{"line":86,"column":27}}},"7":{"name":"(anonymous_7)","line":123,"loc":{"start":{"line":123,"column":19},"end":{"line":123,"column":27}}},"8":{"name":"(anonymous_8)","line":145,"loc":{"start":{"line":145,"column":30},"end":{"line":145,"column":33}}},"9":{"name":"(anonymous_9)","line":193,"loc":{"start":{"line":193,"column":28},"end":{"line":193,"column":31}}},"10":{"name":"(anonymous_10)","line":234,"loc":{"start":{"line":234,"column":25},"end":{"line":234,"column":28}}},"11":{"name":"(anonymous_11)","line":266,"loc":{"start":{"line":266,"column":25},"end":{"line":266,"column":28}}}},"statementMap":{"1":{"start":{"line":11,"column":8},"end":{"line":11,"column":25}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":39}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":25}},"5":{"start":{"line":29,"column":8},"end":{"line":29,"column":27}},"6":{"start":{"line":37,"column":8},"end":{"line":37,"column":32}},"7":{"start":{"line":45,"column":8},"end":{"line":45,"column":21}},"8":{"start":{"line":47,"column":8},"end":{"line":47,"column":23}},"9":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"10":{"start":{"line":50,"column":12},"end":{"line":50,"column":51}},"11":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"12":{"start":{"line":53,"column":12},"end":{"line":53,"column":49}},"13":{"start":{"line":56,"column":8},"end":{"line":56,"column":32}},"14":{"start":{"line":57,"column":8},"end":{"line":57,"column":51}},"15":{"start":{"line":59,"column":8},"end":{"line":59,"column":23}},"16":{"start":{"line":60,"column":8},"end":{"line":60,"column":42}},"17":{"start":{"line":61,"column":8},"end":{"line":61,"column":25}},"18":{"start":{"line":63,"column":8},"end":{"line":63,"column":49}},"19":{"start":{"line":64,"column":8},"end":{"line":64,"column":50}},"20":{"start":{"line":66,"column":8},"end":{"line":66,"column":82}},"21":{"start":{"line":66,"column":37},"end":{"line":66,"column":81}},"22":{"start":{"line":68,"column":8},"end":{"line":68,"column":58}},"23":{"start":{"line":70,"column":8},"end":{"line":70,"column":56}},"24":{"start":{"line":72,"column":8},"end":{"line":72,"column":53}},"25":{"start":{"line":74,"column":8},"end":{"line":74,"column":23}},"26":{"start":{"line":76,"column":8},"end":{"line":76,"column":47}},"27":{"start":{"line":78,"column":8},"end":{"line":78,"column":19}},"28":{"start":{"line":87,"column":8},"end":{"line":87,"column":71}},"29":{"start":{"line":87,"column":51},"end":{"line":87,"column":70}},"30":{"start":{"line":89,"column":8},"end":{"line":89,"column":21}},"31":{"start":{"line":91,"column":8},"end":{"line":91,"column":26}},"32":{"start":{"line":92,"column":8},"end":{"line":92,"column":25}},"33":{"start":{"line":94,"column":8},"end":{"line":97,"column":10}},"34":{"start":{"line":95,"column":12},"end":{"line":95,"column":96}},"35":{"start":{"line":96,"column":12},"end":{"line":96,"column":128}},"36":{"start":{"line":99,"column":8},"end":{"line":99,"column":25}},"37":{"start":{"line":101,"column":8},"end":{"line":106,"column":9}},"38":{"start":{"line":102,"column":12},"end":{"line":102,"column":86}},"39":{"start":{"line":105,"column":12},"end":{"line":105,"column":67}},"40":{"start":{"line":108,"column":8},"end":{"line":109,"column":38}},"41":{"start":{"line":109,"column":12},"end":{"line":109,"column":38}},"42":{"start":{"line":111,"column":8},"end":{"line":111,"column":79}},"43":{"start":{"line":111,"column":36},"end":{"line":111,"column":78}},"44":{"start":{"line":112,"column":8},"end":{"line":112,"column":22}},"45":{"start":{"line":114,"column":8},"end":{"line":114,"column":19}},"46":{"start":{"line":124,"column":8},"end":{"line":124,"column":21}},"47":{"start":{"line":126,"column":8},"end":{"line":126,"column":98}},"48":{"start":{"line":128,"column":8},"end":{"line":128,"column":26}},"49":{"start":{"line":129,"column":8},"end":{"line":129,"column":46}},"50":{"start":{"line":130,"column":8},"end":{"line":130,"column":50}},"51":{"start":{"line":131,"column":8},"end":{"line":131,"column":25}},"52":{"start":{"line":133,"column":8},"end":{"line":133,"column":53}},"53":{"start":{"line":134,"column":8},"end":{"line":134,"column":62}},"54":{"start":{"line":135,"column":8},"end":{"line":135,"column":22}},"55":{"start":{"line":137,"column":8},"end":{"line":137,"column":19}},"56":{"start":{"line":146,"column":8},"end":{"line":146,"column":21}},"57":{"start":{"line":148,"column":8},"end":{"line":148,"column":26}},"58":{"start":{"line":149,"column":8},"end":{"line":149,"column":25}},"59":{"start":{"line":150,"column":8},"end":{"line":150,"column":45}},"60":{"start":{"line":151,"column":8},"end":{"line":151,"column":49}},"61":{"start":{"line":152,"column":8},"end":{"line":152,"column":26}},"62":{"start":{"line":153,"column":8},"end":{"line":153,"column":48}},"63":{"start":{"line":155,"column":8},"end":{"line":174,"column":10}},"64":{"start":{"line":156,"column":12},"end":{"line":156,"column":44}},"65":{"start":{"line":158,"column":12},"end":{"line":167,"column":13}},"66":{"start":{"line":159,"column":16},"end":{"line":164,"column":17}},"67":{"start":{"line":160,"column":20},"end":{"line":160,"column":116}},"68":{"start":{"line":162,"column":21},"end":{"line":164,"column":17}},"69":{"start":{"line":163,"column":20},"end":{"line":163,"column":100}},"70":{"start":{"line":166,"column":16},"end":{"line":166,"column":78}},"71":{"start":{"line":169,"column":12},"end":{"line":171,"column":13}},"72":{"start":{"line":170,"column":16},"end":{"line":170,"column":47}},"73":{"start":{"line":173,"column":12},"end":{"line":173,"column":22}},"74":{"start":{"line":176,"column":8},"end":{"line":181,"column":9}},"75":{"start":{"line":177,"column":12},"end":{"line":177,"column":103}},"76":{"start":{"line":180,"column":12},"end":{"line":180,"column":71}},"77":{"start":{"line":183,"column":8},"end":{"line":183,"column":24}},"78":{"start":{"line":185,"column":8},"end":{"line":185,"column":19}},"79":{"start":{"line":194,"column":8},"end":{"line":194,"column":21}},"80":{"start":{"line":196,"column":8},"end":{"line":196,"column":26}},"81":{"start":{"line":197,"column":8},"end":{"line":197,"column":25}},"82":{"start":{"line":198,"column":8},"end":{"line":198,"column":43}},"83":{"start":{"line":199,"column":8},"end":{"line":199,"column":26}},"84":{"start":{"line":200,"column":8},"end":{"line":200,"column":36}},"85":{"start":{"line":202,"column":8},"end":{"line":219,"column":10}},"86":{"start":{"line":203,"column":12},"end":{"line":203,"column":54}},"87":{"start":{"line":206,"column":12},"end":{"line":216,"column":13}},"88":{"start":{"line":207,"column":16},"end":{"line":209,"column":17}},"89":{"start":{"line":208,"column":20},"end":{"line":208,"column":89}},"90":{"start":{"line":210,"column":16},"end":{"line":215,"column":17}},"91":{"start":{"line":211,"column":20},"end":{"line":211,"column":123}},"92":{"start":{"line":213,"column":21},"end":{"line":215,"column":17}},"93":{"start":{"line":214,"column":20},"end":{"line":214,"column":107}},"94":{"start":{"line":218,"column":12},"end":{"line":218,"column":69}},"95":{"start":{"line":222,"column":8},"end":{"line":222,"column":83}},"96":{"start":{"line":225,"column":8},"end":{"line":225,"column":24}},"97":{"start":{"line":227,"column":8},"end":{"line":227,"column":19}},"98":{"start":{"line":235,"column":8},"end":{"line":235,"column":21}},"99":{"start":{"line":236,"column":8},"end":{"line":236,"column":30}},"100":{"start":{"line":238,"column":8},"end":{"line":249,"column":10}},"101":{"start":{"line":239,"column":12},"end":{"line":239,"column":41}},"102":{"start":{"line":241,"column":12},"end":{"line":248,"column":13}},"103":{"start":{"line":242,"column":16},"end":{"line":242,"column":44}},"104":{"start":{"line":245,"column":16},"end":{"line":245,"column":91}},"105":{"start":{"line":247,"column":16},"end":{"line":247,"column":64}},"106":{"start":{"line":251,"column":8},"end":{"line":253,"column":9}},"107":{"start":{"line":252,"column":12},"end":{"line":252,"column":82}},"108":{"start":{"line":254,"column":8},"end":{"line":256,"column":9}},"109":{"start":{"line":255,"column":12},"end":{"line":255,"column":78}},"110":{"start":{"line":258,"column":8},"end":{"line":258,"column":44}},"111":{"start":{"line":267,"column":8},"end":{"line":267,"column":21}},"112":{"start":{"line":269,"column":8},"end":{"line":269,"column":26}},"113":{"start":{"line":270,"column":8},"end":{"line":270,"column":25}},"114":{"start":{"line":271,"column":8},"end":{"line":271,"column":43}},"115":{"start":{"line":272,"column":8},"end":{"line":272,"column":26}},"116":{"start":{"line":273,"column":8},"end":{"line":273,"column":33}},"117":{"start":{"line":274,"column":8},"end":{"line":274,"column":47}},"118":{"start":{"line":275,"column":8},"end":{"line":275,"column":24}},"119":{"start":{"line":277,"column":8},"end":{"line":277,"column":19}},"120":{"start":{"line":281,"column":0},"end":{"line":281,"column":28}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"2":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"3":{"line":95,"type":"cond-expr","locations":[{"start":{"line":95,"column":47},"end":{"line":95,"column":75}},{"start":{"line":95,"column":78},"end":{"line":95,"column":96}}]},"4":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":70},"end":{"line":96,"column":101}},{"start":{"line":96,"column":104},"end":{"line":96,"column":123}}]},"5":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":8}},{"start":{"line":101,"column":8},"end":{"line":101,"column":8}}]},"6":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":108,"column":8}},{"start":{"line":108,"column":8},"end":{"line":108,"column":8}}]},"7":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":11},"end":{"line":108,"column":51}},{"start":{"line":108,"column":55},"end":{"line":108,"column":98}}]},"8":{"line":126,"type":"cond-expr","locations":[{"start":{"line":126,"column":44},"end":{"line":126,"column":72}},{"start":{"line":126,"column":75},"end":{"line":126,"column":98}}]},"9":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":12},"end":{"line":158,"column":12}},{"start":{"line":158,"column":12},"end":{"line":158,"column":12}}]},"10":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":16},"end":{"line":159,"column":16}},{"start":{"line":159,"column":16},"end":{"line":159,"column":16}}]},"11":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":21},"end":{"line":162,"column":21}},{"start":{"line":162,"column":21},"end":{"line":162,"column":21}}]},"12":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":12},"end":{"line":169,"column":12}},{"start":{"line":169,"column":12},"end":{"line":169,"column":12}}]},"13":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":176,"column":8}},{"start":{"line":176,"column":8},"end":{"line":176,"column":8}}]},"14":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":12},"end":{"line":206,"column":12}},{"start":{"line":206,"column":12},"end":{"line":206,"column":12}}]},"15":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":16},"end":{"line":207,"column":16}},{"start":{"line":207,"column":16},"end":{"line":207,"column":16}}]},"16":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":16},"end":{"line":210,"column":16}},{"start":{"line":210,"column":16},"end":{"line":210,"column":16}}]},"17":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":21},"end":{"line":213,"column":21}},{"start":{"line":213,"column":21},"end":{"line":213,"column":21}}]},"18":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":12},"end":{"line":241,"column":12}},{"start":{"line":241,"column":12},"end":{"line":241,"column":12}}]},"19":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":16},"end":{"line":241,"column":37}},{"start":{"line":241,"column":41},"end":{"line":241,"column":78}},{"start":{"line":241,"column":82},"end":{"line":241,"column":103}}]},"20":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":8},"end":{"line":251,"column":8}},{"start":{"line":251,"column":8},"end":{"line":251,"column":8}}]},"21":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":8},"end":{"line":254,"column":8}},{"start":{"line":254,"column":8},"end":{"line":254,"column":8}}]},"22":{"line":258,"type":"cond-expr","locations":[{"start":{"line":258,"column":28},"end":{"line":258,"column":30}},{"start":{"line":258,"column":33},"end":{"line":258,"column":44}}]}},"code":["'use strict'","","class SchemeClass {","    /**","     * ","     * @param {string} name","     * @param {SchemeClassField[]} fields","     * @param {string} description","     */","    constructor(name, fields, description) {","        this._name = name","        this._fields = fields","        this._description = description","    }","","    /**","     *","     * @returns {string}","     */","    get name() {","        return this._name","    }","","    /**","     *","     * @returns {SchemeClassField[]}","     */","    get fields() {","        return this._fields","    }","","    /**","     *","     * @returns {string}","     */","    get description() {","        return this._description","    }","    ","    /**","     *","     * @returns {string}","     */","    get modelCode() {","        let code = ''","","        let extend = ''","","        if (this.name.indexOf('MessageContent') > -1) {","            extend = `extends InputMessageContent `","        }","        if (this.name.indexOf('InlineQueryResult') > -1) {","            extend = `extends InlineQueryResult `","        }","","        code += \"'use strict'\\n\"","        code += `\\n${this._generateRequirements()}`","","        code += `/**\\n`","        code += ` * ${this.description}\\n`","        code += ` */\\n\\n`","","        code += `class ${this.name} ${extend}{\\n`","        code += `${this._generateConstructor()}\\n`","","        this.fields.forEach(field => code += `\\n${this._generateGetter(field)}\\n`)","","        code += `\\n${this._generateDeserializeMethod()}\\n`","","        code += `\\n${this._generateSerializeMethod()}\\n`","        ","        code += `\\n${this._generateToJSONMethod()}\\n`","","        code += `}\\n\\n`","","        code += `module.exports = ${this.name}`","","        return code","    }","","    /**","     * ","     * @returns {string}","     * @private","     */","    _generateConstructor() {","        let fieldsNames = this.fields.map(field => field.nameCamelCase)","","        let code = ''","","        code += `   /**\\n`","        code += `    *\\n`","","        this.fields.forEach(field => {","            let paramType = field.isOptional ? `${field.renderedType}|null` : field.renderedType","            code += `    * @param {${paramType}} ${field.isOptional ? '[' + field.nameCamelCase + ']' : field.nameCamelCase }\\n`","        })","","        code += `   */\\n`","","        if (this.fields.length > 6) {","            code += `   constructor(\\n     ${fieldsNames.join(', \\n     ')}\\n   ) {\\n`","        }","        else {","            code += `   constructor(${fieldsNames.join(', ')}) {\\n`","        }","","        if(this.name.indexOf('MessageContent') > -1 || this.name.indexOf('InlineQueryResult') > -1)","            code += `       super()\\n`","","        fieldsNames.forEach(name => code += `       this._${name} = ${name}\\n`)","        code += '   }'","","        return code","    }","","    /**","     * ","     * @param {SchemeClassField} field","     * @returns {string}","     * @private","     */","    _generateGetter(field) {","        let code = ''","","        let returnType = field.isOptional ? `${field.renderedType}|null` : `${field.renderedType}`","","        code += `   /**\\n`","        code += `    * ${field.description}\\n`","        code += `    * @returns {${returnType}}\\n`","        code += `   */\\n`","","        code += `   get ${field.nameCamelCase}() {\\n`","        code += `       return this._${field.nameCamelCase}\\n`","        code += `   }`","","        return code","    }","","    /**","     *","     * @returns {string}","     * @private","     */","    _generateDeserializeMethod() {","        let code = ''","","        code += `   /**\\n`","        code += `    *\\n`","        code += `    * @param {Object} raw\\n`","        code += `    * @returns {${this.name}}\\n`","        code += `    */\\n`","        code += `   static deserialize(raw) {\\n`","","        let args = this.fields.map(field => {","            let raw = `raw['${field.name}']`","","            if (!field.isStandartType) {","                if (field.type == '2d array') {","                    return `${raw} ? ${raw}.map(arr => arr.map(item => ${field.typeName}.deserialize(item))) : null`","                }","                else if(field.type == 'array') {","                    return `${raw} ? ${raw}.map(item => ${field.typeName}.deserialize(item)) : null`","                }","","                return `${raw} ? ${field.typeName}.deserialize(${raw}) : null`","            }","","            if (field.isOptional) {","                return `${raw} ? ${raw} : null`","            }","","            return raw","        })","","        if (this.fields.length > 4) {","            code += `      return new ${this.name}(\\n          ${args.join(', \\n          ')}\\n      )`","        }","        else {","            code += `      return new ${this.name}(${args.join(', ')})`","        }","","        code += `\\n   }`","","        return code","    }","","    /**","     *","     * @returns {string}","     * @private","     */","    _generateSerializeMethod() {","        let code = ''","","        code += `   /**\\n`","        code += `    *\\n`","        code += `    * @returns {Object}\\n`","        code += `    */\\n`","        code += `   serialize() {\\n`","","        let obj = this.fields.map(field => {","            let getter = `this.${field.nameCamelCase}`","","","            if (!field.isStandartType) {","                if (field.type == '') {","                    return `${field.name}: ${getter} ? ${getter}.serialize() : undefined`","                }","                if (field.type == '2d array') {","                    return `${field.name}: ${getter} ? ${getter}.map(arr => arr.map(item => item.serialize())) : undefined`","                }","                else if(field.type == 'array') {","                    return `${field.name}: ${getter} ? ${getter}.map(item => item.serialize()) : undefined`","                }","            }","","            return `${field.name}: ${getter} ? ${getter} : undefined`","        })","","","        code += `      return { \\n          ${obj.join(', \\n          ')}\\n      }`","","","        code += `\\n   }`","","        return code","    }","","    /**","     * @returns {string}","     * @private","     */","    _generateRequirements() {","        let code = ''","        let renderedTypes = []","","        this.fields.forEach(field =>  {","            let typeName = field.typeName","","            if (!field.isStandartType && renderedTypes.indexOf(typeName) == -1 && typeName != this.name) {","                renderedTypes.push(typeName)","","                //because of typo here: https://core.telegram.org/bots/api#inlinequeryresultgif","                const name = typeName[0].toUpperCase() + typeName.slice(1, typeName.length)","","                code += `const ${name} = require('./${name}')\\n`","            }","        })","","        if (this.name.indexOf('MessageContent') > -1) {","            code += `const InputMessageContent = require('./InputMessageContent')`","        }","        if (this.name.indexOf('InlineQueryResult') > -1) {","            code += `const InlineQueryResult = require('./InlineQueryResult')`","        }","","        return code == '' ? '' : `${code}\\n`","    }","","    /**","     *","     * @returns {string}","     * @private","     */","    _generateToJSONMethod() {","        let code = ''","","        code += `   /**\\n`","        code += `    *\\n`","        code += `    * @returns {string}\\n`","        code += `    */\\n`","        code += `   toJSON() {\\n`","        code += `      return this.serialize()`","        code += `\\n   }`","","        return code","    }","}","","module.exports = SchemeClass"],"l":{"11":0,"12":0,"13":0,"21":0,"29":0,"37":0,"45":0,"47":0,"49":0,"50":0,"52":0,"53":0,"56":0,"57":0,"59":0,"60":0,"61":0,"63":0,"64":0,"66":0,"68":0,"70":0,"72":0,"74":0,"76":0,"78":0,"87":0,"89":0,"91":0,"92":0,"94":0,"95":0,"96":0,"99":0,"101":0,"102":0,"105":0,"108":0,"109":0,"111":0,"112":0,"114":0,"124":0,"126":0,"128":0,"129":0,"130":0,"131":0,"133":0,"134":0,"135":0,"137":0,"146":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"155":0,"156":0,"158":0,"159":0,"160":0,"162":0,"163":0,"166":0,"169":0,"170":0,"173":0,"176":0,"177":0,"180":0,"183":0,"185":0,"194":0,"196":0,"197":0,"198":0,"199":0,"200":0,"202":0,"203":0,"206":0,"207":0,"208":0,"210":0,"211":0,"213":0,"214":0,"218":0,"222":0,"225":0,"227":0,"235":0,"236":0,"238":0,"239":0,"241":0,"242":0,"245":0,"247":0,"251":0,"252":0,"254":0,"255":0,"258":0,"267":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"277":0,"281":1}}}